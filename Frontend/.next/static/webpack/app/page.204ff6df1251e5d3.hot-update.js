/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CJASON%5C%5CDesktop%5C%5CNew%20folder%5C%5Capp%5C%5Cpage.jsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CJASON%5C%5CDesktop%5C%5CNew%20folder%5C%5Capp%5C%5Cpage.jsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/page.jsx */ \"(app-pages-browser)/./app/page.jsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDSkFTT04lNUMlNUNEZXNrdG9wJTVDJTVDTmV3JTIwZm9sZGVyJTVDJTVDYXBwJTVDJTVDcGFnZS5qc3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSxzSkFBeUYiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXEpBU09OXFxcXERlc2t0b3BcXFxcTmV3IGZvbGRlclxcXFxhcHBcXFxccGFnZS5qc3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CJASON%5C%5CDesktop%5C%5CNew%20folder%5C%5Capp%5C%5Cpage.jsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvYnVmZmVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sa0JBQWtCLGFBQWEsd0JBQXdCLDBCQUEwQiw4QkFBOEIsU0FBUyxTQUFTLHVEQUF1RCx5RUFBeUUsdUJBQXVCLElBQUksS0FBSyxVQUFVLHFCQUFxQix3QkFBd0Isd0JBQXdCLG9CQUFvQixlQUFlLFVBQVUsa0VBQWtFLHFCQUFxQixjQUFjLG9CQUFvQixZQUFZLHVCQUF1QixpQkFBaUIsV0FBVyxXQUFXLGtCQUFrQiw0QkFBNEIsa0JBQWtCLHdCQUF3QixNQUFNLGlCQUFpQixXQUFXLFdBQVcsZ0NBQWdDLFFBQVEsZ0JBQWdCLE1BQU0sUUFBUSxJQUFJLE1BQU0sK0ZBQStGLGlCQUFpQixnQkFBZ0IsYUFBYSxVQUFVLGdEQUFnRCxhQUFhLFVBQVUseUVBQXlFLGdCQUFnQixhQUFhLFNBQVMsNEJBQTRCLGtEQUFrRCw0QkFBNEIsTUFBTSxTQUFTLFlBQVksSUFBSSxNQUFNLHFEQUFxRCwyQkFBMkIsa0JBQWtCLDBCQUEwQixNQUFNLGVBQWUsVUFBVSxTQUFTLFlBQVksa0JBQWtCLElBQUksTUFBTSxxQ0FBcUMsVUFBVSxTQUFTLGdDQUFnQyxlQUFlLHFCQUFxQiwyQ0FBMkMsbUJBQW1CLG9CQUFvQjtBQUM5ckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixhQUFhLCtHQUErRyxnQkFBZ0Isd0JBQXdCLHVCQUF1QixpQkFBaUIsZUFBZSwrQ0FBK0MsaUdBQWlHLGtLQUFrSyw2QkFBNkIsSUFBSSx3QkFBd0IsT0FBTyxlQUFlLFlBQVksOENBQThDLDJCQUEyQixvQkFBb0IsU0FBUyxjQUFjLGlEQUFpRCwrQkFBK0IsMkNBQTJDLG9CQUFvQixFQUFFLGlEQUFpRCwrQkFBK0IsMkNBQTJDLHdCQUF3QixFQUFFLHlCQUF5QixRQUFRLHVFQUF1RSx3QkFBd0IsMENBQTBDLFNBQVMsdUJBQXVCLHdCQUF3Qix3QkFBd0IsMEZBQTBGLHNCQUFzQixtQkFBbUIscUJBQXFCLHFCQUFxQix3QkFBd0IsdUJBQXVCLDBCQUEwQix3QkFBd0IsWUFBWSxtSkFBbUosbUVBQW1FLDhCQUE4Qix5SEFBeUgsOEJBQThCLHdCQUF3Qiw2RkFBNkYsNkJBQTZCLG1CQUFtQiwwQkFBMEIsb0JBQW9CLGNBQWMscUdBQXFHLHdEQUF3RCxtSkFBbUosNEJBQTRCLG9CQUFvQiw2REFBNkQseUNBQXlDLHVCQUF1Qix3QkFBd0IsOERBQThELGFBQWEsd0VBQXdFLHNCQUFzQixjQUFjLFNBQVMsdUJBQXVCLGtCQUFrQiw2RUFBNkUsdUJBQXVCLDZCQUE2QixxQkFBcUIsd0JBQXdCLGNBQWMsd0NBQXdDLCtCQUErQix1QkFBdUIsbUNBQW1DLHVCQUF1Qix5QkFBeUIsZ0NBQWdDLFNBQVMsMEJBQTBCLDRDQUE0Qyx3QkFBd0Isc0JBQXNCLG1CQUFtQixVQUFVLGVBQWUsU0FBUywwQkFBMEIsdUNBQXVDLHNCQUFzQixZQUFZLElBQUksTUFBTSxjQUFjLFNBQVMsZ0NBQWdDLHdCQUF3Qiw2REFBNkQsMEJBQTBCLDZEQUE2RCxNQUFNLGlDQUFpQyxvQkFBb0IsdUJBQXVCLHNCQUFzQixLQUFLLHdCQUF3QiwwQ0FBMEMsU0FBUyx1QkFBdUIsdUJBQXVCLDBCQUEwQixzQkFBc0IsaUJBQWlCLFNBQVMsZ0JBQWdCLFNBQVMseUJBQXlCLHNEQUFzRCx1QkFBdUIsd0JBQXdCLDZDQUE2Qyw4QkFBOEIsb0JBQW9CLFNBQVMsMkdBQTJHLFdBQVcsdUJBQXVCLFVBQVUsSUFBSSx3QkFBd0IscUNBQXFDLDBEQUEwRCxxQ0FBcUMsbUVBQW1FLG1FQUFtRSw2Q0FBNkMsNkZBQTZGLGtCQUFrQixlQUFlLGVBQWUsNEJBQTRCLElBQUksS0FBSyxnQkFBZ0IsT0FBTyxPQUFPLE9BQU8sZ0JBQWdCLGdCQUFnQixVQUFVLHlDQUF5QyxnQ0FBZ0Msb0pBQW9KLHVCQUF1QixtQ0FBbUMsc0JBQXNCLG1FQUFtRSxpQkFBaUIsdUJBQXVCLE1BQU0sa0JBQWtCLElBQUksUUFBUSxXQUFXLEtBQUssZ0JBQWdCLDRCQUE0QixRQUFRLFFBQVEsV0FBVyxLQUFLLFdBQVcsNkJBQTZCLGlCQUFpQix3QkFBd0IsbUVBQW1FLFlBQVksWUFBWSxVQUFVLHlCQUF5Qix1QkFBdUIsZ0JBQWdCLHFEQUFxRCxvQkFBb0Isd0JBQXdCLDRIQUE0SCxlQUFlLDhDQUE4QyxzQkFBc0IsWUFBWSxNQUFNLEVBQUUsVUFBVSwrQ0FBK0Msb0RBQW9ELCtEQUErRCx1QkFBdUIsNENBQTRDLGNBQWMsa0NBQWtDLHVCQUF1QixTQUFTLDZCQUE2Qiw2QkFBNkIsWUFBWSx1QkFBdUIsSUFBSSxrQkFBa0IsU0FBUyxpQ0FBaUMsY0FBYyxTQUFTLFNBQVMsT0FBTyxPQUFPLFNBQVMsU0FBUyxlQUFlLFlBQVksVUFBVSxvQ0FBb0Msa0RBQWtELHdDQUF3Qyx1REFBdUQsMENBQTBDLGtGQUFrRix5REFBeUQsdUJBQXVCLFNBQVMsZ0NBQWdDLHFCQUFxQixXQUFXLFVBQVUsT0FBTywwQ0FBMEMsa0JBQWtCLFlBQVksa0VBQWtFLFlBQVksSUFBSSxNQUFNLGlCQUFpQixhQUFhLDBDQUEwQyxrQkFBa0IsWUFBWSxrRUFBa0UsWUFBWSxJQUFJLE1BQU0saUJBQWlCLG1CQUFtQixhQUFhLDBDQUEwQyxrQkFBa0IsWUFBWSxrRUFBa0UsWUFBWSxJQUFJLE1BQU0saUJBQWlCLG1CQUFtQixtQkFBbUIsbUJBQW1CLGFBQWEsOENBQThDLGtCQUFrQixrQkFBa0IsbURBQW1ELDJDQUEyQywwREFBMEQsMkNBQTJDLHdFQUF3RSx3QkFBd0IsbUNBQW1DLDRDQUE0QyxTQUFTLDBCQUEwQix1Q0FBdUMsRUFBRSxrQkFBa0IsNEJBQTRCLHdCQUF3QixNQUFNLDZDQUE2QyxxREFBcUQsNkJBQTZCLHVDQUF1Qyx3QkFBd0Isa0hBQWtILGtCQUFrQixJQUFJLGtCQUFrQixlQUFlLGtCQUFrQixJQUFJLGtCQUFrQixjQUFjLHdDQUF3QywyQ0FBMkMsZUFBZSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsT0FBTyxPQUFPLE9BQU8sT0FBTyxxQkFBcUIsVUFBVSxVQUFVLG9CQUFvQixzQkFBc0IsbUJBQW1CLFlBQVksSUFBSSxLQUFLLGdCQUFnQixPQUFPLE9BQU8sT0FBTyxnQkFBZ0IsZ0JBQWdCLFVBQVUseUNBQXlDLHlCQUF5Qix3QkFBd0IsSUFBSSxJQUFJLHNCQUFzQixhQUFhLHVCQUF1QixjQUFjLEtBQUssbUJBQW1CLGlCQUFpQixvQkFBb0IsZ0JBQWdCLGNBQWMsa0JBQWtCLGFBQWEsU0FBUyxjQUFjLHdCQUF3QixtQkFBbUIsdUJBQXVCLGlCQUFpQixTQUFTLCtCQUErQiw2QkFBNkIsUUFBUSxxREFBcUQsTUFBTSxnREFBZ0QsS0FBSyxxREFBcUQsaUNBQWlDLDREQUE0RCxpQ0FBaUMsUUFBUSxlQUFlLGVBQWUsa0JBQWtCLDBCQUEwQiwyREFBMkQsMkJBQTJCLFNBQVMsSUFBSSxLQUFLLEtBQUssTUFBTSxtQkFBbUIsVUFBVSxZQUFZLEtBQUssNEJBQTRCLE1BQU0sTUFBTSxTQUFTLFFBQVEsSUFBSSxLQUFLLHFDQUFxQyxjQUFjLHdCQUF3QixLQUFLLGlCQUFpQixPQUFPLEtBQUssZUFBZSxRQUFRLEtBQUssS0FBSyxXQUFXLFlBQVksSUFBSSxLQUFLLDRCQUE0QixRQUFRLE9BQU8sZUFBZSxTQUFTLG1EQUFtRCxpQ0FBaUMsaURBQWlELDhDQUE4Qyx5REFBeUQsK0NBQStDLDJCQUEyQixlQUFlLGlCQUFpQixPQUFPLElBQUksS0FBSyxZQUFZLFFBQVEsS0FBSyxlQUFlLFVBQVUsTUFBTSxZQUFZLElBQUksS0FBSyxtQ0FBbUMsMkJBQTJCLFNBQVMsU0FBUyw0QkFBNEIsbURBQW1ELDZCQUE2Qix5Q0FBeUMsOEJBQThCLDJCQUEyQiw4QkFBOEIsMENBQTBDLDRCQUE0QixzREFBc0QsK0NBQStDLGtCQUFrQixTQUFTLGNBQWMsSUFBSSw0Q0FBNEMsSUFBSSxjQUFjLElBQUkscUJBQXFCLFFBQVEsZ0JBQWdCLFFBQVEsMEJBQTBCLEtBQUssSUFBSSxhQUFhLEtBQUssMkZBQTJGLG9CQUFvQiwwQkFBMEIsMENBQTBDLCtEQUErRCxlQUFlLFlBQVksTUFBTSxFQUFFLFVBQVUsc0NBQXNDLG9EQUFvRCwwQ0FBMEMseURBQXlELDRDQUE0QyxpRkFBaUYseURBQXlELHVCQUF1QixVQUFVLDBDQUEwQyxPQUFPLG1FQUFtRSw0QkFBNEIsd0JBQXdCLDBCQUEwQixLQUFLLHNDQUFzQywwQkFBMEIsdUJBQXVCLFNBQVMsUUFBUSxXQUFXLFdBQVcsV0FBVyxnQ0FBZ0MsV0FBVyxZQUFZLFVBQVUsaUJBQWlCLElBQUksTUFBTSxnQkFBZ0Isa0JBQWtCLGlCQUFpQixVQUFVLEtBQUssTUFBTSxnQkFBZ0IsU0FBUyxpQ0FBaUMsNEJBQTRCLCtCQUErQixLQUFLLE1BQU0sZ0JBQWdCLFNBQVMsU0FBUyxnREFBZ0QsdUNBQXVDLHVCQUF1QixPQUFPLGFBQWEsUUFBUSxJQUFJLGlCQUFpQixTQUFTLDBCQUEwQixlQUFlLFVBQVUsS0FBSyxnQ0FBZ0MsV0FBVyxrQ0FBa0MsZUFBZSxTQUFTLDJDQUEyQyxTQUFTLFFBQVEsV0FBVyxxREFBcUQsU0FBUywyQkFBMkIsU0FBUyx1QkFBdUIsWUFBWSxJQUFJLEtBQUssaUNBQWlDLFNBQVMsNEJBQTRCLFNBQVMsdUJBQXVCLFlBQVksSUFBSSxLQUFLLDZCQUE2QixTQUFTLHlCQUF5QixlQUFlLGVBQWUsb0JBQW9CLFNBQVMsWUFBWSxJQUFJLEtBQUssV0FBVyxTQUFTLDZCQUE2QixtQkFBbUIsU0FBUyxZQUFZLFdBQVcsTUFBTSx3Q0FBd0MsU0FBUywyQ0FBMkMsa0JBQWtCLE1BQU0sc0JBQXNCLFFBQVEsS0FBSyxXQUFXLGFBQWEsSUFBSSxRQUFRLEtBQUssV0FBVyxhQUFhLElBQUksV0FBVyx5QkFBeUIsMENBQTBDLFVBQVUsNEJBQTRCLDJEQUEyRCx1RUFBdUUsdURBQXVELFFBQVEsUUFBUSxtQ0FBbUMsY0FBYyxRQUFRLFFBQVEsdUJBQXVCLGVBQWUsVUFBVSx1REFBdUQsUUFBUSxRQUFRLE9BQU8sNkJBQTZCLGtCQUFrQixRQUFRLHFCQUFxQixpQkFBaUIsVUFBVSxtREFBbUQsUUFBUSxtQ0FBbUMsZ0JBQWdCLHlEQUF5RCxRQUFRLG1DQUFtQyw2QkFBNkIseURBQXlELFFBQVEsbUNBQW1DLDZCQUE2Qix5REFBeUQsUUFBUSxtQ0FBbUMsK0RBQStELHlEQUF5RCxRQUFRLG1DQUFtQyxnRUFBZ0UscURBQXFELFFBQVEsUUFBUSxtQ0FBbUMsY0FBYyxRQUFRLFFBQVEsdUJBQXVCLGVBQWUsT0FBTywyQkFBMkIsVUFBVSxxREFBcUQsUUFBUSxRQUFRLG1DQUFtQyxRQUFRLFFBQVEsa0JBQWtCLHFCQUFxQixpQkFBaUIsT0FBTywyQkFBMkIsVUFBVSxpREFBaUQsUUFBUSxtQ0FBbUMsaUNBQWlDLDBCQUEwQix1REFBdUQsUUFBUSxtQ0FBbUMsMkJBQTJCLCtCQUErQix1REFBdUQsUUFBUSxtQ0FBbUMsMkJBQTJCLCtCQUErQix1REFBdUQsUUFBUSxtQ0FBbUMseURBQXlELHVEQUF1RCxRQUFRLG1DQUFtQyx5REFBeUQsdURBQXVELFFBQVEsbUNBQW1DLGlDQUFpQyx1REFBdUQsUUFBUSxtQ0FBbUMsa0NBQWtDLHlEQUF5RCxRQUFRLG1DQUFtQyxpQ0FBaUMseURBQXlELFFBQVEsbUNBQW1DLGtDQUFrQywrQkFBK0IsMEZBQTBGLHNFQUFzRSwyREFBMkQsMkRBQTJELEtBQUssUUFBUSxRQUFRLE9BQU8sd0JBQXdCLHlCQUF5QixRQUFRLFFBQVEsY0FBYyx1QkFBdUIsa0JBQWtCLFlBQVksMkRBQTJELEtBQUssUUFBUSxRQUFRLE9BQU8sd0JBQXdCLHlCQUF5QixVQUFVLFFBQVEsZ0JBQWdCLHdCQUF3QixrQkFBa0IsWUFBWSx1REFBdUQsS0FBSyxRQUFRLGlDQUFpQyxjQUFjLFlBQVksNkRBQTZELEtBQUssUUFBUSxtQ0FBbUMsY0FBYyxnQkFBZ0IsWUFBWSw2REFBNkQsS0FBSyxRQUFRLG1DQUFtQyxjQUFjLGdCQUFnQixZQUFZLDZEQUE2RCxLQUFLLFFBQVEsd0NBQXdDLGlCQUFpQixpQkFBaUIsZ0JBQWdCLGNBQWMsWUFBWSw2REFBNkQsS0FBSyxRQUFRLHdDQUF3QyxlQUFlLGlCQUFpQixnQkFBZ0IsZ0JBQWdCLFlBQVkseURBQXlELEtBQUssUUFBUSxPQUFPLHdCQUF3Qiw0QkFBNEIsUUFBUSxRQUFRLFFBQVEsY0FBYyx1QkFBdUIsZ0NBQWdDLElBQUkseUJBQXlCLFlBQVkseURBQXlELEtBQUssUUFBUSxPQUFPLHdCQUF3Qiw0QkFBNEIsVUFBVSxRQUFRLFFBQVEsZ0JBQWdCLHdCQUF3QixnQ0FBZ0MsSUFBSSx5QkFBeUIsWUFBWSxxREFBcUQsS0FBSyxRQUFRLG9DQUFvQyxpQkFBaUIsY0FBYyxZQUFZLDJEQUEyRCxLQUFLLFFBQVEsd0NBQXdDLGNBQWMsZ0JBQWdCLFlBQVksMkRBQTJELEtBQUssUUFBUSx3Q0FBd0MsY0FBYyxnQkFBZ0IsWUFBWSwyREFBMkQsS0FBSyxRQUFRLGtEQUFrRCxjQUFjLGdCQUFnQixpQkFBaUIsaUJBQWlCLFlBQVksMkRBQTJELEtBQUssUUFBUSxrREFBa0Qsd0JBQXdCLGVBQWUsaUJBQWlCLGdCQUFnQixnQkFBZ0IsWUFBWSxtQ0FBbUMsMkRBQTJELGtEQUFrRCwrQkFBK0IsS0FBSyxRQUFRLE9BQU8saUVBQWlFLHNCQUFzQixXQUFXLDJEQUEyRCxvQ0FBb0MsMkRBQTJELHFDQUFxQyxnQ0FBZ0MsS0FBSyxRQUFRLE9BQU8sbUVBQW1FLHNCQUFzQixXQUFXLDZEQUE2RCxxQ0FBcUMsNkRBQTZELHNDQUFzQyw2Q0FBNkMsMEVBQTBFLFVBQVUsMkJBQTJCLDBCQUEwQixVQUFVLGdCQUFnQixrQkFBa0IsMENBQTBDLFFBQVEsa0RBQWtELGtFQUFrRSx1REFBdUQsK0JBQStCLG1CQUFtQixlQUFlLFVBQVUsa0VBQWtFLHVCQUF1Qiw0QkFBNEIsY0FBYyxLQUFLLEtBQUssa0JBQWtCLEtBQUssc0RBQXNELFVBQVUsNkNBQTZDLHdCQUF3Qix3QkFBd0IsSUFBSSxJQUFJLGNBQWMsNkJBQTZCLElBQUksY0FBYyx1Q0FBdUMsaURBQWlELCtDQUErQyw0Q0FBNEMsaUJBQWlCLHNCQUFzQixvQ0FBb0MsTUFBTSw2QkFBNkIsUUFBUSw4QkFBOEIsWUFBWSxzQ0FBc0MsMkNBQTJDLFNBQVMsWUFBWSxRQUFRLGtDQUFrQyxVQUFVLE1BQU0sd0JBQXdCLFFBQVEsSUFBSSxLQUFLLFdBQVcsS0FBSyw0Q0FBNEMsZUFBZSxVQUFVLHlFQUF5RSxRQUFRLE1BQU0sS0FBSyxrQkFBa0IsYUFBYSwwQkFBMEIsd0JBQXdCLGtCQUFrQix5QkFBeUIsdUJBQXVCLHNCQUFzQixRQUFRLFNBQVMsMEJBQTBCLGNBQWMsTUFBTSxlQUFlLFdBQVcsU0FBUyxZQUFZLElBQUksS0FBSyxrQkFBa0IscUJBQXFCLE9BQU8sWUFBWSxpQ0FBaUMsU0FBUyxpQkFBaUIsaUNBQWlDLFNBQVMsSUFBSSxTQUFTLFlBQVksaUNBQWlDLElBQUksU0FBUyw4QkFBOEIsV0FBVyxpQ0FBaUMsT0FBTyxVQUFVLGtCQUFrQixVQUFVLGdCQUFnQixrQkFBa0IsMEJBQTBCLGlCQUFpQixrQkFBa0IsdUNBQXVDLG1CQUFtQixrQkFBa0Isb0RBQW9ELEtBQUssdUNBQXVDLFNBQVMseUJBQXlCLFNBQVMsWUFBWSxXQUFXLEtBQUssNEJBQTRCLFNBQVMsNkJBQTZCLFVBQVUsU0FBUyxZQUFZLFdBQVcsS0FBSyxrQkFBa0Isa0JBQWtCLE9BQU8sUUFBUSxVQUFVLFVBQVUsU0FBUywwQkFBMEIscUNBQXFDLDZCQUE2QixZQUFZLElBQUksS0FBSyxvQ0FBb0MsWUFBWSxTQUFTLHlCQUF5QiwyR0FBMkcsd0JBQXdCLGFBQWEsaUJBQWlCLHlCQUF5QixxQkFBcUIsWUFBWSxLQUFLLEtBQUssV0FBVyxZQUFZLEtBQUssS0FBSyxrQkFBa0IsU0FBUyxHQUFHO0FBQ3p4dkI7QUFDQSwyQkFBMkIsUUFBUSxjQUFjLGVBQWUsV0FBVyxTQUFTLGNBQWMsYUFBYSxhQUFhLEtBQUssY0FBYyxPQUFPLEtBQUssS0FBSyxJQUFJLDJCQUEyQixjQUFjLE9BQU8sS0FBSyxLQUFLLElBQUksMkJBQTJCLFVBQVUsTUFBTSxlQUFlLCtCQUErQixLQUFLLGtCQUFrQixNQUFNLGtDQUFrQyw4QkFBOEIsVUFBVSxjQUFjLGVBQWUsV0FBVywrQ0FBK0MsY0FBYyxhQUFhLDRCQUE0QixjQUFjLDJCQUEyQixlQUFlLElBQUksS0FBSyxtQ0FBbUMsMkJBQTJCLElBQUksS0FBSyxXQUFXLE9BQU8sS0FBSyxxQkFBcUIsV0FBVyxJQUFJLEtBQUssV0FBVyxJQUFJLElBQUksZ0JBQWdCLHdCQUF3QixNQUFNLEtBQUssa0NBQWtDLEtBQUssS0FBSyxLQUFLLGdDQUFnQyxTQUFTLEtBQUssS0FBSyxJQUFJLGdDQUFnQyxtQkFBbUIsU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssOEJBQThCLGlCQUFpQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxKQVNPTlxcRGVza3RvcFxcTmV3IGZvbGRlclxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxjb21waWxlZFxcYnVmZmVyXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17Njc1OmZ1bmN0aW9uKGUscil7XCJ1c2Ugc3RyaWN0XCI7ci5ieXRlTGVuZ3RoPWJ5dGVMZW5ndGg7ci50b0J5dGVBcnJheT10b0J5dGVBcnJheTtyLmZyb21CeXRlQXJyYXk9ZnJvbUJ5dGVBcnJheTt2YXIgdD1bXTt2YXIgZj1bXTt2YXIgbj10eXBlb2YgVWludDhBcnJheSE9PVwidW5kZWZpbmVkXCI/VWludDhBcnJheTpBcnJheTt2YXIgaT1cIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky9cIjtmb3IodmFyIG89MCx1PWkubGVuZ3RoO288dTsrK28pe3Rbb109aVtvXTtmW2kuY2hhckNvZGVBdChvKV09b31mW1wiLVwiLmNoYXJDb2RlQXQoMCldPTYyO2ZbXCJfXCIuY2hhckNvZGVBdCgwKV09NjM7ZnVuY3Rpb24gZ2V0TGVucyhlKXt2YXIgcj1lLmxlbmd0aDtpZihyJTQ+MCl7dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBzdHJpbmcuIExlbmd0aCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgNFwiKX12YXIgdD1lLmluZGV4T2YoXCI9XCIpO2lmKHQ9PT0tMSl0PXI7dmFyIGY9dD09PXI/MDo0LXQlNDtyZXR1cm5bdCxmXX1mdW5jdGlvbiBieXRlTGVuZ3RoKGUpe3ZhciByPWdldExlbnMoZSk7dmFyIHQ9clswXTt2YXIgZj1yWzFdO3JldHVybih0K2YpKjMvNC1mfWZ1bmN0aW9uIF9ieXRlTGVuZ3RoKGUscix0KXtyZXR1cm4ocit0KSozLzQtdH1mdW5jdGlvbiB0b0J5dGVBcnJheShlKXt2YXIgcjt2YXIgdD1nZXRMZW5zKGUpO3ZhciBpPXRbMF07dmFyIG89dFsxXTt2YXIgdT1uZXcgbihfYnl0ZUxlbmd0aChlLGksbykpO3ZhciBhPTA7dmFyIHM9bz4wP2ktNDppO3ZhciBoO2ZvcihoPTA7aDxzO2grPTQpe3I9ZltlLmNoYXJDb2RlQXQoaCldPDwxOHxmW2UuY2hhckNvZGVBdChoKzEpXTw8MTJ8ZltlLmNoYXJDb2RlQXQoaCsyKV08PDZ8ZltlLmNoYXJDb2RlQXQoaCszKV07dVthKytdPXI+PjE2JjI1NTt1W2ErK109cj4+OCYyNTU7dVthKytdPXImMjU1fWlmKG89PT0yKXtyPWZbZS5jaGFyQ29kZUF0KGgpXTw8MnxmW2UuY2hhckNvZGVBdChoKzEpXT4+NDt1W2ErK109ciYyNTV9aWYobz09PTEpe3I9ZltlLmNoYXJDb2RlQXQoaCldPDwxMHxmW2UuY2hhckNvZGVBdChoKzEpXTw8NHxmW2UuY2hhckNvZGVBdChoKzIpXT4+Mjt1W2ErK109cj4+OCYyNTU7dVthKytdPXImMjU1fXJldHVybiB1fWZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NChlKXtyZXR1cm4gdFtlPj4xOCY2M10rdFtlPj4xMiY2M10rdFtlPj42JjYzXSt0W2UmNjNdfWZ1bmN0aW9uIGVuY29kZUNodW5rKGUscix0KXt2YXIgZjt2YXIgbj1bXTtmb3IodmFyIGk9cjtpPHQ7aSs9Myl7Zj0oZVtpXTw8MTYmMTY3MTE2ODApKyhlW2krMV08PDgmNjUyODApKyhlW2krMl0mMjU1KTtuLnB1c2godHJpcGxldFRvQmFzZTY0KGYpKX1yZXR1cm4gbi5qb2luKFwiXCIpfWZ1bmN0aW9uIGZyb21CeXRlQXJyYXkoZSl7dmFyIHI7dmFyIGY9ZS5sZW5ndGg7dmFyIG49ZiUzO3ZhciBpPVtdO3ZhciBvPTE2MzgzO2Zvcih2YXIgdT0wLGE9Zi1uO3U8YTt1Kz1vKXtpLnB1c2goZW5jb2RlQ2h1bmsoZSx1LHUrbz5hP2E6dStvKSl9aWYobj09PTEpe3I9ZVtmLTFdO2kucHVzaCh0W3I+PjJdK3Rbcjw8NCY2M10rXCI9PVwiKX1lbHNlIGlmKG49PT0yKXtyPShlW2YtMl08PDgpK2VbZi0xXTtpLnB1c2godFtyPj4xMF0rdFtyPj40JjYzXSt0W3I8PDImNjNdK1wiPVwiKX1yZXR1cm4gaS5qb2luKFwiXCIpfX0sNzI6ZnVuY3Rpb24oZSxyLHQpe1widXNlIHN0cmljdFwiO1xuLyohXG4gKiBUaGUgYnVmZmVyIG1vZHVsZSBmcm9tIG5vZGUuanMsIGZvciB0aGUgYnJvd3Nlci5cbiAqXG4gKiBAYXV0aG9yICAgRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cHM6Ly9mZXJvc3Mub3JnPlxuICogQGxpY2Vuc2UgIE1JVFxuICovdmFyIGY9dCg2NzUpO3ZhciBuPXQoNzgzKTt2YXIgaT10eXBlb2YgU3ltYm9sPT09XCJmdW5jdGlvblwiJiZ0eXBlb2YgU3ltYm9sLmZvcj09PVwiZnVuY3Rpb25cIj9TeW1ib2wuZm9yKFwibm9kZWpzLnV0aWwuaW5zcGVjdC5jdXN0b21cIik6bnVsbDtyLkJ1ZmZlcj1CdWZmZXI7ci5TbG93QnVmZmVyPVNsb3dCdWZmZXI7ci5JTlNQRUNUX01BWF9CWVRFUz01MDt2YXIgbz0yMTQ3NDgzNjQ3O3Iua01heExlbmd0aD1vO0J1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUPXR5cGVkQXJyYXlTdXBwb3J0KCk7aWYoIUJ1ZmZlci5UWVBFRF9BUlJBWV9TVVBQT1JUJiZ0eXBlb2YgY29uc29sZSE9PVwidW5kZWZpbmVkXCImJnR5cGVvZiBjb25zb2xlLmVycm9yPT09XCJmdW5jdGlvblwiKXtjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGxhY2tzIHR5cGVkIGFycmF5IChVaW50OEFycmF5KSBzdXBwb3J0IHdoaWNoIGlzIHJlcXVpcmVkIGJ5IFwiK1wiYGJ1ZmZlcmAgdjUueC4gVXNlIGBidWZmZXJgIHY0LnggaWYgeW91IHJlcXVpcmUgb2xkIGJyb3dzZXIgc3VwcG9ydC5cIil9ZnVuY3Rpb24gdHlwZWRBcnJheVN1cHBvcnQoKXt0cnl7dmFyIGU9bmV3IFVpbnQ4QXJyYXkoMSk7dmFyIHI9e2ZvbzpmdW5jdGlvbigpe3JldHVybiA0Mn19O09iamVjdC5zZXRQcm90b3R5cGVPZihyLFVpbnQ4QXJyYXkucHJvdG90eXBlKTtPYmplY3Quc2V0UHJvdG90eXBlT2YoZSxyKTtyZXR1cm4gZS5mb28oKT09PTQyfWNhdGNoKGUpe3JldHVybiBmYWxzZX19T2JqZWN0LmRlZmluZVByb3BlcnR5KEJ1ZmZlci5wcm90b3R5cGUsXCJwYXJlbnRcIix7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe2lmKCFCdWZmZXIuaXNCdWZmZXIodGhpcykpcmV0dXJuIHVuZGVmaW5lZDtyZXR1cm4gdGhpcy5idWZmZXJ9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KEJ1ZmZlci5wcm90b3R5cGUsXCJvZmZzZXRcIix7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe2lmKCFCdWZmZXIuaXNCdWZmZXIodGhpcykpcmV0dXJuIHVuZGVmaW5lZDtyZXR1cm4gdGhpcy5ieXRlT2Zmc2V0fX0pO2Z1bmN0aW9uIGNyZWF0ZUJ1ZmZlcihlKXtpZihlPm8pe3Rocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgXCInK2UrJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpfXZhciByPW5ldyBVaW50OEFycmF5KGUpO09iamVjdC5zZXRQcm90b3R5cGVPZihyLEJ1ZmZlci5wcm90b3R5cGUpO3JldHVybiByfWZ1bmN0aW9uIEJ1ZmZlcihlLHIsdCl7aWYodHlwZW9mIGU9PT1cIm51bWJlclwiKXtpZih0eXBlb2Ygcj09PVwic3RyaW5nXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcInN0cmluZ1wiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBzdHJpbmcuIFJlY2VpdmVkIHR5cGUgbnVtYmVyJyl9cmV0dXJuIGFsbG9jVW5zYWZlKGUpfXJldHVybiBmcm9tKGUscix0KX1CdWZmZXIucG9vbFNpemU9ODE5MjtmdW5jdGlvbiBmcm9tKGUscix0KXtpZih0eXBlb2YgZT09PVwic3RyaW5nXCIpe3JldHVybiBmcm9tU3RyaW5nKGUscil9aWYoQXJyYXlCdWZmZXIuaXNWaWV3KGUpKXtyZXR1cm4gZnJvbUFycmF5TGlrZShlKX1pZihlPT1udWxsKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiVGhlIGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgc3RyaW5nLCBCdWZmZXIsIEFycmF5QnVmZmVyLCBBcnJheSwgXCIrXCJvciBBcnJheS1saWtlIE9iamVjdC4gUmVjZWl2ZWQgdHlwZSBcIit0eXBlb2YgZSl9aWYoaXNJbnN0YW5jZShlLEFycmF5QnVmZmVyKXx8ZSYmaXNJbnN0YW5jZShlLmJ1ZmZlcixBcnJheUJ1ZmZlcikpe3JldHVybiBmcm9tQXJyYXlCdWZmZXIoZSxyLHQpfWlmKHR5cGVvZiBTaGFyZWRBcnJheUJ1ZmZlciE9PVwidW5kZWZpbmVkXCImJihpc0luc3RhbmNlKGUsU2hhcmVkQXJyYXlCdWZmZXIpfHxlJiZpc0luc3RhbmNlKGUuYnVmZmVyLFNoYXJlZEFycmF5QnVmZmVyKSkpe3JldHVybiBmcm9tQXJyYXlCdWZmZXIoZSxyLHQpfWlmKHR5cGVvZiBlPT09XCJudW1iZXJcIil7dGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwidmFsdWVcIiBhcmd1bWVudCBtdXN0IG5vdCBiZSBvZiB0eXBlIG51bWJlci4gUmVjZWl2ZWQgdHlwZSBudW1iZXInKX12YXIgZj1lLnZhbHVlT2YmJmUudmFsdWVPZigpO2lmKGYhPW51bGwmJmYhPT1lKXtyZXR1cm4gQnVmZmVyLmZyb20oZixyLHQpfXZhciBuPWZyb21PYmplY3QoZSk7aWYobilyZXR1cm4gbjtpZih0eXBlb2YgU3ltYm9sIT09XCJ1bmRlZmluZWRcIiYmU3ltYm9sLnRvUHJpbWl0aXZlIT1udWxsJiZ0eXBlb2YgZVtTeW1ib2wudG9QcmltaXRpdmVdPT09XCJmdW5jdGlvblwiKXtyZXR1cm4gQnVmZmVyLmZyb20oZVtTeW1ib2wudG9QcmltaXRpdmVdKFwic3RyaW5nXCIpLHIsdCl9dGhyb3cgbmV3IFR5cGVFcnJvcihcIlRoZSBmaXJzdCBhcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB0eXBlIHN0cmluZywgQnVmZmVyLCBBcnJheUJ1ZmZlciwgQXJyYXksIFwiK1wib3IgQXJyYXktbGlrZSBPYmplY3QuIFJlY2VpdmVkIHR5cGUgXCIrdHlwZW9mIGUpfUJ1ZmZlci5mcm9tPWZ1bmN0aW9uKGUscix0KXtyZXR1cm4gZnJvbShlLHIsdCl9O09iamVjdC5zZXRQcm90b3R5cGVPZihCdWZmZXIucHJvdG90eXBlLFVpbnQ4QXJyYXkucHJvdG90eXBlKTtPYmplY3Quc2V0UHJvdG90eXBlT2YoQnVmZmVyLFVpbnQ4QXJyYXkpO2Z1bmN0aW9uIGFzc2VydFNpemUoZSl7aWYodHlwZW9mIGUhPT1cIm51bWJlclwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKCdcInNpemVcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgbnVtYmVyJyl9ZWxzZSBpZihlPDApe3Rocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgXCInK2UrJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpfX1mdW5jdGlvbiBhbGxvYyhlLHIsdCl7YXNzZXJ0U2l6ZShlKTtpZihlPD0wKXtyZXR1cm4gY3JlYXRlQnVmZmVyKGUpfWlmKHIhPT11bmRlZmluZWQpe3JldHVybiB0eXBlb2YgdD09PVwic3RyaW5nXCI/Y3JlYXRlQnVmZmVyKGUpLmZpbGwocix0KTpjcmVhdGVCdWZmZXIoZSkuZmlsbChyKX1yZXR1cm4gY3JlYXRlQnVmZmVyKGUpfUJ1ZmZlci5hbGxvYz1mdW5jdGlvbihlLHIsdCl7cmV0dXJuIGFsbG9jKGUscix0KX07ZnVuY3Rpb24gYWxsb2NVbnNhZmUoZSl7YXNzZXJ0U2l6ZShlKTtyZXR1cm4gY3JlYXRlQnVmZmVyKGU8MD8wOmNoZWNrZWQoZSl8MCl9QnVmZmVyLmFsbG9jVW5zYWZlPWZ1bmN0aW9uKGUpe3JldHVybiBhbGxvY1Vuc2FmZShlKX07QnVmZmVyLmFsbG9jVW5zYWZlU2xvdz1mdW5jdGlvbihlKXtyZXR1cm4gYWxsb2NVbnNhZmUoZSl9O2Z1bmN0aW9uIGZyb21TdHJpbmcoZSxyKXtpZih0eXBlb2YgciE9PVwic3RyaW5nXCJ8fHI9PT1cIlwiKXtyPVwidXRmOFwifWlmKCFCdWZmZXIuaXNFbmNvZGluZyhyKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK3IpfXZhciB0PWJ5dGVMZW5ndGgoZSxyKXwwO3ZhciBmPWNyZWF0ZUJ1ZmZlcih0KTt2YXIgbj1mLndyaXRlKGUscik7aWYobiE9PXQpe2Y9Zi5zbGljZSgwLG4pfXJldHVybiBmfWZ1bmN0aW9uIGZyb21BcnJheUxpa2UoZSl7dmFyIHI9ZS5sZW5ndGg8MD8wOmNoZWNrZWQoZS5sZW5ndGgpfDA7dmFyIHQ9Y3JlYXRlQnVmZmVyKHIpO2Zvcih2YXIgZj0wO2Y8cjtmKz0xKXt0W2ZdPWVbZl0mMjU1fXJldHVybiB0fWZ1bmN0aW9uIGZyb21BcnJheUJ1ZmZlcihlLHIsdCl7aWYocjwwfHxlLmJ5dGVMZW5ndGg8cil7dGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1wib2Zmc2V0XCIgaXMgb3V0c2lkZSBvZiBidWZmZXIgYm91bmRzJyl9aWYoZS5ieXRlTGVuZ3RoPHIrKHR8fDApKXt0aHJvdyBuZXcgUmFuZ2VFcnJvcignXCJsZW5ndGhcIiBpcyBvdXRzaWRlIG9mIGJ1ZmZlciBib3VuZHMnKX12YXIgZjtpZihyPT09dW5kZWZpbmVkJiZ0PT09dW5kZWZpbmVkKXtmPW5ldyBVaW50OEFycmF5KGUpfWVsc2UgaWYodD09PXVuZGVmaW5lZCl7Zj1uZXcgVWludDhBcnJheShlLHIpfWVsc2V7Zj1uZXcgVWludDhBcnJheShlLHIsdCl9T2JqZWN0LnNldFByb3RvdHlwZU9mKGYsQnVmZmVyLnByb3RvdHlwZSk7cmV0dXJuIGZ9ZnVuY3Rpb24gZnJvbU9iamVjdChlKXtpZihCdWZmZXIuaXNCdWZmZXIoZSkpe3ZhciByPWNoZWNrZWQoZS5sZW5ndGgpfDA7dmFyIHQ9Y3JlYXRlQnVmZmVyKHIpO2lmKHQubGVuZ3RoPT09MCl7cmV0dXJuIHR9ZS5jb3B5KHQsMCwwLHIpO3JldHVybiB0fWlmKGUubGVuZ3RoIT09dW5kZWZpbmVkKXtpZih0eXBlb2YgZS5sZW5ndGghPT1cIm51bWJlclwifHxudW1iZXJJc05hTihlLmxlbmd0aCkpe3JldHVybiBjcmVhdGVCdWZmZXIoMCl9cmV0dXJuIGZyb21BcnJheUxpa2UoZSl9aWYoZS50eXBlPT09XCJCdWZmZXJcIiYmQXJyYXkuaXNBcnJheShlLmRhdGEpKXtyZXR1cm4gZnJvbUFycmF5TGlrZShlLmRhdGEpfX1mdW5jdGlvbiBjaGVja2VkKGUpe2lmKGU+PW8pe3Rocm93IG5ldyBSYW5nZUVycm9yKFwiQXR0ZW1wdCB0byBhbGxvY2F0ZSBCdWZmZXIgbGFyZ2VyIHRoYW4gbWF4aW11bSBcIitcInNpemU6IDB4XCIrby50b1N0cmluZygxNikrXCIgYnl0ZXNcIil9cmV0dXJuIGV8MH1mdW5jdGlvbiBTbG93QnVmZmVyKGUpe2lmKCtlIT1lKXtlPTB9cmV0dXJuIEJ1ZmZlci5hbGxvYygrZSl9QnVmZmVyLmlzQnVmZmVyPWZ1bmN0aW9uIGlzQnVmZmVyKGUpe3JldHVybiBlIT1udWxsJiZlLl9pc0J1ZmZlcj09PXRydWUmJmUhPT1CdWZmZXIucHJvdG90eXBlfTtCdWZmZXIuY29tcGFyZT1mdW5jdGlvbiBjb21wYXJlKGUscil7aWYoaXNJbnN0YW5jZShlLFVpbnQ4QXJyYXkpKWU9QnVmZmVyLmZyb20oZSxlLm9mZnNldCxlLmJ5dGVMZW5ndGgpO2lmKGlzSW5zdGFuY2UocixVaW50OEFycmF5KSlyPUJ1ZmZlci5mcm9tKHIsci5vZmZzZXQsci5ieXRlTGVuZ3RoKTtpZighQnVmZmVyLmlzQnVmZmVyKGUpfHwhQnVmZmVyLmlzQnVmZmVyKHIpKXt0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJidWYxXCIsIFwiYnVmMlwiIGFyZ3VtZW50cyBtdXN0IGJlIG9uZSBvZiB0eXBlIEJ1ZmZlciBvciBVaW50OEFycmF5Jyl9aWYoZT09PXIpcmV0dXJuIDA7dmFyIHQ9ZS5sZW5ndGg7dmFyIGY9ci5sZW5ndGg7Zm9yKHZhciBuPTAsaT1NYXRoLm1pbih0LGYpO248aTsrK24pe2lmKGVbbl0hPT1yW25dKXt0PWVbbl07Zj1yW25dO2JyZWFrfX1pZih0PGYpcmV0dXJuLTE7aWYoZjx0KXJldHVybiAxO3JldHVybiAwfTtCdWZmZXIuaXNFbmNvZGluZz1mdW5jdGlvbiBpc0VuY29kaW5nKGUpe3N3aXRjaChTdHJpbmcoZSkudG9Mb3dlckNhc2UoKSl7Y2FzZVwiaGV4XCI6Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6Y2FzZVwiYXNjaWlcIjpjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpjYXNlXCJiYXNlNjRcIjpjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4gdHJ1ZTtkZWZhdWx0OnJldHVybiBmYWxzZX19O0J1ZmZlci5jb25jYXQ9ZnVuY3Rpb24gY29uY2F0KGUscil7aWYoIUFycmF5LmlzQXJyYXkoZSkpe3Rocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpfWlmKGUubGVuZ3RoPT09MCl7cmV0dXJuIEJ1ZmZlci5hbGxvYygwKX12YXIgdDtpZihyPT09dW5kZWZpbmVkKXtyPTA7Zm9yKHQ9MDt0PGUubGVuZ3RoOysrdCl7cis9ZVt0XS5sZW5ndGh9fXZhciBmPUJ1ZmZlci5hbGxvY1Vuc2FmZShyKTt2YXIgbj0wO2Zvcih0PTA7dDxlLmxlbmd0aDsrK3Qpe3ZhciBpPWVbdF07aWYoaXNJbnN0YW5jZShpLFVpbnQ4QXJyYXkpKXtpPUJ1ZmZlci5mcm9tKGkpfWlmKCFCdWZmZXIuaXNCdWZmZXIoaSkpe3Rocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpfWkuY29weShmLG4pO24rPWkubGVuZ3RofXJldHVybiBmfTtmdW5jdGlvbiBieXRlTGVuZ3RoKGUscil7aWYoQnVmZmVyLmlzQnVmZmVyKGUpKXtyZXR1cm4gZS5sZW5ndGh9aWYoQXJyYXlCdWZmZXIuaXNWaWV3KGUpfHxpc0luc3RhbmNlKGUsQXJyYXlCdWZmZXIpKXtyZXR1cm4gZS5ieXRlTGVuZ3RofWlmKHR5cGVvZiBlIT09XCJzdHJpbmdcIil7dGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwic3RyaW5nXCIgYXJndW1lbnQgbXVzdCBiZSBvbmUgb2YgdHlwZSBzdHJpbmcsIEJ1ZmZlciwgb3IgQXJyYXlCdWZmZXIuICcrXCJSZWNlaXZlZCB0eXBlIFwiK3R5cGVvZiBlKX12YXIgdD1lLmxlbmd0aDt2YXIgZj1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXT09PXRydWU7aWYoIWYmJnQ9PT0wKXJldHVybiAwO3ZhciBuPWZhbHNlO2Zvcig7Oyl7c3dpdGNoKHIpe2Nhc2VcImFzY2lpXCI6Y2FzZVwibGF0aW4xXCI6Y2FzZVwiYmluYXJ5XCI6cmV0dXJuIHQ7Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6cmV0dXJuIHV0ZjhUb0J5dGVzKGUpLmxlbmd0aDtjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4gdCoyO2Nhc2VcImhleFwiOnJldHVybiB0Pj4+MTtjYXNlXCJiYXNlNjRcIjpyZXR1cm4gYmFzZTY0VG9CeXRlcyhlKS5sZW5ndGg7ZGVmYXVsdDppZihuKXtyZXR1cm4gZj8tMTp1dGY4VG9CeXRlcyhlKS5sZW5ndGh9cj0oXCJcIityKS50b0xvd2VyQ2FzZSgpO249dHJ1ZX19fUJ1ZmZlci5ieXRlTGVuZ3RoPWJ5dGVMZW5ndGg7ZnVuY3Rpb24gc2xvd1RvU3RyaW5nKGUscix0KXt2YXIgZj1mYWxzZTtpZihyPT09dW5kZWZpbmVkfHxyPDApe3I9MH1pZihyPnRoaXMubGVuZ3RoKXtyZXR1cm5cIlwifWlmKHQ9PT11bmRlZmluZWR8fHQ+dGhpcy5sZW5ndGgpe3Q9dGhpcy5sZW5ndGh9aWYodDw9MCl7cmV0dXJuXCJcIn10Pj4+PTA7cj4+Pj0wO2lmKHQ8PXIpe3JldHVyblwiXCJ9aWYoIWUpZT1cInV0ZjhcIjt3aGlsZSh0cnVlKXtzd2l0Y2goZSl7Y2FzZVwiaGV4XCI6cmV0dXJuIGhleFNsaWNlKHRoaXMscix0KTtjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpyZXR1cm4gdXRmOFNsaWNlKHRoaXMscix0KTtjYXNlXCJhc2NpaVwiOnJldHVybiBhc2NpaVNsaWNlKHRoaXMscix0KTtjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gbGF0aW4xU2xpY2UodGhpcyxyLHQpO2Nhc2VcImJhc2U2NFwiOnJldHVybiBiYXNlNjRTbGljZSh0aGlzLHIsdCk7Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuIHV0ZjE2bGVTbGljZSh0aGlzLHIsdCk7ZGVmYXVsdDppZihmKXRocm93IG5ldyBUeXBlRXJyb3IoXCJVbmtub3duIGVuY29kaW5nOiBcIitlKTtlPShlK1wiXCIpLnRvTG93ZXJDYXNlKCk7Zj10cnVlfX19QnVmZmVyLnByb3RvdHlwZS5faXNCdWZmZXI9dHJ1ZTtmdW5jdGlvbiBzd2FwKGUscix0KXt2YXIgZj1lW3JdO2Vbcl09ZVt0XTtlW3RdPWZ9QnVmZmVyLnByb3RvdHlwZS5zd2FwMTY9ZnVuY3Rpb24gc3dhcDE2KCl7dmFyIGU9dGhpcy5sZW5ndGg7aWYoZSUyIT09MCl7dGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgMTYtYml0c1wiKX1mb3IodmFyIHI9MDtyPGU7cis9Mil7c3dhcCh0aGlzLHIscisxKX1yZXR1cm4gdGhpc307QnVmZmVyLnByb3RvdHlwZS5zd2FwMzI9ZnVuY3Rpb24gc3dhcDMyKCl7dmFyIGU9dGhpcy5sZW5ndGg7aWYoZSU0IT09MCl7dGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgMzItYml0c1wiKX1mb3IodmFyIHI9MDtyPGU7cis9NCl7c3dhcCh0aGlzLHIsciszKTtzd2FwKHRoaXMscisxLHIrMil9cmV0dXJuIHRoaXN9O0J1ZmZlci5wcm90b3R5cGUuc3dhcDY0PWZ1bmN0aW9uIHN3YXA2NCgpe3ZhciBlPXRoaXMubGVuZ3RoO2lmKGUlOCE9PTApe3Rocm93IG5ldyBSYW5nZUVycm9yKFwiQnVmZmVyIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDY0LWJpdHNcIil9Zm9yKHZhciByPTA7cjxlO3IrPTgpe3N3YXAodGhpcyxyLHIrNyk7c3dhcCh0aGlzLHIrMSxyKzYpO3N3YXAodGhpcyxyKzIscis1KTtzd2FwKHRoaXMsciszLHIrNCl9cmV0dXJuIHRoaXN9O0J1ZmZlci5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24gdG9TdHJpbmcoKXt2YXIgZT10aGlzLmxlbmd0aDtpZihlPT09MClyZXR1cm5cIlwiO2lmKGFyZ3VtZW50cy5sZW5ndGg9PT0wKXJldHVybiB1dGY4U2xpY2UodGhpcywwLGUpO3JldHVybiBzbG93VG9TdHJpbmcuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtCdWZmZXIucHJvdG90eXBlLnRvTG9jYWxlU3RyaW5nPUJ1ZmZlci5wcm90b3R5cGUudG9TdHJpbmc7QnVmZmVyLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24gZXF1YWxzKGUpe2lmKCFCdWZmZXIuaXNCdWZmZXIoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFyZ3VtZW50IG11c3QgYmUgYSBCdWZmZXJcIik7aWYodGhpcz09PWUpcmV0dXJuIHRydWU7cmV0dXJuIEJ1ZmZlci5jb21wYXJlKHRoaXMsZSk9PT0wfTtCdWZmZXIucHJvdG90eXBlLmluc3BlY3Q9ZnVuY3Rpb24gaW5zcGVjdCgpe3ZhciBlPVwiXCI7dmFyIHQ9ci5JTlNQRUNUX01BWF9CWVRFUztlPXRoaXMudG9TdHJpbmcoXCJoZXhcIiwwLHQpLnJlcGxhY2UoLyguezJ9KS9nLFwiJDEgXCIpLnRyaW0oKTtpZih0aGlzLmxlbmd0aD50KWUrPVwiIC4uLiBcIjtyZXR1cm5cIjxCdWZmZXIgXCIrZStcIj5cIn07aWYoaSl7QnVmZmVyLnByb3RvdHlwZVtpXT1CdWZmZXIucHJvdG90eXBlLmluc3BlY3R9QnVmZmVyLnByb3RvdHlwZS5jb21wYXJlPWZ1bmN0aW9uIGNvbXBhcmUoZSxyLHQsZixuKXtpZihpc0luc3RhbmNlKGUsVWludDhBcnJheSkpe2U9QnVmZmVyLmZyb20oZSxlLm9mZnNldCxlLmJ5dGVMZW5ndGgpfWlmKCFCdWZmZXIuaXNCdWZmZXIoZSkpe3Rocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcInRhcmdldFwiIGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgQnVmZmVyIG9yIFVpbnQ4QXJyYXkuICcrXCJSZWNlaXZlZCB0eXBlIFwiK3R5cGVvZiBlKX1pZihyPT09dW5kZWZpbmVkKXtyPTB9aWYodD09PXVuZGVmaW5lZCl7dD1lP2UubGVuZ3RoOjB9aWYoZj09PXVuZGVmaW5lZCl7Zj0wfWlmKG49PT11bmRlZmluZWQpe249dGhpcy5sZW5ndGh9aWYocjwwfHx0PmUubGVuZ3RofHxmPDB8fG4+dGhpcy5sZW5ndGgpe3Rocm93IG5ldyBSYW5nZUVycm9yKFwib3V0IG9mIHJhbmdlIGluZGV4XCIpfWlmKGY+PW4mJnI+PXQpe3JldHVybiAwfWlmKGY+PW4pe3JldHVybi0xfWlmKHI+PXQpe3JldHVybiAxfXI+Pj49MDt0Pj4+PTA7Zj4+Pj0wO24+Pj49MDtpZih0aGlzPT09ZSlyZXR1cm4gMDt2YXIgaT1uLWY7dmFyIG89dC1yO3ZhciB1PU1hdGgubWluKGksbyk7dmFyIGE9dGhpcy5zbGljZShmLG4pO3ZhciBzPWUuc2xpY2Uocix0KTtmb3IodmFyIGg9MDtoPHU7KytoKXtpZihhW2hdIT09c1toXSl7aT1hW2hdO289c1toXTticmVha319aWYoaTxvKXJldHVybi0xO2lmKG88aSlyZXR1cm4gMTtyZXR1cm4gMH07ZnVuY3Rpb24gYmlkaXJlY3Rpb25hbEluZGV4T2YoZSxyLHQsZixuKXtpZihlLmxlbmd0aD09PTApcmV0dXJuLTE7aWYodHlwZW9mIHQ9PT1cInN0cmluZ1wiKXtmPXQ7dD0wfWVsc2UgaWYodD4yMTQ3NDgzNjQ3KXt0PTIxNDc0ODM2NDd9ZWxzZSBpZih0PC0yMTQ3NDgzNjQ4KXt0PS0yMTQ3NDgzNjQ4fXQ9K3Q7aWYobnVtYmVySXNOYU4odCkpe3Q9bj8wOmUubGVuZ3RoLTF9aWYodDwwKXQ9ZS5sZW5ndGgrdDtpZih0Pj1lLmxlbmd0aCl7aWYobilyZXR1cm4tMTtlbHNlIHQ9ZS5sZW5ndGgtMX1lbHNlIGlmKHQ8MCl7aWYobil0PTA7ZWxzZSByZXR1cm4tMX1pZih0eXBlb2Ygcj09PVwic3RyaW5nXCIpe3I9QnVmZmVyLmZyb20ocixmKX1pZihCdWZmZXIuaXNCdWZmZXIocikpe2lmKHIubGVuZ3RoPT09MCl7cmV0dXJuLTF9cmV0dXJuIGFycmF5SW5kZXhPZihlLHIsdCxmLG4pfWVsc2UgaWYodHlwZW9mIHI9PT1cIm51bWJlclwiKXtyPXImMjU1O2lmKHR5cGVvZiBVaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mPT09XCJmdW5jdGlvblwiKXtpZihuKXtyZXR1cm4gVWludDhBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKGUscix0KX1lbHNle3JldHVybiBVaW50OEFycmF5LnByb3RvdHlwZS5sYXN0SW5kZXhPZi5jYWxsKGUscix0KX19cmV0dXJuIGFycmF5SW5kZXhPZihlLFtyXSx0LGYsbil9dGhyb3cgbmV3IFR5cGVFcnJvcihcInZhbCBtdXN0IGJlIHN0cmluZywgbnVtYmVyIG9yIEJ1ZmZlclwiKX1mdW5jdGlvbiBhcnJheUluZGV4T2YoZSxyLHQsZixuKXt2YXIgaT0xO3ZhciBvPWUubGVuZ3RoO3ZhciB1PXIubGVuZ3RoO2lmKGYhPT11bmRlZmluZWQpe2Y9U3RyaW5nKGYpLnRvTG93ZXJDYXNlKCk7aWYoZj09PVwidWNzMlwifHxmPT09XCJ1Y3MtMlwifHxmPT09XCJ1dGYxNmxlXCJ8fGY9PT1cInV0Zi0xNmxlXCIpe2lmKGUubGVuZ3RoPDJ8fHIubGVuZ3RoPDIpe3JldHVybi0xfWk9MjtvLz0yO3UvPTI7dC89Mn19ZnVuY3Rpb24gcmVhZChlLHIpe2lmKGk9PT0xKXtyZXR1cm4gZVtyXX1lbHNle3JldHVybiBlLnJlYWRVSW50MTZCRShyKmkpfX12YXIgYTtpZihuKXt2YXIgcz0tMTtmb3IoYT10O2E8bzthKyspe2lmKHJlYWQoZSxhKT09PXJlYWQocixzPT09LTE/MDphLXMpKXtpZihzPT09LTEpcz1hO2lmKGEtcysxPT09dSlyZXR1cm4gcyppfWVsc2V7aWYocyE9PS0xKWEtPWEtcztzPS0xfX19ZWxzZXtpZih0K3U+byl0PW8tdTtmb3IoYT10O2E+PTA7YS0tKXt2YXIgaD10cnVlO2Zvcih2YXIgYz0wO2M8dTtjKyspe2lmKHJlYWQoZSxhK2MpIT09cmVhZChyLGMpKXtoPWZhbHNlO2JyZWFrfX1pZihoKXJldHVybiBhfX1yZXR1cm4tMX1CdWZmZXIucHJvdG90eXBlLmluY2x1ZGVzPWZ1bmN0aW9uIGluY2x1ZGVzKGUscix0KXtyZXR1cm4gdGhpcy5pbmRleE9mKGUscix0KSE9PS0xfTtCdWZmZXIucHJvdG90eXBlLmluZGV4T2Y9ZnVuY3Rpb24gaW5kZXhPZihlLHIsdCl7cmV0dXJuIGJpZGlyZWN0aW9uYWxJbmRleE9mKHRoaXMsZSxyLHQsdHJ1ZSl9O0J1ZmZlci5wcm90b3R5cGUubGFzdEluZGV4T2Y9ZnVuY3Rpb24gbGFzdEluZGV4T2YoZSxyLHQpe3JldHVybiBiaWRpcmVjdGlvbmFsSW5kZXhPZih0aGlzLGUscix0LGZhbHNlKX07ZnVuY3Rpb24gaGV4V3JpdGUoZSxyLHQsZil7dD1OdW1iZXIodCl8fDA7dmFyIG49ZS5sZW5ndGgtdDtpZighZil7Zj1ufWVsc2V7Zj1OdW1iZXIoZik7aWYoZj5uKXtmPW59fXZhciBpPXIubGVuZ3RoO2lmKGY+aS8yKXtmPWkvMn1mb3IodmFyIG89MDtvPGY7KytvKXt2YXIgdT1wYXJzZUludChyLnN1YnN0cihvKjIsMiksMTYpO2lmKG51bWJlcklzTmFOKHUpKXJldHVybiBvO2VbdCtvXT11fXJldHVybiBvfWZ1bmN0aW9uIHV0ZjhXcml0ZShlLHIsdCxmKXtyZXR1cm4gYmxpdEJ1ZmZlcih1dGY4VG9CeXRlcyhyLGUubGVuZ3RoLXQpLGUsdCxmKX1mdW5jdGlvbiBhc2NpaVdyaXRlKGUscix0LGYpe3JldHVybiBibGl0QnVmZmVyKGFzY2lpVG9CeXRlcyhyKSxlLHQsZil9ZnVuY3Rpb24gbGF0aW4xV3JpdGUoZSxyLHQsZil7cmV0dXJuIGFzY2lpV3JpdGUoZSxyLHQsZil9ZnVuY3Rpb24gYmFzZTY0V3JpdGUoZSxyLHQsZil7cmV0dXJuIGJsaXRCdWZmZXIoYmFzZTY0VG9CeXRlcyhyKSxlLHQsZil9ZnVuY3Rpb24gdWNzMldyaXRlKGUscix0LGYpe3JldHVybiBibGl0QnVmZmVyKHV0ZjE2bGVUb0J5dGVzKHIsZS5sZW5ndGgtdCksZSx0LGYpfUJ1ZmZlci5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24gd3JpdGUoZSxyLHQsZil7aWYocj09PXVuZGVmaW5lZCl7Zj1cInV0ZjhcIjt0PXRoaXMubGVuZ3RoO3I9MH1lbHNlIGlmKHQ9PT11bmRlZmluZWQmJnR5cGVvZiByPT09XCJzdHJpbmdcIil7Zj1yO3Q9dGhpcy5sZW5ndGg7cj0wfWVsc2UgaWYoaXNGaW5pdGUocikpe3I9cj4+PjA7aWYoaXNGaW5pdGUodCkpe3Q9dD4+PjA7aWYoZj09PXVuZGVmaW5lZClmPVwidXRmOFwifWVsc2V7Zj10O3Q9dW5kZWZpbmVkfX1lbHNle3Rocm93IG5ldyBFcnJvcihcIkJ1ZmZlci53cml0ZShzdHJpbmcsIGVuY29kaW5nLCBvZmZzZXRbLCBsZW5ndGhdKSBpcyBubyBsb25nZXIgc3VwcG9ydGVkXCIpfXZhciBuPXRoaXMubGVuZ3RoLXI7aWYodD09PXVuZGVmaW5lZHx8dD5uKXQ9bjtpZihlLmxlbmd0aD4wJiYodDwwfHxyPDApfHxyPnRoaXMubGVuZ3RoKXt0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkF0dGVtcHQgdG8gd3JpdGUgb3V0c2lkZSBidWZmZXIgYm91bmRzXCIpfWlmKCFmKWY9XCJ1dGY4XCI7dmFyIGk9ZmFsc2U7Zm9yKDs7KXtzd2l0Y2goZil7Y2FzZVwiaGV4XCI6cmV0dXJuIGhleFdyaXRlKHRoaXMsZSxyLHQpO2Nhc2VcInV0ZjhcIjpjYXNlXCJ1dGYtOFwiOnJldHVybiB1dGY4V3JpdGUodGhpcyxlLHIsdCk7Y2FzZVwiYXNjaWlcIjpyZXR1cm4gYXNjaWlXcml0ZSh0aGlzLGUscix0KTtjYXNlXCJsYXRpbjFcIjpjYXNlXCJiaW5hcnlcIjpyZXR1cm4gbGF0aW4xV3JpdGUodGhpcyxlLHIsdCk7Y2FzZVwiYmFzZTY0XCI6cmV0dXJuIGJhc2U2NFdyaXRlKHRoaXMsZSxyLHQpO2Nhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVybiB1Y3MyV3JpdGUodGhpcyxlLHIsdCk7ZGVmYXVsdDppZihpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJVbmtub3duIGVuY29kaW5nOiBcIitmKTtmPShcIlwiK2YpLnRvTG93ZXJDYXNlKCk7aT10cnVlfX19O0J1ZmZlci5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uIHRvSlNPTigpe3JldHVybnt0eXBlOlwiQnVmZmVyXCIsZGF0YTpBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0aGlzLl9hcnJ8fHRoaXMsMCl9fTtmdW5jdGlvbiBiYXNlNjRTbGljZShlLHIsdCl7aWYocj09PTAmJnQ9PT1lLmxlbmd0aCl7cmV0dXJuIGYuZnJvbUJ5dGVBcnJheShlKX1lbHNle3JldHVybiBmLmZyb21CeXRlQXJyYXkoZS5zbGljZShyLHQpKX19ZnVuY3Rpb24gdXRmOFNsaWNlKGUscix0KXt0PU1hdGgubWluKGUubGVuZ3RoLHQpO3ZhciBmPVtdO3ZhciBuPXI7d2hpbGUobjx0KXt2YXIgaT1lW25dO3ZhciBvPW51bGw7dmFyIHU9aT4yMzk/NDppPjIyMz8zOmk+MTkxPzI6MTtpZihuK3U8PXQpe3ZhciBhLHMsaCxjO3N3aXRjaCh1KXtjYXNlIDE6aWYoaTwxMjgpe289aX1icmVhaztjYXNlIDI6YT1lW24rMV07aWYoKGEmMTkyKT09PTEyOCl7Yz0oaSYzMSk8PDZ8YSY2MztpZihjPjEyNyl7bz1jfX1icmVhaztjYXNlIDM6YT1lW24rMV07cz1lW24rMl07aWYoKGEmMTkyKT09PTEyOCYmKHMmMTkyKT09PTEyOCl7Yz0oaSYxNSk8PDEyfChhJjYzKTw8NnxzJjYzO2lmKGM+MjA0NyYmKGM8NTUyOTZ8fGM+NTczNDMpKXtvPWN9fWJyZWFrO2Nhc2UgNDphPWVbbisxXTtzPWVbbisyXTtoPWVbbiszXTtpZigoYSYxOTIpPT09MTI4JiYocyYxOTIpPT09MTI4JiYoaCYxOTIpPT09MTI4KXtjPShpJjE1KTw8MTh8KGEmNjMpPDwxMnwocyY2Myk8PDZ8aCY2MztpZihjPjY1NTM1JiZjPDExMTQxMTIpe289Y319fX1pZihvPT09bnVsbCl7bz02NTUzMzt1PTF9ZWxzZSBpZihvPjY1NTM1KXtvLT02NTUzNjtmLnB1c2gobz4+PjEwJjEwMjN8NTUyOTYpO289NTYzMjB8byYxMDIzfWYucHVzaChvKTtuKz11fXJldHVybiBkZWNvZGVDb2RlUG9pbnRzQXJyYXkoZil9dmFyIHU9NDA5NjtmdW5jdGlvbiBkZWNvZGVDb2RlUG9pbnRzQXJyYXkoZSl7dmFyIHI9ZS5sZW5ndGg7aWYocjw9dSl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLGUpfXZhciB0PVwiXCI7dmFyIGY9MDt3aGlsZShmPHIpe3QrPVN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLGUuc2xpY2UoZixmKz11KSl9cmV0dXJuIHR9ZnVuY3Rpb24gYXNjaWlTbGljZShlLHIsdCl7dmFyIGY9XCJcIjt0PU1hdGgubWluKGUubGVuZ3RoLHQpO2Zvcih2YXIgbj1yO248dDsrK24pe2YrPVN0cmluZy5mcm9tQ2hhckNvZGUoZVtuXSYxMjcpfXJldHVybiBmfWZ1bmN0aW9uIGxhdGluMVNsaWNlKGUscix0KXt2YXIgZj1cIlwiO3Q9TWF0aC5taW4oZS5sZW5ndGgsdCk7Zm9yKHZhciBuPXI7bjx0Oysrbil7Zis9U3RyaW5nLmZyb21DaGFyQ29kZShlW25dKX1yZXR1cm4gZn1mdW5jdGlvbiBoZXhTbGljZShlLHIsdCl7dmFyIGY9ZS5sZW5ndGg7aWYoIXJ8fHI8MClyPTA7aWYoIXR8fHQ8MHx8dD5mKXQ9Zjt2YXIgbj1cIlwiO2Zvcih2YXIgaT1yO2k8dDsrK2kpe24rPXNbZVtpXV19cmV0dXJuIG59ZnVuY3Rpb24gdXRmMTZsZVNsaWNlKGUscix0KXt2YXIgZj1lLnNsaWNlKHIsdCk7dmFyIG49XCJcIjtmb3IodmFyIGk9MDtpPGYubGVuZ3RoO2krPTIpe24rPVN0cmluZy5mcm9tQ2hhckNvZGUoZltpXStmW2krMV0qMjU2KX1yZXR1cm4gbn1CdWZmZXIucHJvdG90eXBlLnNsaWNlPWZ1bmN0aW9uIHNsaWNlKGUscil7dmFyIHQ9dGhpcy5sZW5ndGg7ZT1+fmU7cj1yPT09dW5kZWZpbmVkP3Q6fn5yO2lmKGU8MCl7ZSs9dDtpZihlPDApZT0wfWVsc2UgaWYoZT50KXtlPXR9aWYocjwwKXtyKz10O2lmKHI8MClyPTB9ZWxzZSBpZihyPnQpe3I9dH1pZihyPGUpcj1lO3ZhciBmPXRoaXMuc3ViYXJyYXkoZSxyKTtPYmplY3Quc2V0UHJvdG90eXBlT2YoZixCdWZmZXIucHJvdG90eXBlKTtyZXR1cm4gZn07ZnVuY3Rpb24gY2hlY2tPZmZzZXQoZSxyLHQpe2lmKGUlMSE9PTB8fGU8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIm9mZnNldCBpcyBub3QgdWludFwiKTtpZihlK3I+dCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIlRyeWluZyB0byBhY2Nlc3MgYmV5b25kIGJ1ZmZlciBsZW5ndGhcIil9QnVmZmVyLnByb3RvdHlwZS5yZWFkVUludExFPWZ1bmN0aW9uIHJlYWRVSW50TEUoZSxyLHQpe2U9ZT4+PjA7cj1yPj4+MDtpZighdCljaGVja09mZnNldChlLHIsdGhpcy5sZW5ndGgpO3ZhciBmPXRoaXNbZV07dmFyIG49MTt2YXIgaT0wO3doaWxlKCsraTxyJiYobio9MjU2KSl7Zis9dGhpc1tlK2ldKm59cmV0dXJuIGZ9O0J1ZmZlci5wcm90b3R5cGUucmVhZFVJbnRCRT1mdW5jdGlvbiByZWFkVUludEJFKGUscix0KXtlPWU+Pj4wO3I9cj4+PjA7aWYoIXQpe2NoZWNrT2Zmc2V0KGUscix0aGlzLmxlbmd0aCl9dmFyIGY9dGhpc1tlKy0tcl07dmFyIG49MTt3aGlsZShyPjAmJihuKj0yNTYpKXtmKz10aGlzW2UrLS1yXSpufXJldHVybiBmfTtCdWZmZXIucHJvdG90eXBlLnJlYWRVSW50OD1mdW5jdGlvbiByZWFkVUludDgoZSxyKXtlPWU+Pj4wO2lmKCFyKWNoZWNrT2Zmc2V0KGUsMSx0aGlzLmxlbmd0aCk7cmV0dXJuIHRoaXNbZV19O0J1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQxNkxFPWZ1bmN0aW9uIHJlYWRVSW50MTZMRShlLHIpe2U9ZT4+PjA7aWYoIXIpY2hlY2tPZmZzZXQoZSwyLHRoaXMubGVuZ3RoKTtyZXR1cm4gdGhpc1tlXXx0aGlzW2UrMV08PDh9O0J1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQxNkJFPWZ1bmN0aW9uIHJlYWRVSW50MTZCRShlLHIpe2U9ZT4+PjA7aWYoIXIpY2hlY2tPZmZzZXQoZSwyLHRoaXMubGVuZ3RoKTtyZXR1cm4gdGhpc1tlXTw8OHx0aGlzW2UrMV19O0J1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQzMkxFPWZ1bmN0aW9uIHJlYWRVSW50MzJMRShlLHIpe2U9ZT4+PjA7aWYoIXIpY2hlY2tPZmZzZXQoZSw0LHRoaXMubGVuZ3RoKTtyZXR1cm4odGhpc1tlXXx0aGlzW2UrMV08PDh8dGhpc1tlKzJdPDwxNikrdGhpc1tlKzNdKjE2Nzc3MjE2fTtCdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MzJCRT1mdW5jdGlvbiByZWFkVUludDMyQkUoZSxyKXtlPWU+Pj4wO2lmKCFyKWNoZWNrT2Zmc2V0KGUsNCx0aGlzLmxlbmd0aCk7cmV0dXJuIHRoaXNbZV0qMTY3NzcyMTYrKHRoaXNbZSsxXTw8MTZ8dGhpc1tlKzJdPDw4fHRoaXNbZSszXSl9O0J1ZmZlci5wcm90b3R5cGUucmVhZEludExFPWZ1bmN0aW9uIHJlYWRJbnRMRShlLHIsdCl7ZT1lPj4+MDtyPXI+Pj4wO2lmKCF0KWNoZWNrT2Zmc2V0KGUscix0aGlzLmxlbmd0aCk7dmFyIGY9dGhpc1tlXTt2YXIgbj0xO3ZhciBpPTA7d2hpbGUoKytpPHImJihuKj0yNTYpKXtmKz10aGlzW2UraV0qbn1uKj0xMjg7aWYoZj49bilmLT1NYXRoLnBvdygyLDgqcik7cmV0dXJuIGZ9O0J1ZmZlci5wcm90b3R5cGUucmVhZEludEJFPWZ1bmN0aW9uIHJlYWRJbnRCRShlLHIsdCl7ZT1lPj4+MDtyPXI+Pj4wO2lmKCF0KWNoZWNrT2Zmc2V0KGUscix0aGlzLmxlbmd0aCk7dmFyIGY9cjt2YXIgbj0xO3ZhciBpPXRoaXNbZSstLWZdO3doaWxlKGY+MCYmKG4qPTI1Nikpe2krPXRoaXNbZSstLWZdKm59bio9MTI4O2lmKGk+PW4paS09TWF0aC5wb3coMiw4KnIpO3JldHVybiBpfTtCdWZmZXIucHJvdG90eXBlLnJlYWRJbnQ4PWZ1bmN0aW9uIHJlYWRJbnQ4KGUscil7ZT1lPj4+MDtpZighciljaGVja09mZnNldChlLDEsdGhpcy5sZW5ndGgpO2lmKCEodGhpc1tlXSYxMjgpKXJldHVybiB0aGlzW2VdO3JldHVybigyNTUtdGhpc1tlXSsxKSotMX07QnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MTZMRT1mdW5jdGlvbiByZWFkSW50MTZMRShlLHIpe2U9ZT4+PjA7aWYoIXIpY2hlY2tPZmZzZXQoZSwyLHRoaXMubGVuZ3RoKTt2YXIgdD10aGlzW2VdfHRoaXNbZSsxXTw8ODtyZXR1cm4gdCYzMjc2OD90fDQyOTQ5MDE3NjA6dH07QnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MTZCRT1mdW5jdGlvbiByZWFkSW50MTZCRShlLHIpe2U9ZT4+PjA7aWYoIXIpY2hlY2tPZmZzZXQoZSwyLHRoaXMubGVuZ3RoKTt2YXIgdD10aGlzW2UrMV18dGhpc1tlXTw8ODtyZXR1cm4gdCYzMjc2OD90fDQyOTQ5MDE3NjA6dH07QnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MzJMRT1mdW5jdGlvbiByZWFkSW50MzJMRShlLHIpe2U9ZT4+PjA7aWYoIXIpY2hlY2tPZmZzZXQoZSw0LHRoaXMubGVuZ3RoKTtyZXR1cm4gdGhpc1tlXXx0aGlzW2UrMV08PDh8dGhpc1tlKzJdPDwxNnx0aGlzW2UrM108PDI0fTtCdWZmZXIucHJvdG90eXBlLnJlYWRJbnQzMkJFPWZ1bmN0aW9uIHJlYWRJbnQzMkJFKGUscil7ZT1lPj4+MDtpZighciljaGVja09mZnNldChlLDQsdGhpcy5sZW5ndGgpO3JldHVybiB0aGlzW2VdPDwyNHx0aGlzW2UrMV08PDE2fHRoaXNbZSsyXTw8OHx0aGlzW2UrM119O0J1ZmZlci5wcm90b3R5cGUucmVhZEZsb2F0TEU9ZnVuY3Rpb24gcmVhZEZsb2F0TEUoZSxyKXtlPWU+Pj4wO2lmKCFyKWNoZWNrT2Zmc2V0KGUsNCx0aGlzLmxlbmd0aCk7cmV0dXJuIG4ucmVhZCh0aGlzLGUsdHJ1ZSwyMyw0KX07QnVmZmVyLnByb3RvdHlwZS5yZWFkRmxvYXRCRT1mdW5jdGlvbiByZWFkRmxvYXRCRShlLHIpe2U9ZT4+PjA7aWYoIXIpY2hlY2tPZmZzZXQoZSw0LHRoaXMubGVuZ3RoKTtyZXR1cm4gbi5yZWFkKHRoaXMsZSxmYWxzZSwyMyw0KX07QnVmZmVyLnByb3RvdHlwZS5yZWFkRG91YmxlTEU9ZnVuY3Rpb24gcmVhZERvdWJsZUxFKGUscil7ZT1lPj4+MDtpZighciljaGVja09mZnNldChlLDgsdGhpcy5sZW5ndGgpO3JldHVybiBuLnJlYWQodGhpcyxlLHRydWUsNTIsOCl9O0J1ZmZlci5wcm90b3R5cGUucmVhZERvdWJsZUJFPWZ1bmN0aW9uIHJlYWREb3VibGVCRShlLHIpe2U9ZT4+PjA7aWYoIXIpY2hlY2tPZmZzZXQoZSw4LHRoaXMubGVuZ3RoKTtyZXR1cm4gbi5yZWFkKHRoaXMsZSxmYWxzZSw1Miw4KX07ZnVuY3Rpb24gY2hlY2tJbnQoZSxyLHQsZixuLGkpe2lmKCFCdWZmZXIuaXNCdWZmZXIoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJidWZmZXJcIiBhcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyIGluc3RhbmNlJyk7aWYocj5ufHxyPGkpdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1widmFsdWVcIiBhcmd1bWVudCBpcyBvdXQgb2YgYm91bmRzJyk7aWYodCtmPmUubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpfUJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50TEU9ZnVuY3Rpb24gd3JpdGVVSW50TEUoZSxyLHQsZil7ZT0rZTtyPXI+Pj4wO3Q9dD4+PjA7aWYoIWYpe3ZhciBuPU1hdGgucG93KDIsOCp0KS0xO2NoZWNrSW50KHRoaXMsZSxyLHQsbiwwKX12YXIgaT0xO3ZhciBvPTA7dGhpc1tyXT1lJjI1NTt3aGlsZSgrK288dCYmKGkqPTI1Nikpe3RoaXNbcitvXT1lL2kmMjU1fXJldHVybiByK3R9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50QkU9ZnVuY3Rpb24gd3JpdGVVSW50QkUoZSxyLHQsZil7ZT0rZTtyPXI+Pj4wO3Q9dD4+PjA7aWYoIWYpe3ZhciBuPU1hdGgucG93KDIsOCp0KS0xO2NoZWNrSW50KHRoaXMsZSxyLHQsbiwwKX12YXIgaT10LTE7dmFyIG89MTt0aGlzW3IraV09ZSYyNTU7d2hpbGUoLS1pPj0wJiYobyo9MjU2KSl7dGhpc1tyK2ldPWUvbyYyNTV9cmV0dXJuIHIrdH07QnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQ4PWZ1bmN0aW9uIHdyaXRlVUludDgoZSxyLHQpe2U9K2U7cj1yPj4+MDtpZighdCljaGVja0ludCh0aGlzLGUsciwxLDI1NSwwKTt0aGlzW3JdPWUmMjU1O3JldHVybiByKzF9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MTZMRT1mdW5jdGlvbiB3cml0ZVVJbnQxNkxFKGUscix0KXtlPStlO3I9cj4+PjA7aWYoIXQpY2hlY2tJbnQodGhpcyxlLHIsMiw2NTUzNSwwKTt0aGlzW3JdPWUmMjU1O3RoaXNbcisxXT1lPj4+ODtyZXR1cm4gcisyfTtCdWZmZXIucHJvdG90eXBlLndyaXRlVUludDE2QkU9ZnVuY3Rpb24gd3JpdGVVSW50MTZCRShlLHIsdCl7ZT0rZTtyPXI+Pj4wO2lmKCF0KWNoZWNrSW50KHRoaXMsZSxyLDIsNjU1MzUsMCk7dGhpc1tyXT1lPj4+ODt0aGlzW3IrMV09ZSYyNTU7cmV0dXJuIHIrMn07QnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQzMkxFPWZ1bmN0aW9uIHdyaXRlVUludDMyTEUoZSxyLHQpe2U9K2U7cj1yPj4+MDtpZighdCljaGVja0ludCh0aGlzLGUsciw0LDQyOTQ5NjcyOTUsMCk7dGhpc1tyKzNdPWU+Pj4yNDt0aGlzW3IrMl09ZT4+PjE2O3RoaXNbcisxXT1lPj4+ODt0aGlzW3JdPWUmMjU1O3JldHVybiByKzR9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MzJCRT1mdW5jdGlvbiB3cml0ZVVJbnQzMkJFKGUscix0KXtlPStlO3I9cj4+PjA7aWYoIXQpY2hlY2tJbnQodGhpcyxlLHIsNCw0Mjk0OTY3Mjk1LDApO3RoaXNbcl09ZT4+PjI0O3RoaXNbcisxXT1lPj4+MTY7dGhpc1tyKzJdPWU+Pj44O3RoaXNbciszXT1lJjI1NTtyZXR1cm4gcis0fTtCdWZmZXIucHJvdG90eXBlLndyaXRlSW50TEU9ZnVuY3Rpb24gd3JpdGVJbnRMRShlLHIsdCxmKXtlPStlO3I9cj4+PjA7aWYoIWYpe3ZhciBuPU1hdGgucG93KDIsOCp0LTEpO2NoZWNrSW50KHRoaXMsZSxyLHQsbi0xLC1uKX12YXIgaT0wO3ZhciBvPTE7dmFyIHU9MDt0aGlzW3JdPWUmMjU1O3doaWxlKCsraTx0JiYobyo9MjU2KSl7aWYoZTwwJiZ1PT09MCYmdGhpc1tyK2ktMV0hPT0wKXt1PTF9dGhpc1tyK2ldPShlL28+PjApLXUmMjU1fXJldHVybiByK3R9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVJbnRCRT1mdW5jdGlvbiB3cml0ZUludEJFKGUscix0LGYpe2U9K2U7cj1yPj4+MDtpZighZil7dmFyIG49TWF0aC5wb3coMiw4KnQtMSk7Y2hlY2tJbnQodGhpcyxlLHIsdCxuLTEsLW4pfXZhciBpPXQtMTt2YXIgbz0xO3ZhciB1PTA7dGhpc1tyK2ldPWUmMjU1O3doaWxlKC0taT49MCYmKG8qPTI1Nikpe2lmKGU8MCYmdT09PTAmJnRoaXNbcitpKzFdIT09MCl7dT0xfXRoaXNbcitpXT0oZS9vPj4wKS11JjI1NX1yZXR1cm4gcit0fTtCdWZmZXIucHJvdG90eXBlLndyaXRlSW50OD1mdW5jdGlvbiB3cml0ZUludDgoZSxyLHQpe2U9K2U7cj1yPj4+MDtpZighdCljaGVja0ludCh0aGlzLGUsciwxLDEyNywtMTI4KTtpZihlPDApZT0yNTUrZSsxO3RoaXNbcl09ZSYyNTU7cmV0dXJuIHIrMX07QnVmZmVyLnByb3RvdHlwZS53cml0ZUludDE2TEU9ZnVuY3Rpb24gd3JpdGVJbnQxNkxFKGUscix0KXtlPStlO3I9cj4+PjA7aWYoIXQpY2hlY2tJbnQodGhpcyxlLHIsMiwzMjc2NywtMzI3NjgpO3RoaXNbcl09ZSYyNTU7dGhpc1tyKzFdPWU+Pj44O3JldHVybiByKzJ9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQxNkJFPWZ1bmN0aW9uIHdyaXRlSW50MTZCRShlLHIsdCl7ZT0rZTtyPXI+Pj4wO2lmKCF0KWNoZWNrSW50KHRoaXMsZSxyLDIsMzI3NjcsLTMyNzY4KTt0aGlzW3JdPWU+Pj44O3RoaXNbcisxXT1lJjI1NTtyZXR1cm4gcisyfTtCdWZmZXIucHJvdG90eXBlLndyaXRlSW50MzJMRT1mdW5jdGlvbiB3cml0ZUludDMyTEUoZSxyLHQpe2U9K2U7cj1yPj4+MDtpZighdCljaGVja0ludCh0aGlzLGUsciw0LDIxNDc0ODM2NDcsLTIxNDc0ODM2NDgpO3RoaXNbcl09ZSYyNTU7dGhpc1tyKzFdPWU+Pj44O3RoaXNbcisyXT1lPj4+MTY7dGhpc1tyKzNdPWU+Pj4yNDtyZXR1cm4gcis0fTtCdWZmZXIucHJvdG90eXBlLndyaXRlSW50MzJCRT1mdW5jdGlvbiB3cml0ZUludDMyQkUoZSxyLHQpe2U9K2U7cj1yPj4+MDtpZighdCljaGVja0ludCh0aGlzLGUsciw0LDIxNDc0ODM2NDcsLTIxNDc0ODM2NDgpO2lmKGU8MCllPTQyOTQ5NjcyOTUrZSsxO3RoaXNbcl09ZT4+PjI0O3RoaXNbcisxXT1lPj4+MTY7dGhpc1tyKzJdPWU+Pj44O3RoaXNbciszXT1lJjI1NTtyZXR1cm4gcis0fTtmdW5jdGlvbiBjaGVja0lFRUU3NTQoZSxyLHQsZixuLGkpe2lmKHQrZj5lLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIkluZGV4IG91dCBvZiByYW5nZVwiKTtpZih0PDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbmRleCBvdXQgb2YgcmFuZ2VcIil9ZnVuY3Rpb24gd3JpdGVGbG9hdChlLHIsdCxmLGkpe3I9K3I7dD10Pj4+MDtpZighaSl7Y2hlY2tJRUVFNzU0KGUscix0LDQsMzQwMjgyMzQ2NjM4NTI4ODZlMjIsLTM0MDI4MjM0NjYzODUyODg2ZTIyKX1uLndyaXRlKGUscix0LGYsMjMsNCk7cmV0dXJuIHQrNH1CdWZmZXIucHJvdG90eXBlLndyaXRlRmxvYXRMRT1mdW5jdGlvbiB3cml0ZUZsb2F0TEUoZSxyLHQpe3JldHVybiB3cml0ZUZsb2F0KHRoaXMsZSxyLHRydWUsdCl9O0J1ZmZlci5wcm90b3R5cGUud3JpdGVGbG9hdEJFPWZ1bmN0aW9uIHdyaXRlRmxvYXRCRShlLHIsdCl7cmV0dXJuIHdyaXRlRmxvYXQodGhpcyxlLHIsZmFsc2UsdCl9O2Z1bmN0aW9uIHdyaXRlRG91YmxlKGUscix0LGYsaSl7cj0rcjt0PXQ+Pj4wO2lmKCFpKXtjaGVja0lFRUU3NTQoZSxyLHQsOCwxNzk3NjkzMTM0ODYyMzE1N2UyOTIsLTE3OTc2OTMxMzQ4NjIzMTU3ZTI5Mil9bi53cml0ZShlLHIsdCxmLDUyLDgpO3JldHVybiB0Kzh9QnVmZmVyLnByb3RvdHlwZS53cml0ZURvdWJsZUxFPWZ1bmN0aW9uIHdyaXRlRG91YmxlTEUoZSxyLHQpe3JldHVybiB3cml0ZURvdWJsZSh0aGlzLGUscix0cnVlLHQpfTtCdWZmZXIucHJvdG90eXBlLndyaXRlRG91YmxlQkU9ZnVuY3Rpb24gd3JpdGVEb3VibGVCRShlLHIsdCl7cmV0dXJuIHdyaXRlRG91YmxlKHRoaXMsZSxyLGZhbHNlLHQpfTtCdWZmZXIucHJvdG90eXBlLmNvcHk9ZnVuY3Rpb24gY29weShlLHIsdCxmKXtpZighQnVmZmVyLmlzQnVmZmVyKGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJhcmd1bWVudCBzaG91bGQgYmUgYSBCdWZmZXJcIik7aWYoIXQpdD0wO2lmKCFmJiZmIT09MClmPXRoaXMubGVuZ3RoO2lmKHI+PWUubGVuZ3RoKXI9ZS5sZW5ndGg7aWYoIXIpcj0wO2lmKGY+MCYmZjx0KWY9dDtpZihmPT09dClyZXR1cm4gMDtpZihlLmxlbmd0aD09PTB8fHRoaXMubGVuZ3RoPT09MClyZXR1cm4gMDtpZihyPDApe3Rocm93IG5ldyBSYW5nZUVycm9yKFwidGFyZ2V0U3RhcnQgb3V0IG9mIGJvdW5kc1wiKX1pZih0PDB8fHQ+PXRoaXMubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpO2lmKGY8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcInNvdXJjZUVuZCBvdXQgb2YgYm91bmRzXCIpO2lmKGY+dGhpcy5sZW5ndGgpZj10aGlzLmxlbmd0aDtpZihlLmxlbmd0aC1yPGYtdCl7Zj1lLmxlbmd0aC1yK3R9dmFyIG49Zi10O2lmKHRoaXM9PT1lJiZ0eXBlb2YgVWludDhBcnJheS5wcm90b3R5cGUuY29weVdpdGhpbj09PVwiZnVuY3Rpb25cIil7dGhpcy5jb3B5V2l0aGluKHIsdCxmKX1lbHNlIGlmKHRoaXM9PT1lJiZ0PHImJnI8Zil7Zm9yKHZhciBpPW4tMTtpPj0wOy0taSl7ZVtpK3JdPXRoaXNbaSt0XX19ZWxzZXtVaW50OEFycmF5LnByb3RvdHlwZS5zZXQuY2FsbChlLHRoaXMuc3ViYXJyYXkodCxmKSxyKX1yZXR1cm4gbn07QnVmZmVyLnByb3RvdHlwZS5maWxsPWZ1bmN0aW9uIGZpbGwoZSxyLHQsZil7aWYodHlwZW9mIGU9PT1cInN0cmluZ1wiKXtpZih0eXBlb2Ygcj09PVwic3RyaW5nXCIpe2Y9cjtyPTA7dD10aGlzLmxlbmd0aH1lbHNlIGlmKHR5cGVvZiB0PT09XCJzdHJpbmdcIil7Zj10O3Q9dGhpcy5sZW5ndGh9aWYoZiE9PXVuZGVmaW5lZCYmdHlwZW9mIGYhPT1cInN0cmluZ1wiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiZW5jb2RpbmcgbXVzdCBiZSBhIHN0cmluZ1wiKX1pZih0eXBlb2YgZj09PVwic3RyaW5nXCImJiFCdWZmZXIuaXNFbmNvZGluZyhmKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK2YpfWlmKGUubGVuZ3RoPT09MSl7dmFyIG49ZS5jaGFyQ29kZUF0KDApO2lmKGY9PT1cInV0ZjhcIiYmbjwxMjh8fGY9PT1cImxhdGluMVwiKXtlPW59fX1lbHNlIGlmKHR5cGVvZiBlPT09XCJudW1iZXJcIil7ZT1lJjI1NX1lbHNlIGlmKHR5cGVvZiBlPT09XCJib29sZWFuXCIpe2U9TnVtYmVyKGUpfWlmKHI8MHx8dGhpcy5sZW5ndGg8cnx8dGhpcy5sZW5ndGg8dCl7dGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJPdXQgb2YgcmFuZ2UgaW5kZXhcIil9aWYodDw9cil7cmV0dXJuIHRoaXN9cj1yPj4+MDt0PXQ9PT11bmRlZmluZWQ/dGhpcy5sZW5ndGg6dD4+PjA7aWYoIWUpZT0wO3ZhciBpO2lmKHR5cGVvZiBlPT09XCJudW1iZXJcIil7Zm9yKGk9cjtpPHQ7KytpKXt0aGlzW2ldPWV9fWVsc2V7dmFyIG89QnVmZmVyLmlzQnVmZmVyKGUpP2U6QnVmZmVyLmZyb20oZSxmKTt2YXIgdT1vLmxlbmd0aDtpZih1PT09MCl7dGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIHZhbHVlIFwiJytlKydcIiBpcyBpbnZhbGlkIGZvciBhcmd1bWVudCBcInZhbHVlXCInKX1mb3IoaT0wO2k8dC1yOysraSl7dGhpc1tpK3JdPW9baSV1XX19cmV0dXJuIHRoaXN9O3ZhciBhPS9bXisvMC05QS1aYS16LV9dL2c7ZnVuY3Rpb24gYmFzZTY0Y2xlYW4oZSl7ZT1lLnNwbGl0KFwiPVwiKVswXTtlPWUudHJpbSgpLnJlcGxhY2UoYSxcIlwiKTtpZihlLmxlbmd0aDwyKXJldHVyblwiXCI7d2hpbGUoZS5sZW5ndGglNCE9PTApe2U9ZStcIj1cIn1yZXR1cm4gZX1mdW5jdGlvbiB1dGY4VG9CeXRlcyhlLHIpe3I9cnx8SW5maW5pdHk7dmFyIHQ7dmFyIGY9ZS5sZW5ndGg7dmFyIG49bnVsbDt2YXIgaT1bXTtmb3IodmFyIG89MDtvPGY7KytvKXt0PWUuY2hhckNvZGVBdChvKTtpZih0PjU1Mjk1JiZ0PDU3MzQ0KXtpZighbil7aWYodD41NjMxOSl7aWYoKHItPTMpPi0xKWkucHVzaCgyMzksMTkxLDE4OSk7Y29udGludWV9ZWxzZSBpZihvKzE9PT1mKXtpZigoci09Myk+LTEpaS5wdXNoKDIzOSwxOTEsMTg5KTtjb250aW51ZX1uPXQ7Y29udGludWV9aWYodDw1NjMyMCl7aWYoKHItPTMpPi0xKWkucHVzaCgyMzksMTkxLDE4OSk7bj10O2NvbnRpbnVlfXQ9KG4tNTUyOTY8PDEwfHQtNTYzMjApKzY1NTM2fWVsc2UgaWYobil7aWYoKHItPTMpPi0xKWkucHVzaCgyMzksMTkxLDE4OSl9bj1udWxsO2lmKHQ8MTI4KXtpZigoci09MSk8MClicmVhaztpLnB1c2godCl9ZWxzZSBpZih0PDIwNDgpe2lmKChyLT0yKTwwKWJyZWFrO2kucHVzaCh0Pj42fDE5Mix0JjYzfDEyOCl9ZWxzZSBpZih0PDY1NTM2KXtpZigoci09Myk8MClicmVhaztpLnB1c2godD4+MTJ8MjI0LHQ+PjYmNjN8MTI4LHQmNjN8MTI4KX1lbHNlIGlmKHQ8MTExNDExMil7aWYoKHItPTQpPDApYnJlYWs7aS5wdXNoKHQ+PjE4fDI0MCx0Pj4xMiY2M3wxMjgsdD4+NiY2M3wxMjgsdCY2M3wxMjgpfWVsc2V7dGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBjb2RlIHBvaW50XCIpfX1yZXR1cm4gaX1mdW5jdGlvbiBhc2NpaVRvQnl0ZXMoZSl7dmFyIHI9W107Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDsrK3Qpe3IucHVzaChlLmNoYXJDb2RlQXQodCkmMjU1KX1yZXR1cm4gcn1mdW5jdGlvbiB1dGYxNmxlVG9CeXRlcyhlLHIpe3ZhciB0LGYsbjt2YXIgaT1bXTtmb3IodmFyIG89MDtvPGUubGVuZ3RoOysrbyl7aWYoKHItPTIpPDApYnJlYWs7dD1lLmNoYXJDb2RlQXQobyk7Zj10Pj44O249dCUyNTY7aS5wdXNoKG4pO2kucHVzaChmKX1yZXR1cm4gaX1mdW5jdGlvbiBiYXNlNjRUb0J5dGVzKGUpe3JldHVybiBmLnRvQnl0ZUFycmF5KGJhc2U2NGNsZWFuKGUpKX1mdW5jdGlvbiBibGl0QnVmZmVyKGUscix0LGYpe2Zvcih2YXIgbj0wO248ZjsrK24pe2lmKG4rdD49ci5sZW5ndGh8fG4+PWUubGVuZ3RoKWJyZWFrO3Jbbit0XT1lW25dfXJldHVybiBufWZ1bmN0aW9uIGlzSW5zdGFuY2UoZSxyKXtyZXR1cm4gZSBpbnN0YW5jZW9mIHJ8fGUhPW51bGwmJmUuY29uc3RydWN0b3IhPW51bGwmJmUuY29uc3RydWN0b3IubmFtZSE9bnVsbCYmZS5jb25zdHJ1Y3Rvci5uYW1lPT09ci5uYW1lfWZ1bmN0aW9uIG51bWJlcklzTmFOKGUpe3JldHVybiBlIT09ZX12YXIgcz1mdW5jdGlvbigpe3ZhciBlPVwiMDEyMzQ1Njc4OWFiY2RlZlwiO3ZhciByPW5ldyBBcnJheSgyNTYpO2Zvcih2YXIgdD0wO3Q8MTY7Kyt0KXt2YXIgZj10KjE2O2Zvcih2YXIgbj0wO248MTY7KytuKXtyW2Yrbl09ZVt0XStlW25dfX1yZXR1cm4gcn0oKX0sNzgzOmZ1bmN0aW9uKGUscil7XG4vKiEgaWVlZTc1NC4gQlNELTMtQ2xhdXNlIExpY2Vuc2UuIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZy9vcGVuc291cmNlPiAqL1xuci5yZWFkPWZ1bmN0aW9uKGUscix0LGYsbil7dmFyIGksbzt2YXIgdT1uKjgtZi0xO3ZhciBhPSgxPDx1KS0xO3ZhciBzPWE+PjE7dmFyIGg9LTc7dmFyIGM9dD9uLTE6MDt2YXIgbD10Py0xOjE7dmFyIHA9ZVtyK2NdO2MrPWw7aT1wJigxPDwtaCktMTtwPj49LWg7aCs9dTtmb3IoO2g+MDtpPWkqMjU2K2VbcitjXSxjKz1sLGgtPTgpe31vPWkmKDE8PC1oKS0xO2k+Pj0taDtoKz1mO2Zvcig7aD4wO289byoyNTYrZVtyK2NdLGMrPWwsaC09OCl7fWlmKGk9PT0wKXtpPTEtc31lbHNlIGlmKGk9PT1hKXtyZXR1cm4gbz9OYU46KHA/LTE6MSkqSW5maW5pdHl9ZWxzZXtvPW8rTWF0aC5wb3coMixmKTtpPWktc31yZXR1cm4ocD8tMToxKSpvKk1hdGgucG93KDIsaS1mKX07ci53cml0ZT1mdW5jdGlvbihlLHIsdCxmLG4saSl7dmFyIG8sdSxhO3ZhciBzPWkqOC1uLTE7dmFyIGg9KDE8PHMpLTE7dmFyIGM9aD4+MTt2YXIgbD1uPT09MjM/TWF0aC5wb3coMiwtMjQpLU1hdGgucG93KDIsLTc3KTowO3ZhciBwPWY/MDppLTE7dmFyIHk9Zj8xOi0xO3ZhciBnPXI8MHx8cj09PTAmJjEvcjwwPzE6MDtyPU1hdGguYWJzKHIpO2lmKGlzTmFOKHIpfHxyPT09SW5maW5pdHkpe3U9aXNOYU4ocik/MTowO289aH1lbHNle289TWF0aC5mbG9vcihNYXRoLmxvZyhyKS9NYXRoLkxOMik7aWYociooYT1NYXRoLnBvdygyLC1vKSk8MSl7by0tO2EqPTJ9aWYobytjPj0xKXtyKz1sL2F9ZWxzZXtyKz1sKk1hdGgucG93KDIsMS1jKX1pZihyKmE+PTIpe28rKzthLz0yfWlmKG8rYz49aCl7dT0wO289aH1lbHNlIGlmKG8rYz49MSl7dT0ociphLTEpKk1hdGgucG93KDIsbik7bz1vK2N9ZWxzZXt1PXIqTWF0aC5wb3coMixjLTEpKk1hdGgucG93KDIsbik7bz0wfX1mb3IoO24+PTg7ZVt0K3BdPXUmMjU1LHArPXksdS89MjU2LG4tPTgpe31vPW88PG58dTtzKz1uO2Zvcig7cz4wO2VbdCtwXT1vJjI1NSxwKz15LG8vPTI1NixzLT04KXt9ZVt0K3AteV18PWcqMTI4fX19O3ZhciByPXt9O2Z1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18odCl7dmFyIGY9clt0XTtpZihmIT09dW5kZWZpbmVkKXtyZXR1cm4gZi5leHBvcnRzfXZhciBuPXJbdF09e2V4cG9ydHM6e319O3ZhciBpPXRydWU7dHJ5e2VbdF0obixuLmV4cG9ydHMsX19uY2N3cGNrX3JlcXVpcmVfXyk7aT1mYWxzZX1maW5hbGx5e2lmKGkpZGVsZXRlIHJbdF19cmV0dXJuIG4uZXhwb3J0c31pZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIHQ9X19uY2N3cGNrX3JlcXVpcmVfXyg3Mik7bW9kdWxlLmV4cG9ydHM9dH0pKCk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/page.jsx":
/*!**********************!*\
  !*** ./app/page.jsx ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _munezero_floparser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @munezero/floparser */ \"(app-pages-browser)/./node_modules/@munezero/floparser/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"useEffect\": ()=>{\n            const output = document.createElement('div');\n            const execute = {\n                \"useEffect.execute\": async ()=>{\n                    const { result, failures } = await (0,_munezero_floparser__WEBPACK_IMPORTED_MODULE_1__.runner)({\n                        value: value,\n                        outputElement: outputElement\n                    });\n                }\n            }[\"useEffect.execute\"];\n            void execute();\n        }\n    }[\"useEffect\"]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: \"Hello world\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\JASON\\\\Desktop\\\\New folder\\\\app\\\\page.jsx\",\n        lineNumber: 18,\n        columnNumber: 12\n    }, this);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9wYWdlLmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFNEM7QUFDWDtBQUVqQyw2QkFBZTtJQUVYQyxnREFBU0E7cUJBQUM7WUFDTixNQUFNQyxTQUFTQyxTQUFTQyxhQUFhLENBQUM7WUFFdEMsTUFBTUM7cUNBQVU7b0JBQ1osTUFBTSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBQyxHQUFHLE1BQU1QLDJEQUFNQSxDQUFDO3dCQUFFUSxPQUFRQTt3QkFBT0MsZUFBZUE7b0JBQWM7Z0JBQzNGOztZQUVBLEtBQUtKO1FBQ1Q7O0lBRUEscUJBQU8sOERBQUNLO2tCQUFJOzs7Ozs7QUFJaEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcSkFTT05cXERlc2t0b3BcXE5ldyBmb2xkZXJcXGFwcFxccGFnZS5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXHJcblxyXG5pbXBvcnQgeyBydW5uZXIgfSBmcm9tICdAbXVuZXplcm8vZmxvcGFyc2VyJ1xyXG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICgpe1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgY29uc3Qgb3V0cHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblxyXG4gICAgICAgIGNvbnN0IGV4ZWN1dGUgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHsgcmVzdWx0LCBmYWlsdXJlc30gPSBhd2FpdCBydW5uZXIoeyB2YWx1ZSA6IHZhbHVlLCBvdXRwdXRFbGVtZW50OiBvdXRwdXRFbGVtZW50IH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdm9pZCBleGVjdXRlKCk7XHJcbiAgICB9KVxyXG5cclxuICAgIHJldHVybiA8ZGl2PkhlbGxvIHdvcmxkXHJcblxyXG5cclxuICAgIDwvZGl2PlxyXG59Il0sIm5hbWVzIjpbInJ1bm5lciIsInVzZUVmZmVjdCIsIm91dHB1dCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImV4ZWN1dGUiLCJyZXN1bHQiLCJmYWlsdXJlcyIsInZhbHVlIiwib3V0cHV0RWxlbWVudCIsImRpdiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.jsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE$2\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PORTAL_TYPE:\n          return \"Portal\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function disabledLog() {}\n    function disableLogs() {\n      if (0 === disabledDepth) {\n        prevLog = console.log;\n        prevInfo = console.info;\n        prevWarn = console.warn;\n        prevError = console.error;\n        prevGroup = console.group;\n        prevGroupCollapsed = console.groupCollapsed;\n        prevGroupEnd = console.groupEnd;\n        var props = {\n          configurable: !0,\n          enumerable: !0,\n          value: disabledLog,\n          writable: !0\n        };\n        Object.defineProperties(console, {\n          info: props,\n          log: props,\n          warn: props,\n          error: props,\n          group: props,\n          groupCollapsed: props,\n          groupEnd: props\n        });\n      }\n      disabledDepth++;\n    }\n    function reenableLogs() {\n      disabledDepth--;\n      if (0 === disabledDepth) {\n        var props = { configurable: !0, enumerable: !0, writable: !0 };\n        Object.defineProperties(console, {\n          log: assign({}, props, { value: prevLog }),\n          info: assign({}, props, { value: prevInfo }),\n          warn: assign({}, props, { value: prevWarn }),\n          error: assign({}, props, { value: prevError }),\n          group: assign({}, props, { value: prevGroup }),\n          groupCollapsed: assign({}, props, { value: prevGroupCollapsed }),\n          groupEnd: assign({}, props, { value: prevGroupEnd })\n        });\n      }\n      0 > disabledDepth &&\n        console.error(\n          \"disabledDepth fell below zero. This is a bug in React. Please file an issue.\"\n        );\n    }\n    function describeBuiltInComponentFrame(name) {\n      if (void 0 === prefix)\n        try {\n          throw Error();\n        } catch (x) {\n          var match = x.stack.trim().match(/\\n( *(at )?)/);\n          prefix = (match && match[1]) || \"\";\n          suffix =\n            -1 < x.stack.indexOf(\"\\n    at\")\n              ? \" (<anonymous>)\"\n              : -1 < x.stack.indexOf(\"@\")\n                ? \"@unknown:0:0\"\n                : \"\";\n        }\n      return \"\\n\" + prefix + name + suffix;\n    }\n    function describeNativeComponentFrame(fn, construct) {\n      if (!fn || reentry) return \"\";\n      var frame = componentFrameCache.get(fn);\n      if (void 0 !== frame) return frame;\n      reentry = !0;\n      frame = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      var previousDispatcher = null;\n      previousDispatcher = ReactSharedInternals.H;\n      ReactSharedInternals.H = null;\n      disableLogs();\n      try {\n        var RunInRootFrame = {\n          DetermineComponentFrameRoot: function () {\n            try {\n              if (construct) {\n                var Fake = function () {\n                  throw Error();\n                };\n                Object.defineProperty(Fake.prototype, \"props\", {\n                  set: function () {\n                    throw Error();\n                  }\n                });\n                if (\"object\" === typeof Reflect && Reflect.construct) {\n                  try {\n                    Reflect.construct(Fake, []);\n                  } catch (x) {\n                    var control = x;\n                  }\n                  Reflect.construct(fn, [], Fake);\n                } else {\n                  try {\n                    Fake.call();\n                  } catch (x$0) {\n                    control = x$0;\n                  }\n                  fn.call(Fake.prototype);\n                }\n              } else {\n                try {\n                  throw Error();\n                } catch (x$1) {\n                  control = x$1;\n                }\n                (Fake = fn()) &&\n                  \"function\" === typeof Fake.catch &&\n                  Fake.catch(function () {});\n              }\n            } catch (sample) {\n              if (sample && control && \"string\" === typeof sample.stack)\n                return [sample.stack, control.stack];\n            }\n            return [null, null];\n          }\n        };\n        RunInRootFrame.DetermineComponentFrameRoot.displayName =\n          \"DetermineComponentFrameRoot\";\n        var namePropDescriptor = Object.getOwnPropertyDescriptor(\n          RunInRootFrame.DetermineComponentFrameRoot,\n          \"name\"\n        );\n        namePropDescriptor &&\n          namePropDescriptor.configurable &&\n          Object.defineProperty(\n            RunInRootFrame.DetermineComponentFrameRoot,\n            \"name\",\n            { value: \"DetermineComponentFrameRoot\" }\n          );\n        var _RunInRootFrame$Deter =\n            RunInRootFrame.DetermineComponentFrameRoot(),\n          sampleStack = _RunInRootFrame$Deter[0],\n          controlStack = _RunInRootFrame$Deter[1];\n        if (sampleStack && controlStack) {\n          var sampleLines = sampleStack.split(\"\\n\"),\n            controlLines = controlStack.split(\"\\n\");\n          for (\n            _RunInRootFrame$Deter = namePropDescriptor = 0;\n            namePropDescriptor < sampleLines.length &&\n            !sampleLines[namePropDescriptor].includes(\n              \"DetermineComponentFrameRoot\"\n            );\n\n          )\n            namePropDescriptor++;\n          for (\n            ;\n            _RunInRootFrame$Deter < controlLines.length &&\n            !controlLines[_RunInRootFrame$Deter].includes(\n              \"DetermineComponentFrameRoot\"\n            );\n\n          )\n            _RunInRootFrame$Deter++;\n          if (\n            namePropDescriptor === sampleLines.length ||\n            _RunInRootFrame$Deter === controlLines.length\n          )\n            for (\n              namePropDescriptor = sampleLines.length - 1,\n                _RunInRootFrame$Deter = controlLines.length - 1;\n              1 <= namePropDescriptor &&\n              0 <= _RunInRootFrame$Deter &&\n              sampleLines[namePropDescriptor] !==\n                controlLines[_RunInRootFrame$Deter];\n\n            )\n              _RunInRootFrame$Deter--;\n          for (\n            ;\n            1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter;\n            namePropDescriptor--, _RunInRootFrame$Deter--\n          )\n            if (\n              sampleLines[namePropDescriptor] !==\n              controlLines[_RunInRootFrame$Deter]\n            ) {\n              if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {\n                do\n                  if (\n                    (namePropDescriptor--,\n                    _RunInRootFrame$Deter--,\n                    0 > _RunInRootFrame$Deter ||\n                      sampleLines[namePropDescriptor] !==\n                        controlLines[_RunInRootFrame$Deter])\n                  ) {\n                    var _frame =\n                      \"\\n\" +\n                      sampleLines[namePropDescriptor].replace(\n                        \" at new \",\n                        \" at \"\n                      );\n                    fn.displayName &&\n                      _frame.includes(\"<anonymous>\") &&\n                      (_frame = _frame.replace(\"<anonymous>\", fn.displayName));\n                    \"function\" === typeof fn &&\n                      componentFrameCache.set(fn, _frame);\n                    return _frame;\n                  }\n                while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);\n              }\n              break;\n            }\n        }\n      } finally {\n        (reentry = !1),\n          (ReactSharedInternals.H = previousDispatcher),\n          reenableLogs(),\n          (Error.prepareStackTrace = frame);\n      }\n      sampleLines = (sampleLines = fn ? fn.displayName || fn.name : \"\")\n        ? describeBuiltInComponentFrame(sampleLines)\n        : \"\";\n      \"function\" === typeof fn && componentFrameCache.set(fn, sampleLines);\n      return sampleLines;\n    }\n    function describeUnknownElementTypeFrameInDEV(type) {\n      if (null == type) return \"\";\n      if (\"function\" === typeof type) {\n        var prototype = type.prototype;\n        return describeNativeComponentFrame(\n          type,\n          !(!prototype || !prototype.isReactComponent)\n        );\n      }\n      if (\"string\" === typeof type) return describeBuiltInComponentFrame(type);\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame(\"Suspense\");\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame(\"SuspenseList\");\n      }\n      if (\"object\" === typeof type)\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return (type = describeNativeComponentFrame(type.render, !1)), type;\n          case REACT_MEMO_TYPE:\n            return describeUnknownElementTypeFrameInDEV(type.type);\n          case REACT_LAZY_TYPE:\n            prototype = type._payload;\n            type = type._init;\n            try {\n              return describeUnknownElementTypeFrameInDEV(type(prototype));\n            } catch (x) {}\n        }\n      return \"\";\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(type, key, self, source, owner, props) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      if (\n        \"string\" === typeof type ||\n        \"function\" === typeof type ||\n        type === REACT_FRAGMENT_TYPE ||\n        type === REACT_PROFILER_TYPE ||\n        type === REACT_STRICT_MODE_TYPE ||\n        type === REACT_SUSPENSE_TYPE ||\n        type === REACT_SUSPENSE_LIST_TYPE ||\n        type === REACT_OFFSCREEN_TYPE ||\n        (\"object\" === typeof type &&\n          null !== type &&\n          (type.$$typeof === REACT_LAZY_TYPE ||\n            type.$$typeof === REACT_MEMO_TYPE ||\n            type.$$typeof === REACT_CONTEXT_TYPE ||\n            type.$$typeof === REACT_CONSUMER_TYPE ||\n            type.$$typeof === REACT_FORWARD_REF_TYPE ||\n            type.$$typeof === REACT_CLIENT_REFERENCE$1 ||\n            void 0 !== type.getModuleId))\n      ) {\n        var children = config.children;\n        if (void 0 !== children)\n          if (isStaticChildren)\n            if (isArrayImpl(children)) {\n              for (\n                isStaticChildren = 0;\n                isStaticChildren < children.length;\n                isStaticChildren++\n              )\n                validateChildKeys(children[isStaticChildren], type);\n              Object.freeze && Object.freeze(children);\n            } else\n              console.error(\n                \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n              );\n          else validateChildKeys(children, type);\n      } else {\n        children = \"\";\n        if (\n          void 0 === type ||\n          (\"object\" === typeof type &&\n            null !== type &&\n            0 === Object.keys(type).length)\n        )\n          children +=\n            \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\";\n        null === type\n          ? (isStaticChildren = \"null\")\n          : isArrayImpl(type)\n            ? (isStaticChildren = \"array\")\n            : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE\n              ? ((isStaticChildren =\n                  \"<\" +\n                  (getComponentNameFromType(type.type) || \"Unknown\") +\n                  \" />\"),\n                (children =\n                  \" Did you accidentally export a JSX literal instead of a component?\"))\n              : (isStaticChildren = typeof type);\n        console.error(\n          \"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",\n          isStaticChildren,\n          children\n        );\n      }\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(type, children, self, source, getOwner(), maybeKey);\n    }\n    function validateChildKeys(node, parentType) {\n      if (\n        \"object\" === typeof node &&\n        node &&\n        node.$$typeof !== REACT_CLIENT_REFERENCE\n      )\n        if (isArrayImpl(node))\n          for (var i = 0; i < node.length; i++) {\n            var child = node[i];\n            isValidElement(child) && validateExplicitKey(child, parentType);\n          }\n        else if (isValidElement(node))\n          node._store && (node._store.validated = 1);\n        else if (\n          (null === node || \"object\" !== typeof node\n            ? (i = null)\n            : ((i =\n                (MAYBE_ITERATOR_SYMBOL && node[MAYBE_ITERATOR_SYMBOL]) ||\n                node[\"@@iterator\"]),\n              (i = \"function\" === typeof i ? i : null)),\n          \"function\" === typeof i &&\n            i !== node.entries &&\n            ((i = i.call(node)), i !== node))\n        )\n          for (; !(node = i.next()).done; )\n            isValidElement(node.value) &&\n              validateExplicitKey(node.value, parentType);\n    }\n    function isValidElement(object) {\n      return (\n        \"object\" === typeof object &&\n        null !== object &&\n        object.$$typeof === REACT_ELEMENT_TYPE\n      );\n    }\n    function validateExplicitKey(element, parentType) {\n      if (\n        element._store &&\n        !element._store.validated &&\n        null == element.key &&\n        ((element._store.validated = 1),\n        (parentType = getCurrentComponentErrorInfo(parentType)),\n        !ownerHasKeyUseWarning[parentType])\n      ) {\n        ownerHasKeyUseWarning[parentType] = !0;\n        var childOwner = \"\";\n        element &&\n          null != element._owner &&\n          element._owner !== getOwner() &&\n          ((childOwner = null),\n          \"number\" === typeof element._owner.tag\n            ? (childOwner = getComponentNameFromType(element._owner.type))\n            : \"string\" === typeof element._owner.name &&\n              (childOwner = element._owner.name),\n          (childOwner = \" It was passed a child from \" + childOwner + \".\"));\n        var prevGetCurrentStack = ReactSharedInternals.getCurrentStack;\n        ReactSharedInternals.getCurrentStack = function () {\n          var stack = describeUnknownElementTypeFrameInDEV(element.type);\n          prevGetCurrentStack && (stack += prevGetCurrentStack() || \"\");\n          return stack;\n        };\n        console.error(\n          'Each child in a list should have a unique \"key\" prop.%s%s See https://react.dev/link/warning-keys for more information.',\n          parentType,\n          childOwner\n        );\n        ReactSharedInternals.getCurrentStack = prevGetCurrentStack;\n      }\n    }\n    function getCurrentComponentErrorInfo(parentType) {\n      var info = \"\",\n        owner = getOwner();\n      owner &&\n        (owner = getComponentNameFromType(owner.type)) &&\n        (info = \"\\n\\nCheck the render method of `\" + owner + \"`.\");\n      info ||\n        ((parentType = getComponentNameFromType(parentType)) &&\n          (info =\n            \"\\n\\nCheck the top-level render call using <\" + parentType + \">.\"));\n      return info;\n    }\n    var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\"),\n      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,\n      REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      assign = Object.assign,\n      REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"),\n      isArrayImpl = Array.isArray,\n      disabledDepth = 0,\n      prevLog,\n      prevInfo,\n      prevWarn,\n      prevError,\n      prevGroup,\n      prevGroupCollapsed,\n      prevGroupEnd;\n    disabledLog.__reactDisabledLog = !0;\n    var prefix,\n      suffix,\n      reentry = !1;\n    var componentFrameCache = new (\n      \"function\" === typeof WeakMap ? WeakMap : Map\n    )();\n    var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var didWarnAboutKeySpread = {},\n      ownerHasKeyUseWarning = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      return jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self);\n    };\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcSkFTT05cXERlc2t0b3BcXE5ldyBmb2xkZXJcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcY29tcGlsZWRcXHJlYWN0XFxqc3gtZGV2LXJ1bnRpbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5wcm9kdWN0aW9uLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@munezero/floparser/Compilers/MemoryManager/index.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@munezero/floparser/Compilers/MemoryManager/index.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDate: () => (/* binding */ Eo),\n/* harmony export */   createDrawer: () => (/* binding */ _o),\n/* harmony export */   createMemoryManager: () => (/* binding */ To)\n/* harmony export */ });\nvar y=\"as\",Z=\"=\",G=\"break\",D=\"else\",K=\"enum\",V=\"export\",z=\"if\",m=\"import\",k=\"->\",j=\"is\",J=\"loop\",W=\"mut\",Q=\"native\",v=\"object\",X=\"fn\",$=\"return\",q=\"self\",tt=\"template\",et=Object.freeze({ALIAS:y,ASSIGN:Z,BREAK:G,ELSE:D,ENUMERATION:K,EXPORT:V,IF:z,IMPORT:m,INTO:k,IS:j,LOOP:J,MUTABLE:W,NATIVE:Q,OBJECT:v,PROCEDURE:X,RETURN:$,SELF:q,TEMPLATE:tt}),L=et;var ot=\"assign\",nt=\"arity_match\",rt=\"arity_status\",st=\"array_assignment\",ct=\"branch-match\",Tt=\"branch-default\",Et=\"condition\",_t=\"loop\",it=\"data\",pt=\"generics\",xt=\"enumeration\",St=\"expression\",at=\"instance\",ft=\"Link\",At=\"local\",Rt=\"object\",Ot=\"procedure\",It=\"return\",lt=\"compare\",ut=\"select\",Nt=\"member\",Pt=\"store\",Yt=\"break\",dt=\"literal\",Ct=\"array_access\",Lt=\"valueLink\",Mt=\"linkValue\",bt=\"self\",gt=\"procedure-call\",Ut=\"Maybe\",wt=\"native\",ht=\"move\",Bt=\"String\",Ft=\"Array\",Ht=\"import\",yt=\"library\",Zt=\"constructor\",Gt=\"destructor\",Dt=\"free\",Kt=\"block-end\",Vt=\"default-block\",zt=\"continue\",mt=\"branch\",kt=\"statement\",jt=\"draw\",Jt=\"now\",Wt=\"size\",Qt=\"concatenation\",vt=\"foreach\",Xt=\"while\",$t=\"when\",qt=\"while-condition\",te=\"foreach-condition\",ee=\"foreach-end\",oe=\"for\",ne=\"up_to\",re=\"down_to\",se=\"almost_up_to\",ce=\"almost_down_to\",Te=\"I32\",Ee=\"U32\",_e=\"FP32\",ie=\"I16\",pe=\"U16\",xe=\"U8\",Se=\"I8\",ae=\"FP64\",fe=\"U64\",Ae=\"I64\",Re=\"Char\",Oe=\"block-start\",Ie=\"function-call\",le=\"Bool\",ue=Object.freeze({TYPES_ASSIGN:ot,TYPES_ARRAY:Ft,TYPES_ARITY_MATCH:nt,TYPES_ARITY_STATUS:rt,TYPES_ARRAY_ASSIGNMENT:st,TYPES_BRANCH_MATCH:ct,TYPES_BRANCH_DEFAULT:Tt,TYPES_CONDITION:Et,TYPES_LOOP:_t,TYPES_FOREACH_END:ee,TYPES_WHILE_CONDITION:qt,TYPES_FOREACH_CONDITION:te,TYPES_DATA:it,TYPES_COMPARE:lt,TYPES_GENERICS:pt,TYPES_ENUMERATION:xt,TYPES_EXPRESSION:St,TYPES_INSTANCE:at,TYPES_LINK:ft,TYPES_IMPORT:Ht,TYPES_LOCAL:At,TYPES_OBJECT:Rt,TYPES_PROCEDURE:Ot,TYPES_RETURN:It,TYPES_SELECT:ut,TYPES_MEMBER:Nt,TYPES_STORE:Pt,TYPES_BREAK:Yt,TYPES_LITERAL:dt,TYPES_ARRAY_ACCESS:Ct,TYPES_LINK_TO:Lt,TYPES_VALUE_AT:Mt,TYPES_SELF:bt,TYPES_LIBRARY:yt,TYPES_DROP:gt,TYPES_MAYBE:Ut,TYPES_NATIVE:wt,TYPES_MOVE:ht,TYPES_STRING:Bt,TYPES_CONSTRUCTOR:Zt,TYPES_FREE:Dt,TYPES_DEFAULT_BLOCK:Vt,TYPES_BLOCK_END:Kt,TYPES_CONTINUE:zt,TYPES_BRANCH:mt,TYPES_STATEMENT:kt,TYPES_DESTRUCTOR:Gt,TYPES_DRAW:jt,TYPES_NOW:Jt,TYPES_SIZE:Wt,TYPES_CONCAT:Qt,TYPES_FOREACH:vt,TYPES_WHILE:Xt,TYPES_WHEN:$t,TYPES_FOR:oe,TYPES_UP_TO:ne,TYPES_DOWN_TO:re,TYPES_ALMOST_UP_TO:se,TYPES_ALMOST_DOWN_TO:ce,TYPES_I32:Te,TYPES_FP32:_e,TYPES_FP64:ae,TYPES_U32:Ee,TYPES_I64:Ae,TYPES_U64:fe,TYPES_I16:ie,TYPES_U16:pe,TYPES_I8:Se,TYPES_U8:xe,TYPES_CHAR:Re,TYPES_BOOL:le,TYPES_BLOCK_BEGIN:Oe,TYPES_FUNCTION_CALL:Ie}),M=ue;var Ne=Object.freeze({COLON:58,COMMA:44,DIGIT_ZERO:48,DIGIT_NINE:57,DOT:46,HASHTAG:35,HORIZONTAL_TAB:9,HYPHEN_MINUS:45,LEFT_CURLY_BRACKET:123,LEFT_PARENTHESIS:40,LEFT_SQUARE_BRACKET:91,LINE_BREAK:10,NULL:0,PLUS_SIGN:43,RIGHT_CURLY_BRACKET:125,RIGHT_PARENTHESIS:41,RIGHT_SQUARE_BRACKET:93,SEMICOLON:59,SPACE:32,E_SIGN:101}),b=Ne;var Pe=\"assignment\",Ye=\"Flogram\",de=Object.freeze({K_ASSIGNMENT:Pe,K_FLOGRAM:Ye}),g=de;var Ce=Object.freeze([[43],[45],[42],[47],[37],[110,111,116],[60],[62],[94],[111,114],[33],[61,61],[60,61],[62,61],[33,61],[120,111,114],[97,110,100]]),Le=Ce,U=Le;var Me=Object.freeze({INT_ARRAY_START:9999991,FLOAT_ARRAY_START:9999981,STRING_START:8888891,CHAR_START:8888881,NAT_ON_HORIZON:7777791,BIG_NAT_ON_HORIZON:7777591,FLOAT_ON_HORIZON:7777771,BIG_FLOAT_ON_HORIZON:7777731,END_OF_LINE:66666661}),w=Me;var be=Object.freeze({ENUM_MEMORY_SIZE:12,ENUM_STACK_SIZE:3,ARRAY_MEMORY_SIZE:12,ARRAY_STACK_SIZE:3,ARRAY_DEFAULT_CAPACITY:4,STRING_MEMORY_SIZE:8,STRING_STACK_SIZE:2,OBJECT_MEMORY_SIZE:8,OBJECT_STACK_SIZE:2,NATIVE_MEMORY_SIZE:4,NATIVE_STACK_SIZE:1,NATIVE_SIZE:4,STEP:4,DOUBLE_STEP:8,TRIPPLE_STEP:12}),h=be;var ge=Object.freeze([]),Ue=Object.freeze({}),we=\"\",he=\"\t\",Be=`\n`,Fe=\"UTF-8\";var He=Object.freeze({EMPTY_ARRAY:ge,EMPTY_OBJECT:Ue,EMPTY_STRING:we,HORIZONTAL_TAB:he,LINE_BREAK:Be,UNICODE_TEXT:Fe,Codes:b,Keys:L,Types:M,Keywords:g,Operators:U,DrawStates:w,Sizes:h}),B=He;var{INT_ARRAY_START:ye,FLOAT_ARRAY_START:F,STRING_START:H,CHAR_START:Ze,END_OF_LINE:Ge,NAT_ON_HORIZON:De,BIG_NAT_ON_HORIZON:Ke,FLOAT_ON_HORIZON:Ve,BIG_FLOAT_ON_HORIZON:ze}=B.DrawStates;function To(r){let c=[{start:r.buffer.byteLength/2,size:r.buffer.byteLength/2}],E=new Map,x=[],S=[];function _(){return c}function A(){return E}function R(e){let o=0;for(;o<c.length&&c[o].start<e.start;)o++;c.splice(o,0,e)}let O;function Y(e){O===void 0?O=e:(S.push({first:O,second:e}),O=void 0)}function d(){if(!S.length)return[0,0];let e=S.pop();return[e.first,e.second]}function I(){if(S.length<2)return[0,0];let[e]=S.splice(S.length-2,1);return[e.first,e.second]}function s(e){let o=E.get(e);if(!o)throw new Error(\"Invalid pointer: \"+e);let t=i(o.size),p=new Uint8Array(r.buffer,e,o.size);return new Uint8Array(r.buffer,t,o.size).set(p),t}function T(){let e=Array.from(E.entries());if(e.length<2)return;let[o,t]=e[e.length-2],[p,n]=e[e.length-1]}function i(e){for(let t=0;t<c.length;t++)if(c[t].size>=e){let p=c.splice(t,1);if(p.length>0){let n=p[0];if(n.size>e){let C={start:n.start+e,size:n.size-e};R(C)}return n.size=e,E.set(n.start,n),n.start}}if(r.buffer.byteLength+e>r.buffer.byteLength*r.buffer.byteLength/65536){let t=Math.ceil(e/65536);r.grow(t)}let o={start:r.buffer.byteLength,size:e};return E.set(o.start,o),o.start}function f(e){let o=E.get(e);if(!o){console.error(\"Unable to find block\");return}E.delete(e);for(let t=0;t<c.length;t++)c[t].start+c[t].size===o.start?(o.start=c[t].start,o.size+=c[t].size,c.splice(t,1),t--):o.start+o.size===c[t].start&&(o.size+=c[t].size,c.splice(t,1),t--);R(o)}function a(e){return x.find(o=>o.dataPtr===e)}function l(e){let o=i(4*e).start,t={dataPtr:o,length:0,capacity:4,elementTypeSize:e};return x.push(t),o}function u(e,o){let t=a(e);if(!t)throw new Error(\"Vector not found\");if(t.length>=t.capacity){let n=t.dataPtr;t.dataPtr=i(2*t.capacity*t.elementTypeSize).start,t.capacity*=2;let C=new Uint8Array(r.buffer,n,t.length*t.elementTypeSize);new Uint8Array(r.buffer,t.dataPtr,t.capacity*t.elementTypeSize).set(C),f(n)}let p=new Uint8Array(r.buffer,t.dataPtr+t.length*t.elementTypeSize,t.elementTypeSize);for(let n=0;n<t.elementTypeSize;n++)p[n]=o>>n*8&255;t.length+=1}function N(e,o=4){let t=i(o),p=new Uint8Array(r.buffer,t.start,o);for(let n=0;n<o;n++)p[n]=e>>n*8&255;return t.start}function P(e,o=4){let t=new Uint8Array(r.buffer,e,o),p=0;for(let n=0;n<o;n++)p|=t[n]<<n*8;return p}return{alloc:i,dealloc:f,merge:T,save:Y,undo:d,undoPenultimate:I,createVector:l,pushToVector:u,allocateValue:N,readValue:P,getFreeList:_,getUsedBlocks:A,copy:s}}function Eo(){function r(){return BigInt(Date.now())}return{now:r}}function _o(r,c=void 0){let E=[],x=\"default\",S,_,A,R,O;function Y(s,T,i){let f;return i===F?f=new Float32Array(r.buffer,s,T):f=new Int32Array(r.buffer,s,T),Array.from(f)}function d(s,T){let i=new Int32Array(r.buffer,s,T),f=new Float32Array(r.buffer,s,T),a=\"\",l=!1,u=!1,N=!1,P=!1;for(let e=0;e<i.length;e++){let o=i[e];if(l){a+=o.toString(),l=!1;continue}if(u){a+=f[e].toString(),u=!1;continue}if(N){let t=o,p=i[e+1],n=BigInt(t)+(BigInt(p)<<32n);a+=n.toString(),N=!1,e++;continue}if(P){let t=new Float64Array(r.buffer,s+e*4,1);a+=t[0].toString(),P=!1,e++;continue}if(o===De){l=!0;continue}if(o===Ve){u=!0;continue}if(o===Ke){N=!0;continue}if(o===ze){P=!0;continue}o>=32&&o<=126?a+=String.fromCharCode(o):a+=o.toString()}return a}function I(s){if(s===Ge){if(E.length>0){let T=E.join(\" \");if(c){let i=document.createElement(\"p\");i.innerHTML=T,c.appendChild(i)}else console.log(T);E=[]}return}if(x===\"default\"){if(s===ye||s===F){x=\"array\",O=s,S=void 0,_=void 0;return}if(s===H){x=\"string\",A=void 0,_=void 0;return}if(s===Ze){x=\"char\",R=void 0;return}E.push(s)}else if(x===\"array\"){if(_==null){_=s;return}if(!S){S=s;let T=Y(S,_,O);E.push(T),S=void 0,_=void 0,x=\"default\"}}else if(x===\"string\"){if(s===H)return;if(_==null){_=s;return}if(!A){A=s;let T=d(A,_);E.push(T),A=void 0,_=void 0,x=\"default\"}}else if(x===\"char\"&&!R){R=s;let T=String.fromCharCode(R);E.push(`${T}`),x=\"default\"}}return{draw:I,drawI64:I,drawFP32:I,drawFP64:I,receiveParams:I,readArrayFromMemory:Y}}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@munezero/floparser/Compilers/MemoryManager/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@munezero/floparser/Compilers/SimplerWASM/index.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@munezero/floparser/Compilers/SimplerWASM/index.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Qu)\n/* harmony export */ });\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nvar _c=\"as\",Oc=\"=\",bc=\"break\",dc=\"else\",mc=\"enum\",Tc=\"export\",gc=\"if\",yc=\"import\",xc=\"->\",Ic=\"is\",Ac=\"loop\",Nc=\"mut\",Rc=\"native\",Sc=\"object\",Pc=\"fn\",zc=\"return\",jc=\"self\",Cc=\"template\",Fc=Object.freeze({ALIAS:_c,ASSIGN:Oc,BREAK:bc,ELSE:dc,ENUMERATION:mc,EXPORT:Tc,IF:gc,IMPORT:yc,INTO:xc,IS:Ic,LOOP:Ac,MUTABLE:Nc,NATIVE:Rc,OBJECT:Sc,PROCEDURE:Pc,RETURN:zc,SELF:jc,TEMPLATE:Cc}),$n=Fc;var Dc=\"assign\",Uc=\"arity_match\",kc=\"arity_status\",Lc=\"array_assignment\",Yc=\"branch-match\",wc=\"branch-default\",Vc=\"condition\",vc=\"loop\",Mc=\"data\",Bc=\"generics\",Kc=\"enumeration\",Gc=\"expression\",Hc=\"instance\",Zc=\"Link\",Xc=\"local\",Wc=\"object\",qc=\"procedure\",$c=\"return\",Jc=\"compare\",Qc=\"select\",ea=\"member\",ta=\"store\",sa=\"break\",na=\"literal\",oa=\"array_access\",ca=\"valueLink\",aa=\"linkValue\",ra=\"self\",ia=\"procedure-call\",pa=\"Maybe\",la=\"native\",ua=\"move\",fa=\"String\",ha=\"Array\",Ea=\"import\",_a=\"library\",Oa=\"constructor\",ba=\"destructor\",da=\"free\",ma=\"block-end\",Ta=\"default-block\",ga=\"continue\",ya=\"branch\",xa=\"statement\",Ia=\"draw\",Aa=\"now\",Na=\"size\",Ra=\"concatenation\",Sa=\"foreach\",Pa=\"while\",za=\"when\",ja=\"while-condition\",Ca=\"foreach-condition\",Fa=\"foreach-end\",Da=\"for\",Ua=\"up_to\",ka=\"down_to\",La=\"almost_up_to\",Ya=\"almost_down_to\",wa=\"I32\",Va=\"U32\",va=\"FP32\",Ma=\"I16\",Ba=\"U16\",Ka=\"U8\",Ga=\"I8\",Ha=\"FP64\",Za=\"U64\",Xa=\"I64\",Wa=\"Char\",qa=\"block-start\",$a=\"function-call\",Ja=\"Bool\",Qa=Object.freeze({TYPES_ASSIGN:Dc,TYPES_ARRAY:ha,TYPES_ARITY_MATCH:Uc,TYPES_ARITY_STATUS:kc,TYPES_ARRAY_ASSIGNMENT:Lc,TYPES_BRANCH_MATCH:Yc,TYPES_BRANCH_DEFAULT:wc,TYPES_CONDITION:Vc,TYPES_LOOP:vc,TYPES_FOREACH_END:Fa,TYPES_WHILE_CONDITION:ja,TYPES_FOREACH_CONDITION:Ca,TYPES_DATA:Mc,TYPES_COMPARE:Jc,TYPES_GENERICS:Bc,TYPES_ENUMERATION:Kc,TYPES_EXPRESSION:Gc,TYPES_INSTANCE:Hc,TYPES_LINK:Zc,TYPES_IMPORT:Ea,TYPES_LOCAL:Xc,TYPES_OBJECT:Wc,TYPES_PROCEDURE:qc,TYPES_RETURN:$c,TYPES_SELECT:Qc,TYPES_MEMBER:ea,TYPES_STORE:ta,TYPES_BREAK:sa,TYPES_LITERAL:na,TYPES_ARRAY_ACCESS:oa,TYPES_LINK_TO:ca,TYPES_VALUE_AT:aa,TYPES_SELF:ra,TYPES_LIBRARY:_a,TYPES_DROP:ia,TYPES_MAYBE:pa,TYPES_NATIVE:la,TYPES_MOVE:ua,TYPES_STRING:fa,TYPES_CONSTRUCTOR:Oa,TYPES_FREE:da,TYPES_DEFAULT_BLOCK:Ta,TYPES_BLOCK_END:ma,TYPES_CONTINUE:ga,TYPES_BRANCH:ya,TYPES_STATEMENT:xa,TYPES_DESTRUCTOR:ba,TYPES_DRAW:Ia,TYPES_NOW:Aa,TYPES_SIZE:Na,TYPES_CONCAT:Ra,TYPES_FOREACH:Sa,TYPES_WHILE:Pa,TYPES_WHEN:za,TYPES_FOR:Da,TYPES_UP_TO:Ua,TYPES_DOWN_TO:ka,TYPES_ALMOST_UP_TO:La,TYPES_ALMOST_DOWN_TO:Ya,TYPES_I32:wa,TYPES_FP32:va,TYPES_FP64:Ha,TYPES_U32:Va,TYPES_I64:Xa,TYPES_U64:Za,TYPES_I16:Ma,TYPES_U16:Ba,TYPES_I8:Ga,TYPES_U8:Ka,TYPES_CHAR:Wa,TYPES_BOOL:Ja,TYPES_BLOCK_BEGIN:qa,TYPES_FUNCTION_CALL:$a}),tn=Qa;var er=Object.freeze({COLON:58,COMMA:44,DIGIT_ZERO:48,DIGIT_NINE:57,DOT:46,HASHTAG:35,HORIZONTAL_TAB:9,HYPHEN_MINUS:45,LEFT_CURLY_BRACKET:123,LEFT_PARENTHESIS:40,LEFT_SQUARE_BRACKET:91,LINE_BREAK:10,NULL:0,PLUS_SIGN:43,RIGHT_CURLY_BRACKET:125,RIGHT_PARENTHESIS:41,RIGHT_SQUARE_BRACKET:93,SEMICOLON:59,SPACE:32,E_SIGN:101}),Jn=er;var tr=\"assignment\",sr=\"Flogram\",nr=Object.freeze({K_ASSIGNMENT:tr,K_FLOGRAM:sr}),Qn=nr;var or=Object.freeze([[43],[45],[42],[47],[37],[110,111,116],[60],[62],[94],[111,114],[33],[61,61],[60,61],[62,61],[33,61],[120,111,114],[97,110,100]]),cr=or,eo=cr;var ar=Object.freeze({INT_ARRAY_START:9999991,FLOAT_ARRAY_START:9999981,STRING_START:8888891,CHAR_START:8888881,NAT_ON_HORIZON:7777791,BIG_NAT_ON_HORIZON:7777591,FLOAT_ON_HORIZON:7777771,BIG_FLOAT_ON_HORIZON:7777731,END_OF_LINE:66666661}),to=ar;var rr=Object.freeze({ENUM_MEMORY_SIZE:12,ENUM_STACK_SIZE:3,ARRAY_MEMORY_SIZE:12,ARRAY_STACK_SIZE:3,ARRAY_DEFAULT_CAPACITY:4,STRING_MEMORY_SIZE:8,STRING_STACK_SIZE:2,OBJECT_MEMORY_SIZE:8,OBJECT_STACK_SIZE:2,NATIVE_MEMORY_SIZE:4,NATIVE_STACK_SIZE:1,NATIVE_SIZE:4,STEP:4,DOUBLE_STEP:8,TRIPPLE_STEP:12}),so=rr;var ir=Object.freeze([]),pr=Object.freeze({}),lr=\"\",ur=\"\t\",fr=`\n`,hr=\"UTF-8\",Ns=tn,Er=Object.freeze({EMPTY_ARRAY:ir,EMPTY_OBJECT:pr,EMPTY_STRING:lr,HORIZONTAL_TAB:ur,LINE_BREAK:fr,UNICODE_TEXT:hr,Codes:Jn,Keys:$n,Types:tn,Keywords:Qn,Operators:eo,DrawStates:to,Sizes:so}),Rt=Er;var _r=Object.freeze([\"FP64\",\"U64\",\"I64\",\"FP32\",\"U32\",\"I32\",\"U16\",\"I16\",\"U8\",\"I8\",\"Bool\",\"Char\",\"Array\",\"String\",\"Link\",\"Maybe\"]),qt=[\"U8\",\"U16\",\"U32\"],ps=[...qt,\"I8\",\"I16\",\"I32\"],sn=[\"I64\",\"U64\"],ls=[...ps,...sn],Rs=[\"FP32\",\"FP64\"],us=[...ls,...Rs],fs=_r;var{EMPTY_STRING:Or,UNICODE_TEXT:an}=Rt;var br=48,dr=57,mr=46,no=45,oo=43,Tr=65,gr=90,yr=\"e\".charCodeAt(0),xr=\"E\".charCodeAt(0),Ir=-1,Ar=1,co=new TextDecoder(an),Nr=new TextEncoder,Rr=Rt.Operators,Sr=(c,s,r=0,h=c.length|0,D=0,ce=s.length|0)=>{for(D=D|0,r=r|0,ce=ce|0,h=h|0;;){let e=r>=h,pe=D>=ce;if(e||pe)break;let Oe=c[r],$=s[D];if(r=r+1|0,D=D+1|0,Oe<$)return Ir;if(Oe>$)return Ar}return 0},Pr=(c,s,r=0,h=c.length|0,D=0,ce=s.length|0)=>{for(D=D|0,r=r|0,ce=ce|0,h=h|0;;){let e=D>=ce,pe=r>=h;if(e||pe)break;s[D]=c[r],D=D+1|0,r=r+1|0}},io=(c,s,r=0,h=c.length|0,D=0,ce=s.length|0)=>{r=r|0,D=D|0,h=h|0,ce=ce|0;let e=h-r|0,pe=ce-D|0;if(e!==pe)return!1;for(;;){let me=r>=h,Oe=D>=ce;if(me||Oe)break;let Re=c[r],lt=s[D];if(r=r+1|0,D=D+1|0,Re!==lt)return!1}return!0},zr=c=>{c=c>>>0;let s=0,r=0;for(;r=(r<<1|1)>>>0,!(r>c);)s=s+1|0;return s},po=Object.freeze([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]),cn=(c,s,r,h)=>{for(c=c>>>0,h=h??s.length|0,r=r|0,h=h|0;c>0&&h>r;)h=h-1|0,s[h]=po[c&15],c=c>>>4},jr=(c,s,r,h)=>{let D=r|0,ce=r+h|0;if(h===0)return!1;let e=!1,pe=!1,me=!1,Oe=$=>$===oo||$===no;for(;D<ce;){let $=s[D];D=D+1|0;let Re=br<=$&&$<=dr,lt=oo===$||$===no,ut=mr===$,Ye=Br===$,nt=$===yr||$===xr;if(Re){me=!0;continue}else if(lt){if((D===r+1||e&&!pe)&&!me)continue}else if((Ye||ut)&&!e&&!pe||nt&&!e)nt&&(e=!0,D<ce&&Oe(s[D])&&(D=D+1|0,pe=!0));else return!1}return me&&(!e||e&&pe)},Cr={I8:[...ps],U8:[...qt],I16:[...ps],U16:[...qt],I32:[...ps],U32:[...qt],I64:[...ls],U64:[...qt],FP32:us,FP64:us},Fr=(c,s)=>!us.includes(c)||!us.includes(s)?!1:Cr[c].includes(s),Dr=c=>{let s=c>=Tr,r=c<=gr;return s&&r},Ps=128,zs=127,lo=-1,$t=64,rn=c=>{c=c|0;let s=[];for(;;){let r=c&zs;c=c>>7;let h=c===0,D=(r&$t)===0,ce=h&&D,e=c===-1,pe=(r&$t)!==0;if(ce||e&&pe){s.push(r);break}r=r|Ps,s.push(r)}return s},Ur=c=>{let s=[],r=!0;for(;r;){let h=c&zs;c>>=7,c===0&&!(h&$t)||c===-1&&h&$t?r=!1:h|=Ps,s.push(h)}return s},uo=(c,s)=>{s=s|0;let r=0,h=0;for(;;){let D=c[s]|0;s=s+1|0;let ce=(D&zs)<<h;if(h=h+7|0,r=r|ce,(D&Ps)===0){let pe=(D&$t)!==0,me=h<32;if(pe&&me){let $=lo<<h;r=r|$}break}}return r},kr=(c,s)=>{s=s|0;let r=0,h=0;for(;;){let D=c[s]|0;s=s+1|0;let ce=(D&zs)<<h;if(h=h+7|0,r=r|ce,!(D&Ps)){if(D&$t){let e=lo<<h;r=r|e}break}}return r},Lr=c=>{try{return co.decode(c)}catch{return co.decode(new Uint8Array([c]))}},Yr=c=>Nr.encode(c),wr=(c=Or)=>{let s=c.length|0,r=rn(s),h=Buffer.from(c,an);return Object.freeze([...r,...h])},Vr=(c,s)=>{s=s|0;let r=uo(c,s),h=rn(r).length;return s=s+h|0,c.subarray(s,s+r|0).toString(an)},vr=58,Mr=46,Br=95,hs=32,nn=48,Kr=67,Ut=new Uint8Array(Kr),ao=Ut.subarray(0,8),Ss=Ut.subarray(10,49),ro=Ut.subarray(51,68),on=16,Gr=2;Ut[8]=vr;Ut[9]=hs;Ut[49]=hs;Ut[50]=hs;var Hr=(c,s)=>{s=s??console.log;let r=32,h=126,D=c.length|0,ce=0;for(;D>0;){ao.fill(nn),cn(ce,ao),Ss.fill(hs),ro.fill(hs);let e=D>=on?on:D;D=D-on|0;let pe=0,me=0;for(let $=1;$<=e;$=$+1|0){let Re=c[ce]&255;Ss[pe+0|0]=nn,Ss[pe+1|0]=nn,cn(Re,Ss,pe,pe+2|0);let lt=Mr;r<=Re&&Re<=h&&(lt=Re),ro[me]=lt,ce=ce+1|0,pe=pe+2|0,me=me+1|0,$%Gr===0&&(pe=pe+1|0)}let Oe=String.fromCodePoint(...Ut);s(Oe)}},Zr=function*(c,s){let r=c.length|0,h=s.length|0,D=0;for(;D<r&&D<h;){let ce=c[D],e=s[D];yield[ce,e],D=D+1|0}},Xr=function*(c,s,r){let h=c.length|0,D=s.length|0,ce=r.length|0,e=0;for(;e<h&&e<D&&e<ce;){let pe=c[e],me=s[e],Oe=r[e];yield[pe,me,Oe],e=e+1|0}},Wr=c=>{for(let s of Rr)if(io(c,s))return!0;return!1},qr=Object.freeze({ARRAY_COMPARE:Sr,ARRAY_COPY:Pr,ARRAY_EQUAL:io,BIT_DEPTH:zr,HEX_DIGITS:po,HEX_ENCODE:cn,IS_NUMBER:jr,IS_UPPERCASE:Dr,IS_VALID_AUTO_CAST:Fr,LEB128_DECODE:uo,LEB128_DECODE_SIGNED:kr,LEB128_ENCODE:rn,LEB128_ENCODE_SIGNED:Ur,UTF8_DECODE:Lr,UTF8_ENCODE:Yr,WASM_STRING_ENCODE:wr,WASM_STRING_DECODE:Vr,XXD_DUMP_HEX:Hr,ZIP2:Zr,ZIP3:Xr,IS_OPERATOR:Wr}),Jt=qr;var ct=(c,s=2)=>{let r=\"\";switch(c){case\"+\":r=\"add\";break;case\"-\":r=s===2?\"sub\":\"neg\";break;case\"*\":r=\"mul\";break;case\"/\":r=\"div\";break;case\"%\":r=\"rem\";break;case\"==\":r=\"eq\";break;case\">\":r=\"gt\";break;case\"<\":r=\"lt\";break;case\">=\":r=\"ge\";break;case\"<=\":r=\"le\";break;case\"!=\":r=\"ne\";break;case\"and\":r=\"and\";break;case\"or\":r=\"or\";break;case\"xor\":r=\"xor\";break;case\"not\":r=\"not\";break;case\"I32\":r=\"toi32\";break;case\"U32\":r=\"tou32\";break;case\"I64\":r=\"toi64\";break;case\"U64\":r=\"tou64\";break;case\"FP64\":r=\"tofp64\";break;case\"FP32\":r=\"tofp32\";break}return r};var $r=Object.freeze({type:\"native\",body:Object.freeze([160]),lengths:Object.freeze({inputs:2,outputs:1})}),Jr=Object.freeze({type:\"native\",body:Object.freeze([163]),lengths:Object.freeze({inputs:2,outputs:1})}),Qr=Object.freeze({type:\"native\",body:Object.freeze([162]),lengths:Object.freeze({inputs:2,outputs:1})}),ei=Object.freeze({type:\"native\",body:Object.freeze([68,0,0,0,0,0,0,240,191,162]),lengths:Object.freeze({inputs:1,outputs:1})}),ti=Object.freeze({type:\"native\",body:Object.freeze([161]),lengths:Object.freeze({inputs:2,outputs:1})}),si=Object.freeze({type:\"native\",body:Object.freeze([124]),lengths:Object.freeze({inputs:2,outputs:1})}),ni=Object.freeze({type:\"native\",body:Object.freeze([128]),lengths:Object.freeze({inputs:2,outputs:1})}),oi=Object.freeze({type:\"native\",body:Object.freeze([126]),lengths:Object.freeze({inputs:2,outputs:1})}),ci=Object.freeze({type:\"native\",body:Object.freeze([66,255,255,255,255,255,255,255,255,126]),lengths:Object.freeze({inputs:1,outputs:1})}),ai=Object.freeze({type:\"native\",body:Object.freeze([125]),lengths:Object.freeze({inputs:2,outputs:1})}),ri=Object.freeze({type:\"native\",body:Object.freeze([124]),lengths:Object.freeze({inputs:2,outputs:1})}),ii=Object.freeze({type:\"native\",body:Object.freeze([127]),lengths:Object.freeze({inputs:2,outputs:1})}),pi=Object.freeze({type:\"native\",body:Object.freeze([126]),lengths:Object.freeze({inputs:2,outputs:1})}),xu=Object.freeze({type:\"native\",body:Object.freeze([66,255,255,255,255,255,255,255,255,126]),lengths:Object.freeze({inputs:2,outputs:1})}),li=Object.freeze({type:\"native\",body:Object.freeze([125]),lengths:Object.freeze({inputs:2,outputs:1})}),fo=Object.freeze({type:\"native\",body:Object.freeze([146]),lengths:Object.freeze({inputs:2,outputs:1})}),ho=Object.freeze({type:\"native\",body:Object.freeze([149]),lengths:Object.freeze({inputs:2,outputs:1})}),Eo=Object.freeze({type:\"native\",body:Object.freeze([148]),lengths:Object.freeze({inputs:2,outputs:1})}),ui=Object.freeze({type:\"native\",body:Object.freeze([67,0,0,128,191,148]),lengths:Object.freeze({inputs:2,outputs:1})}),_o=Object.freeze({type:\"native\",body:Object.freeze([140]),lengths:Object.freeze({inputs:2,outputs:1})}),pn=Object.freeze({type:\"native\",body:Object.freeze([106]),lengths:Object.freeze({inputs:2,outputs:1})}),ln=Object.freeze({type:\"native\",body:Object.freeze([110]),lengths:Object.freeze({inputs:2,outputs:1})}),un=Object.freeze({type:\"native\",body:Object.freeze([108]),lengths:Object.freeze({inputs:2,outputs:1})}),fn=Object.freeze({type:\"native\",body:Object.freeze([107]),lengths:Object.freeze({inputs:2,outputs:1})}),hn=Object.freeze({type:\"native\",body:Object.freeze([106]),lengths:Object.freeze({inputs:2,outputs:1})}),En=Object.freeze({type:\"native\",body:Object.freeze([109]),lengths:Object.freeze({inputs:2,outputs:1})}),_n=Object.freeze({type:\"native\",body:Object.freeze([108]),lengths:Object.freeze({inputs:2,outputs:1})}),On=Object.freeze({type:\"native\",body:Object.freeze([65,1,0,0,0,108]),lengths:Object.freeze({inputs:1,outputs:1})}),bn=Object.freeze({type:\"native\",body:Object.freeze([107]),lengths:Object.freeze({inputs:2,outputs:1})}),fi=Object.freeze({type:\"native\",body:Object.freeze([130]),lengths:Object.freeze({inputs:2,outputs:1})}),hi=Object.freeze({type:\"native\",body:Object.freeze([129]),lengths:Object.freeze({inputs:2,outputs:1})}),dn=Object.freeze({type:\"native\",body:Object.freeze([112]),lengths:Object.freeze({inputs:2,outputs:1})}),mn=Object.freeze({type:\"native\",body:Object.freeze([111]),lengths:Object.freeze({inputs:2,outputs:1})}),Ei=Object.freeze({type:\"native\",body:Object.freeze([86]),lengths:Object.freeze({inputs:2,outputs:1})}),_i=Object.freeze({type:\"native\",body:Object.freeze([85]),lengths:Object.freeze({inputs:2,outputs:1})}),Oi=Object.freeze({type:\"native\",body:Object.freeze([100]),lengths:Object.freeze({inputs:2,outputs:1})}),js=Object.freeze({type:\"native\",body:Object.freeze([75]),lengths:Object.freeze({inputs:2,outputs:1})}),Tn=Object.freeze({type:\"native\",body:Object.freeze([74]),lengths:Object.freeze({inputs:2,outputs:1})}),bi=Object.freeze({type:\"native\",body:Object.freeze([94]),lengths:Object.freeze({inputs:2,outputs:1})}),di=Object.freeze({type:\"native\",body:Object.freeze([84]),lengths:Object.freeze({inputs:2,outputs:1})}),mi=Object.freeze({type:\"native\",body:Object.freeze([83]),lengths:Object.freeze({inputs:2,outputs:1})}),Ti=Object.freeze({type:\"native\",body:Object.freeze([99]),lengths:Object.freeze({inputs:2,outputs:1})}),Cs=Object.freeze({type:\"native\",body:Object.freeze([73]),lengths:Object.freeze({inputs:2,outputs:1})}),gn=Object.freeze({type:\"native\",body:Object.freeze([72]),lengths:Object.freeze({inputs:2,outputs:1})}),gi=Object.freeze({type:\"native\",body:Object.freeze([93]),lengths:Object.freeze({inputs:2,outputs:1})}),yi=Object.freeze({type:\"native\",body:Object.freeze([87]),lengths:Object.freeze({inputs:2,outputs:1})}),xi=Object.freeze({type:\"native\",body:Object.freeze([88]),lengths:Object.freeze({inputs:2,outputs:1})}),Ii=Object.freeze({type:\"native\",body:Object.freeze([101]),lengths:Object.freeze({inputs:2,outputs:1})}),yn=Object.freeze({type:\"native\",body:Object.freeze([76]),lengths:Object.freeze({inputs:2,outputs:1})}),Fs=Object.freeze({type:\"native\",body:Object.freeze([77]),lengths:Object.freeze({inputs:2,outputs:1})}),Ai=Object.freeze({type:\"native\",body:Object.freeze([95]),lengths:Object.freeze({inputs:2,outputs:1})}),Ni=Object.freeze({type:\"native\",body:Object.freeze([89]),lengths:Object.freeze({inputs:2,outputs:1})}),Ri=Object.freeze({type:\"native\",body:Object.freeze([90]),lengths:Object.freeze({inputs:2,outputs:1})}),Si=Object.freeze({type:\"native\",body:Object.freeze([102]),lengths:Object.freeze({inputs:2,outputs:1})}),xn=Object.freeze({type:\"native\",body:Object.freeze([78]),lengths:Object.freeze({inputs:2,outputs:1})}),Ds=Object.freeze({type:\"native\",body:Object.freeze([79]),lengths:Object.freeze({inputs:2,outputs:1})}),Pi=Object.freeze({type:\"native\",body:Object.freeze([96]),lengths:Object.freeze({inputs:2,outputs:1})}),zi=Object.freeze({type:\"native\",body:Object.freeze([81]),lengths:Object.freeze({inputs:2,outputs:1})}),ji=Object.freeze({type:\"native\",body:Object.freeze([81]),lengths:Object.freeze({inputs:2,outputs:1})}),Ci=Object.freeze({type:\"native\",body:Object.freeze([97]),lengths:Object.freeze({inputs:2,outputs:1})}),In=Object.freeze({type:\"native\",body:Object.freeze([70]),lengths:Object.freeze({inputs:2,outputs:1})}),Es=Object.freeze({type:\"native\",body:Object.freeze([70]),lengths:Object.freeze({inputs:2,outputs:1})}),Fi=Object.freeze({type:\"native\",body:Object.freeze([91]),lengths:Object.freeze({inputs:2,outputs:1})}),Di=Object.freeze({type:\"native\",body:Object.freeze([82]),lengths:Object.freeze({inputs:2,outputs:1})}),Ui=Object.freeze({type:\"native\",body:Object.freeze([82]),lengths:Object.freeze({inputs:2,outputs:1})}),ki=Object.freeze({type:\"native\",body:Object.freeze([98]),lengths:Object.freeze({inputs:2,outputs:1})}),_s=Object.freeze({type:\"native\",body:Object.freeze([71]),lengths:Object.freeze({inputs:2,outputs:1})}),An=Object.freeze({type:\"native\",body:Object.freeze([71]),lengths:Object.freeze({inputs:2,outputs:1})}),Li=Object.freeze({type:\"native\",body:Object.freeze([92]),lengths:Object.freeze({inputs:2,outputs:1})}),Yi=Object.freeze({type:\"native\",body:Object.freeze([113]),lengths:Object.freeze({inputs:2,outputs:1})}),wi=Object.freeze({type:\"native\",body:Object.freeze([114]),lengths:Object.freeze({inputs:2,outputs:1})}),Vi=Object.freeze({type:\"native\",body:Object.freeze([115]),lengths:Object.freeze({inputs:2,outputs:1})}),vi=Object.freeze({type:\"native\",body:Object.freeze([69]),lengths:Object.freeze({inputs:1,outputs:1})}),Oo=Object.freeze({type:\"native\",body:Object.freeze([167]),lengths:Object.freeze({inputs:1,outputs:1})}),bo=Object.freeze({type:\"native\",body:Object.freeze([167]),lengths:Object.freeze({inputs:1,outputs:1})}),Mi=Object.freeze({type:\"native\",body:Object.freeze([170]),lengths:Object.freeze({inputs:1,outputs:1})}),Bi=Object.freeze({type:\"native\",body:Object.freeze([171]),lengths:Object.freeze({inputs:1,outputs:1})}),Ki=Object.freeze({type:\"native\",body:Object.freeze([168]),lengths:Object.freeze({inputs:1,outputs:1})}),Gi=Object.freeze({type:\"native\",body:Object.freeze([169]),lengths:Object.freeze({inputs:1,outputs:1})}),mo=Object.freeze({type:\"native\",body:Object.freeze([]),lengths:Object.freeze({inputs:1,outputs:1})}),Us=Object.freeze({type:\"native\",body:Object.freeze([193]),lengths:Object.freeze({inputs:1,outputs:1})}),ks=Object.freeze({type:\"native\",body:Object.freeze([192]),lengths:Object.freeze({inputs:1,outputs:1})}),Hi=Object.freeze({type:\"native\",body:Object.freeze([]),lengths:Object.freeze({inputs:1,outputs:1})}),Zi=Object.freeze({type:\"native\",body:Object.freeze([]),lengths:Object.freeze({inputs:1,outputs:1})}),Xi=Object.freeze({type:\"native\",body:Object.freeze([176]),lengths:Object.freeze({inputs:1,outputs:1})}),Wi=Object.freeze({type:\"native\",body:Object.freeze([177]),lengths:Object.freeze({inputs:1,outputs:1})}),qi=Object.freeze({type:\"native\",body:Object.freeze([175]),lengths:Object.freeze({inputs:1,outputs:1})}),$i=Object.freeze({type:\"native\",body:Object.freeze([174]),lengths:Object.freeze({inputs:1,outputs:1})}),Ji=Object.freeze({type:\"native\",body:Object.freeze([172]),lengths:Object.freeze({inputs:1,outputs:1})}),Qi=Object.freeze({type:\"native\",body:Object.freeze([196]),lengths:Object.freeze({inputs:1,outputs:1})}),ep=Object.freeze({type:\"native\",body:Object.freeze([173]),lengths:Object.freeze({inputs:1,outputs:1})}),tp=Object.freeze({type:\"native\",body:Object.freeze([196]),lengths:Object.freeze({inputs:1,outputs:1})}),To=Object.freeze({type:\"native\",body:Object.freeze([195]),lengths:Object.freeze({inputs:1,outputs:1})}),go=Object.freeze({type:\"native\",body:Object.freeze([195]),lengths:Object.freeze({inputs:1,outputs:1})}),yo=Object.freeze({type:\"native\",body:Object.freeze([194]),lengths:Object.freeze({inputs:1,outputs:1})}),xo=Object.freeze({type:\"native\",body:Object.freeze([194]),lengths:Object.freeze({inputs:1,outputs:1})}),sp=Object.freeze({type:\"native\",body:Object.freeze([185]),lengths:Object.freeze({inputs:1,outputs:1})}),np=Object.freeze({type:\"native\",body:Object.freeze([186]),lengths:Object.freeze({inputs:1,outputs:1})}),Nn=Object.freeze({type:\"native\",body:Object.freeze([183]),lengths:Object.freeze({inputs:1,outputs:1})}),Rn=Object.freeze({type:\"native\",body:Object.freeze([184]),lengths:Object.freeze({inputs:1,outputs:1})}),op=Object.freeze({type:\"native\",body:Object.freeze([187]),lengths:Object.freeze({inputs:1,outputs:1})}),cp=Object.freeze({type:\"native\",body:Object.freeze([180]),lengths:Object.freeze({inputs:1,outputs:1})}),ap=Object.freeze({type:\"native\",body:Object.freeze([181]),lengths:Object.freeze({inputs:1,outputs:1})}),Sn=Object.freeze({type:\"native\",body:Object.freeze([178]),lengths:Object.freeze({inputs:1,outputs:1})}),Pn=Object.freeze({type:\"native\",body:Object.freeze([179]),lengths:Object.freeze({inputs:1,outputs:1})}),rp=Object.freeze({type:\"native\",body:Object.freeze([182]),lengths:Object.freeze({inputs:1,outputs:1})}),Os=Object.freeze(Object.assign({\"Flogram./\":ho,\"Flogram.*\":Eo,\"Flogram.+\":fo,\"Flogram.-\":_o},{\"Flogram.fp64.div\":Jr,\"Flogram.fp64.mul\":Qr,\"Flogram.fp64.add\":$r,\"Flogram.fp64.sub\":ti,\"Flogram.fp64.neg\":ei,\"Flogram.fp64.gt\":Oi,\"Flogram.fp64.lt\":Ti,\"Flogram.fp64.le\":Ii,\"Flogram.fp64.ge\":Si,\"Flogram.fp64.ne\":ki,\"Flogram.fp64.eq\":Ci,\"Flogram.fp64.toi32\":Mi,\"Flogram.fp64.tou32\":Bi,\"Flogram.fp64.tou64\":Wi,\"Flogram.fp64.toi64\":Xi,\"Flogram.fp64.tofp32\":rp},{\"Flogram.u64.add\":si,\"Flogram.u64.sub\":ai,\"Flogram.u64.mul\":oi,\"Flogram.u64.div\":ni,\"Flogram.u64.rem\":fi,\"Flogram.u64.gt\":Ei,\"Flogram.u64.lt\":di,\"Flogram.u64.le\":xi,\"Flogram.u64.ge\":Ri,\"Flogram.u64.ne\":Ui,\"Flogram.u64.eq\":ji,\"Flogram.u64.toi32\":bo,\"Flogram.u64.tou32\":bo,\"Flogram.u64.toi64\":Hi,\"Flogram.u64.tofp32\":ap,\"Flogram.u64.tofp64\":np},{\"Flogram.i64.add\":ri,\"Flogram.i64.sub\":li,\"Flogram.i64.neg\":ci,\"Flogram.i64.mul\":pi,\"Flogram.i64.div\":ii,\"Flogram.i64.rem\":hi,\"Flogram.i64.gt\":_i,\"Flogram.i64.lt\":mi,\"Flogram.i64.le\":yi,\"Flogram.i64.ge\":Ni,\"Flogram.i64.ne\":Di,\"Flogram.i64.eq\":zi,\"Flogram.i64.toi32\":Oo,\"Flogram.i64.tou32\":Oo,\"Flogram.i64.tou64\":Zi,\"Flogram.i64.tofp32\":cp,\"Flogram.i64.tofp64\":sp},{\"Flogram.fp32.div\":ho,\"Flogram.fp32.mul\":Eo,\"Flogram.fp32.add\":fo,\"Flogram.fp32.sub\":_o,\"Flogram.fp32.neg\":ui,\"Flogram.fp32.gt\":bi,\"Flogram.fp32.lt\":gi,\"Flogram.fp32.le\":Ai,\"Flogram.fp32.ge\":Pi,\"Flogram.fp32.ne\":Li,\"Flogram.fp32.eq\":Fi,\"Flogram.fp32.toi32\":Ki,\"Flogram.fp32.tou32\":Gi,\"Flogram.fp32.tou64\":qi,\"Flogram.fp32.toi64\":$i,\"Flogram.fp32.tofp64\":op},{\"Flogram.u32.add\":pn,\"Flogram.u32.sub\":fn,\"Flogram.u32.mul\":un,\"Flogram.u32.div\":ln,\"Flogram.u32.rem\":dn,\"Flogram.u32.gt\":js,\"Flogram.u32.lt\":Cs,\"Flogram.u32.le\":Fs,\"Flogram.u32.ge\":Ds,\"Flogram.u32.ne\":An,\"Flogram.u32.eq\":Es,\"Flogram.u32.toi32\":mo,\"Flogram.u32.toi64\":ep,\"Flogram.u32.tou64\":tp,\"Flogram.u32.tofp32\":Pn,\"Flogram.u32.tofp64\":Rn},{\"Flogram.i32.add\":hn,\"Flogram.i32.sub\":bn,\"Flogram.i32.neg\":On,\"Flogram.i32.mul\":_n,\"Flogram.i32.div\":En,\"Flogram.i32.rem\":mn,\"Flogram.i32.gt\":Tn,\"Flogram.i32.lt\":gn,\"Flogram.i32.le\":yn,\"Flogram.i32.ge\":xn,\"Flogram.i32.ne\":_s,\"Flogram.i32.eq\":In,\"Flogram.i32.toi64\":Ji,\"Flogram.i32.tou64\":Qi,\"Flogram.i32.tou32\":mo,\"Flogram.i32.tofp32\":Sn,\"Flogram.i32.tofp64\":Nn},{\"Flogram.i16.add\":hn,\"Flogram.i16.sub\":bn,\"Flogram.i16.neg\":On,\"Flogram.i16.mul\":_n,\"Flogram.i16.div\":En,\"Flogram.i16.rem\":mn,\"Flogram.i16.gt\":Tn,\"Flogram.i16.lt\":gn,\"Flogram.i16.le\":yn,\"Flogram.i16.ge\":xn,\"Flogram.i16.ne\":_s,\"Flogram.i16.eq\":In,\"Flogram.i16.toi32\":Us,\"Flogram.i16.tou32\":Us,\"Flogram.i16.toi64\":To,\"Flogram.i16.tou64\":go,\"Flogram.i16.tofp32\":Sn,\"Flogram.i16.tofp64\":Nn},{\"Flogram.u16.add\":pn,\"Flogram.u16.sub\":fn,\"Flogram.u16.mul\":un,\"Flogram.u16.div\":ln,\"Flogram.u16.rem\":dn,\"Flogram.u16.gt\":js,\"Flogram.u16.lt\":Cs,\"Flogram.u16.le\":Fs,\"Flogram.u16.ge\":Ds,\"Flogram.u16.ne\":An,\"Flogram.u16.eq\":Es,\"Flogram.u16.toi32\":Us,\"Flogram.u16.tou32\":Us,\"Flogram.u16.toi64\":To,\"Flogram.u16.tou64\":go,\"Flogram.u16.tofp32\":Pn,\"Flogram.u16.tofp64\":Rn},{\"Flogram.i8.add\":hn,\"Flogram.i8.sub\":bn,\"Flogram.i16.neg\":On,\"Flogram.i8.mul\":_n,\"Flogram.i8.div\":En,\"Flogram.i8.rem\":mn,\"Flogram.i8.gt\":Tn,\"Flogram.i8.lt\":gn,\"Flogram.i8.le\":yn,\"Flogram.i8.ge\":xn,\"Flogram.i8.ne\":_s,\"Flogram.i8.eq\":In,\"Flogram.i8.toi32\":ks,\"Flogram.i8.tou32\":ks,\"Flogram.i8.toi64\":yo,\"Flogram.i8.tou64\":xo,\"Flogram.i8.tofp32\":Sn,\"Flogram.i8.tofp64\":Nn},{\"Flogram.u8.add\":pn,\"Flogram.u8.sub\":fn,\"Flogram.u8.mul\":un,\"Flogram.u8.div\":ln,\"Flogram.u8.rem\":dn,\"Flogram.u8.gt\":js,\"Flogram.u8.lt\":Cs,\"Flogram.u8.le\":Fs,\"Flogram.u8.ge\":Ds,\"Flogram.u8.ne\":An,\"Flogram.u8.eq\":Es,\"Flogram.u8.toi32\":ks,\"Flogram.u8.tou32\":ks,\"Flogram.u8.toi64\":yo,\"Flogram.u8.tou64\":xo,\"Flogram.u8.tofp32\":Pn,\"Flogram.u8.tofp64\":Rn},{\"Flogram.bool.and\":Yi,\"Flogram.bool.or\":wi,\"Flogram.bool.xor\":Vi,\"Flogram.bool.not\":vi,\"Flogram.bool.eq\":Es,\"Flogram.bool.ne\":_s},{\"Flogram.char.gt\":js,\"Flogram.char.lt\":Cs,\"Flogram.char.le\":Fs,\"Flogram.char.ge\":Ds,\"Flogram.char.eq\":Es,\"Flogram.char.ne\":_s}));var{LEB128_ENCODE:ht}=Jt,Nu=new Int8Array(1),Ru=new Uint8Array(1),ip=c=>{let s=[],r=!0;for(;r;){let h=c&127;c>>=7,c===0&&!(h&64)||c===-1&&h&64?r=!1:h|=128,s.push(h)}return new Uint8Array(s)},pp=c=>{let s=[],r=!0;for(;r;){let h=c&127;c>>=7,c===0?r=!1:h|=128,s.push(h)}return new Uint8Array(s)},lp=c=>{let s=[];for(;c>=128;)s.push(c&127|128),c>>>=7;return s.push(c),new Uint8Array(s)},up=128,fp=127,Io=64,hp=c=>{c=c<<16>>16;let s=[];for(;;){let r=c&fp;c=c>>7;let h=c===0,D=(r&Io)===0,ce=h&&D,e=c===-1,pe=(r&Io)!==0;if(ce||e&&pe){s.push(r);break}r=r|up,s.push(r)}return s};var Ep=c=>{let s=new Float32Array(1);return s[0]=parseFloat(c),new Uint8Array(s.buffer)},Ao=c=>{let s=[],r=!0;for(;r;){let h=c&127;c>>=7,c===0&&!(h&64)||c===-1&&h&64?r=!1:h|=128,s.push(h)}return new Uint8Array(s)},_p=c=>ht(c),Op=c=>{let s=new Float64Array(1);return s[0]=c,new Uint8Array(s.buffer)},bp=c=>{let s=[];for(;c>=128;)s.push(c&127|128),c>>>=7;return s.push(c),new Uint8Array(s)},dp=c=>{let s=[],r=!0;for(;r;){let h=c&127;c>>=7,c===0&&!(h&64)||c===-1&&h&64?r=!1:h|=128,s.push(h)}return new Uint8Array(s)},mp=c=>{let s=new Uint8Array(1);return s[0]=c===\"TRUE\"?1:c===\"FALSE\"?0:c,s},Tp=c=>{let s=c.charCodeAt(0);return ht(s)},No=()=>{let c=new ArrayBuffer(4);return new Float32Array(c)[0]=-0,[...new Uint8Array(c)]},gp=Object.freeze({type:\"native\",identity:127,opcode:65,encode:Ao,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})}),yp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-1),encode:Tp,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})}),xp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-1),encode:mp,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4}),values:{TRUE:1,FALSE:0}})}),Ip=Object.freeze({type:\"native\",identity:124,opcode:68,none:No(),encode:Op,link:Object.freeze({load:Object.freeze({opcode:43,align:2,offset:0,size:8}),store:Object.freeze({opcode:57,align:2,offset:0,size:8})})}),Ap=Object.freeze({type:\"native\",identity:126,opcode:66,none:ht(-1),encode:bp,link:Object.freeze({load:Object.freeze({opcode:53,align:2,offset:0,size:8}),store:Object.freeze({opcode:55,align:2,offset:0,size:8})})}),Np=Object.freeze({type:\"native\",identity:126,opcode:66,none:ht(-9223372036854776e3),encode:dp,link:Object.freeze({load:Object.freeze({opcode:52,align:2,offset:0,size:8}),store:Object.freeze({opcode:55,align:2,offset:0,size:8})})}),Rp=Object.freeze({type:\"native\",identity:125,opcode:67,none:No(),encode:Ep,link:Object.freeze({load:Object.freeze({opcode:42,align:2,offset:0,size:4}),store:Object.freeze({opcode:56,align:2,offset:0,size:4})})}),Sp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-1),encode:_p,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})}),Pp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-2147483648),encode:Ao,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})}),zp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-32768),encode:hp,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})}),jp=Object.freeze({type:\"native\",identity:127,opcode:65,encode:lp,none:ht(-1),link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})}),Cp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-128),encode:ip,decode:c=>new Int8Array([c])[0],link:Object.freeze({load:Object.freeze({opcode:40,align:0,offset:0,size:4}),store:Object.freeze({opcode:54,align:0,offset:0,size:4})})}),Fp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-1),encode:pp,link:Object.freeze({load:Object.freeze({opcode:40,align:0,offset:0,size:4}),store:Object.freeze({opcode:54,align:0,offset:0,size:4})})}),kt=Object.freeze({\"Flogram.String\":gp,\"Flogram.Char\":yp,\"Flogram.Bool\":xp,\"Flogram.FP64\":Ip,\"Flogram.U64\":Ap,\"Flogram.I64\":Np,\"Flogram.FP32\":Rp,\"Flogram.U32\":Sp,\"Flogram.I32\":Pp,\"Flogram.I16\":zp,\"Flogram.U16\":jp,\"Flogram.I8\":Cp,\"Flogram.U8\":Fp});var{TYPES_ASSIGN:Ro,TYPES_DRAW:Dp,TYPES_NOW:So,TYPES_ARRAY:q,TYPES_ARRAY_ASSIGNMENT:Up,TYPES_BRANCH_MATCH:Po,TYPES_BRANCH_DEFAULT:zo,TYPES_CONDITION:Ls,TYPES_LOOP:bs,TYPES_WHILE:kp,TYPES_FOREACH:Lp,TYPES_DATA:St,TYPES_COMPARE:jo,TYPES_ENUMERATION:at,TYPES_EXPRESSION:Lt,TYPES_LINK:Bt,TYPES_LOCAL:Je,TYPES_CONCAT:Co,TYPES_OBJECT:de,TYPES_RETURN:Ys,TYPES_SELECT:Pt,TYPES_MEMBER:ds,TYPES_STORE:Fo,TYPES_BREAK:Yp,TYPES_LITERAL:ve,TYPES_ARRAY_ACCESS:ws,TYPES_LINK_TO:zn,TYPES_VALUE_AT:Vs,TYPES_DROP:Do,TYPES_MAYBE:Qt,TYPES_MOVE:Uo,TYPES_NATIVE:He,TYPES_STRING:re,TYPES_FREE:wp,TYPES_FOR:Vp,TYPES_UP_TO:ko,TYPES_DOWN_TO:vp,TYPES_ALMOST_UP_TO:Lo,TYPES_ALMOST_DOWN_TO:Mp,TYPES_BRANCH:Yo,TYPES_CONTINUE:wo,TYPES_DEFAULT_BLOCK:jn,TYPES_BLOCK_END:zt,TYPES_STATEMENT:Vo,TYPES_DESTRUCTOR:vo,TYPES_SIZE:Mo,TYPES_WHILE_CONDITION:Cn,TYPES_FOREACH_CONDITION:Bo,TYPES_FOREACH_END:Ko,TYPES_FP32:Go,TYPES_I32:mt,TYPES_I64:Bp,TYPES_FP64:Kp,TYPES_CHAR:Fn,TYPES_BOOL:Dn,TYPES_BLOCK_BEGIN:Ho,TYPES_WHEN:Gp,TYPES_FUNCTION_CALL:Zo,TYPES_PROCEDURE:Hp,TYPES_CONSTRUCTOR:Zp,TYPES_UNREACHABLE:Xp}=Ns,{K_ASSIGNMENT:es,K_FLOGRAM:Qe}=Rt.Keywords,{ENUM_MEMORY_SIZE:Lu,ENUM_STACK_SIZE:Un,ARRAY_MEMORY_SIZE:ms,ARRAY_STACK_SIZE:Et,ARRAY_DEFAULT_CAPACITY:Wp,STRING_MEMORY_SIZE:kn,STRING_STACK_SIZE:Kt,OBJECT_MEMORY_SIZE:vs,OBJECT_STACK_SIZE:ts,NATIVE_MEMORY_SIZE:At,NATIVE_STACK_SIZE:Ts,NATIVE_SIZE:Yu,STEP:Tt,DOUBLE_STEP:_t,TRIPPLE_STEP:wu}=Rt.Sizes,jt=2,Gt=3,ss=12,ns=13,et=16,_e=26,i=65,Xo=71,qp=113,$p=114,gs=70,Wo=76,tt=32,Ct=33,F=35,le=36,Jp=15,Ht=11,qo=4,Qp=5,Xe=64,pt=127,Me=108,el=109,H=106,tl=107,Be=54,st=40,sl=0,ue=0,fe=2,Yt=4,nl=\"alloc\",Ln=\"dealloc\",$o=\"merge\",Jo=\"save\",ol=\"undo\",cl=\"undoPenultimate\",al=\"draw\",rl=\"drawI64\",il=\"drawFP32\",pl=\"drawFP64\",ll=\"now\",g=0,Le=1,Qo=\"Flogram.draw\",ul=\"Flogram.now\",ys=new Set([\"==\",\"!=\",\">\",\">=\",\"<\",\"<=\",\"or\",\"and\",\"or\",\"not\"]),fl=new Set([\"I32\",\"U32\",\"Bool\",\"FP32\",\"I64\",\"U64\",\"FP64\"]),{LEB128_ENCODE:l}=Jt,{INT_ARRAY_START:hl,FLOAT_ARRAY_START:El,STRING_START:ec,CHAR_START:_l,END_OF_LINE:Ol,NAT_ON_HORIZON:bl,BIG_NAT_ON_HORIZON:dl,FLOAT_ON_HORIZON:ml,BIG_FLOAT_ON_HORIZON:Tl}=Rt.DrawStates,Yn,N=(c,s)=>`${s}.${c}`,tc=(c,s,r)=>{let h=r.get(c);if(h&&h.length===1)return h[0];if(h&&h.length>1)return h[0];throw console.log(c),console.log(s),Error(\"No Callees were found\")};function Ms(c,s,r,h,D){c?.description?.inputs.length>0?Yn=c.description.inputs[0].data.name:c?.description?.outputs.length>0&&(Yn=c.description.outputs[0].data.name);let ce=t=>{Ie(t.collection).length},e=[],pe=new Set,me=!1,Oe=t=>{pe.add(t)},$=()=>{e.push(et,nl),Oe(\"alloc\")},Re=t=>{t===Go?(e.push(et,il),Oe(\"drawFP32\")):t===Kp?(e.push(et,pl),Oe(\"drawFP64\")):t?.includes(\"64\")?(e.push(et,rl),Oe(\"drawI64\")):(e.push(et,al),Oe(\"draw\"))},lt=()=>{Oe(\"now\"),e.push(et,ll)},ut=(t=g)=>{e.push(i,0),$(),e.push(le,t)},Ye=()=>{e.push(F,g),e.push(F,Le),e.push(et,Jo),e.push(F,Le),e.push(F,g),e.push(et,Jo),Oe(\"save\")},nt=()=>{e.push(et,ol),e.push(le,Le),e.push(le,g),Oe(\"undo\")},dt=()=>{e.push(et,cl),e.push(le,Le),e.push(le,g),Oe(\"undoPenultimate\")},ft=()=>{e.push(et,$o),Oe(\"merge\")},yt=(t,n=!1)=>{let o=t.path===Qe&&t.name!==re&&t.layout!==q&&t.type!==q;return n?o&&t.mutable:o},{description:Zs}=c,{inputs:Xs,locals:Vt,statements:xs}=Zs,Ce=new Map,Fe=new Map,Dt=new Map;{let t=0,n=o=>{for(let p of o){let{name:_,data:b}=p;switch(Ce.set(_,t),Fe.set(_,p),b.type){case Qt:case St:{let{name:R,path:j}=b,U=N(R,j);switch(R){case re:{t=t+Kt|0;break}default:{let x=s.get(U);if(!x)throw new Error(\"Key not found: \",U);switch(x.type){case He:{t=t+Ts|0;break}case at:{t=t+Un|0;break}case de:{let{length:ee}=x;t=t+ts|0;break}}break}}break}case q:{t=t+Et|0;break}case Bt:{let R=s.get(N(b.name,b.path));b.name===re?t=t+Kt|0:b.name===q||b.layout===q?t=t+Et|0:R.type===de?t=t+ts|0:t=t+Ts|0;break}}}};n(Xs),n(Vt)}let ge=0,Ke=[];for(let t of Vt){let{data:n}=t,o=()=>{Ke.push(1,pt),ge=ge+1|0},p=()=>{Ke.push(1,pt),ge=ge+1|0,Ke.push(1,pt),ge=ge+1|0,Ke.push(1,pt),ge=ge+1|0},_=()=>{Ke.push(1,pt),ge=ge+1|0,Ke.push(1,pt),ge=ge+1|0},b=()=>{Ke.push(1,pt),ge=ge+1|0,Ke.push(1,pt),ge=ge+1|0},R=U=>{let{identity:x}=U;Ke.push(1,x),ge=ge+1|0},j=()=>{Ke.push(1,pt),ge=ge+1|0,Ke.push(1,pt),ge=ge+1|0,Ke.push(1,pt),ge=ge+1|0};if(yt(n,!0)){o();continue}switch(n.type){case q:{p();break}case Bt:{let U=s.get(N(n.name,n.path));n.name===q?p():n.name===re?_():U&&U.type===de?b():o();break}case Qt:case St:{let{name:U,path:x}=n;switch(U){case re:{p();break}default:{let ee=N(U,x),ie=s.get(ee);switch(ie.type){case He:{R(ie);break}case at:{j();break}case de:{b();break}}break}}break}}}((t,n)=>{for(let[o,p]of t)if(p.type==n){Ke.push(1,pt),ge=ge+1|0;break}})(s,de);let Ws=l(ge);e.push(...Ws,...Ke);let qe=t=>{if(typeof t!==de)return t;switch(t.type){case Je:return t.name;case zn:return qe(t.value);case Vs:return qe(t.link);case ds:return`${t.type}_${t.trail.join(\"_\")}`;case ws:return t.array.name;case Pt:return qe(t.value);case Fo:return qe(t.link)}return null},Ie=t=>{if(!t)return null;switch(t.type){case ve:return t;case Je:return Fe.get(t.name)?.data;case Vs:return Ie(t.link);case zn:return Ie(t.value);case Uo:return Ie(t.value);case Qt:return t;case Mo:{if(t.value.type===Je)return{name:mt,path:Qe,type:St};break}case ws:{let n=Ie(t.array);if(n.name===re)return{name:n.type===q?re:Fn,path:Qe,type:St};let o=Fe.get(qe(t));return o.details||o.data.details||{...o.data,type:o.data.name===q?q:St}}case Pt:{let{value:n,trail:o}=t,{name:p}=n,_=Fe.get(p||qe(n)),{data:b}=_,R=N(b.name,b.path),j=s.get(R);if(j.type===at){let{labels:ie}=j,je=ie.find(T=>T.props.includes(o[0]));if(!je){console.error(\"Get Type: Unknown enum label value.....\");return}let k=s.get(N(je.name,R)).members.get(o[0]);if(o.length>1)for(;o.length>0;){let T=o.shift();k=s.get(N(k.name,k.path)).members.get(T)}return k}let{indivisibles:U}=j,x=JSON.parse(JSON.stringify(o)),ee=j;for(;x.length>0;){let ie=x.shift();if(x.length>0){let je=ee.members.get(ie),Ze=N(je.name,je.path);ee=s.get(Ze);continue}ee=ee.members.get(ie)}return ee}case Lt:{let n=h.find(R=>R.name===t.name&&R.path===t.path);if(n)return n.description.outputs[0].data;let o=[...c.description.locals,...c.description.inputs],p=R=>h.find(j=>j.type===Hp&&j.name===R.name)?.description.outputs[0],_=(R,j)=>{let U;for(let x=0;x<R.name.length-1;x++)j=Fe.get(R.name[0]);if(j){let x=N(j.data.name,j.data.path),ee=h.find(ie=>ie.name===R.name[R.name.length-1]&&ie.path===x);if(ee)return ee.description.outputs[0];console.error(\"Unable to find shape: \",j,x)}return U?.description.members?.find(x=>x.name===R.name[R.name.length-1])?.description.outputs[0]},b;if(t.path!==Qe){if(b=p(t),typeof t.name==\"object\"){let R=o.find(U=>U.name===t.name[0]).data;b=_(t,R);let j=t.name.length;t.name[j-1]===Zp&&(b={data:R})}return b&&b.data}else{if(t.name===So)return{type:St,name:Bp,path:Qe};if(ys.has(t.name))return{type:St,name:Dn,path:Qe};{let R=t.inputs.map(U=>Ie(U)),j=h.find(U=>U.description&&Array.isArray(U.description.inputs)?U.description.inputs.length!==R.length||U.name!==t.name||U.path!==t.path?!1:U.description.inputs.every((x,ee)=>x.data.name===R[ee].name):!1);if(j){let{description:U}=j,{outputs:x}=U;return x[0].data}else{console.error(\"Not found:: \",t);return}}}break}}},Wn=t=>{Ie(t)?.mutable&&e.push(st,fe,ue)},I=(t,n=Ys)=>{let o=0,p=[],_=(k,T)=>{let K={type:\"call\",key:k,inputs:T};p.unshift(K)},b=k=>{let T={type:\"value\",value:k};p.unshift(T)},R=k=>{let T={type:ds,member:k};p.unshift(T)},j=(k,T,K,B,G)=>{let Z={key:null,stop:!1},M;if(k&&fs.includes(k.name))if(k.name===re)e.push(i,Math.floor(Math.random()*2)),e.push(i,Math.floor(Math.random()*2)),e.push(Xo),Z.stop=!0;else{let{name:X}=k;M=N(X.toLowerCase()+\".\"+ct(B),K),Yn=X}else if(k){let{name:X,path:Q}=k,Ue=N(X,Q),O=s.get(Ue);if(O.type===at){let{labels:a}=O,z=Ie(T);if(N(z.name,z.path)===Ue){let E=a.find(S=>S.props.includes(T.trail[0])),f=s.get(N(E.name,Ue)).indivisibles.mapTrail.get(T.trail[0]);M=N(f.data.name.toLowerCase()+\".\"+ct(B),K)}else M=N(z.name.toLowerCase()+\".\"+ct(B),K)}else{let{indivisibles:a}=O,{mapTrail:z}=a,E=G.every(f=>{let S=Ie(f),m=N(S.name,S.path);return s.get(m).type===de}),C=Ie(T);if((B==\"==\"||B==\"!=\")&&E){let f=z.size-1;for(let[S,m]of z){p.unshift({type:jo,currentIndex:f,name:B}),M=N(m.data.name.toLowerCase()+\".\"+ct(B),m.data.path);let L=G.map(v=>({type:Pt,value:{type:Je,name:v.name||qe(v)},trail:[m.trail]}));_(M,L);var Ne=L.length-1|0;for(let v=Ne;v>=0;v=v-1|0){let ne=L[v];b(ne)}f--}Z.stop=!0}else G.every(f=>Ie(f).name===re)?Z.stop=!0:M=N(C.name.toLowerCase()+\".\"+ct(B),K)}}return Z.key=M,Z},U=k=>{let{name:T,path:K,inputs:B}=k;if(ys.has(k.name))return Dn;if(fl.has(k.name))return k.name;let G=h.filter(M=>M.name===T&&M.path===K&&M.description.inputs.filter(Ne=>Ne.name.startsWith(\"member_\")?!Ne.data.type===Bt&&!K.includes(\".\"):!0).length===B.length);if(G.length===1)return G[0].description.outputs[0]?.data.name??\"\";if(B.find(M=>M.type==Lt)){let M=B.map(X=>{if(X.type===Je)return Fe.get(X.name);if(X.type===ve)return{data:X};if(X.type===Lt)return{data:{name:U(X)}}}),Ne=h.find(X=>X.description&&Array.isArray(X.description.inputs)?X.description.inputs.length!==M.length?!1:X.description.inputs.every((Q,Ue)=>Q.data.name===M[Ue].data.name):!1);return Ne?ys.has(Ne.name)?Ne.description.inputs[0].data.name:Ne.description.outputs[0].data.name:\"unknown\"}else{let M=B.map(X=>({data:Ie(X)})),Ne=h.find(X=>X.description&&Array.isArray(X.description.inputs)?X.description.inputs.length!==M.length?!1:X.description.inputs.every((Q,Ue)=>Q.data.name===M[Ue].data.name):!1);if(Ne)return ys.has(Ne.name)?Ne.description.inputs[0].data.name:Ne.description.outputs[0].data.name;throw console.log(k),new Error(\"could not find the type for procedure: \",k.name)}},x=k=>{let{inputs:T,name:K,path:B}=k,G=N(K,B),Z=[B],M;if(typeof K===de){let X=K[0];if(M=Fe.get(X),M){Z.push(M.data.name);for(let Ue=1;Ue<=K.length-2;Ue++)X=K[Ue],M=Fe.get(X),M&&Z.push(M.data.name)}let Q=K.length-1|0;G=N(K[Q],Z.join(\".\"))}if(B===\"Flogram\"&&K!==Dp&&K!==So){let X=T.find(a=>a.type===Lt),Q=T.find(a=>a.type===ve),Ue,O;for(let a of T){let z=Ie(a);if(z){Ue=z,O=a;break}}if(Ue){let a=j(Ue,O,B,K,T);if(G=a.key,a.stop)return}else if(Q)G=N(`${Q.name.toLowerCase()}.${ct(K)}`,B);else if(X)G=N(`${U(X).toLowerCase()}.${ct(K)}`,B);else{let a=h.find(E=>E.name===k.name&&E.path===k.path&&E.description.inputs.length===k.inputs.length),z=h.filter(E=>E.name===k.name&&E.path===k.path&&E.description.inputs.length===k.inputs.length);G=N(`${ys.has(a.name)?a.description.inputs[0]?.data.name.toLowerCase():a.description.outputs[0]?.data.name.toLowerCase()}.${ct(a.name)}`,B)}}if(_(G,T),typeof K===de){let X=tc(G,T,r);if(X){let{procedure:Q}=X,{description:Ue}=Q,{self:O}=Ue,a=Fe.get(K[0]),z=N(a.data.name,a.data.path),E=s.get(z);if(E){let C=Ce.get(K[0]),{indivisibles:f,members:S}=E,{mapTrail:m}=f;for(let L=O.length-1|0;L>=0;L--){let v=O[L];if(v.type===ds){let ne=v.trail.join(\".\");if(m.get(ne)){let{data:Pe,address:oe}=m.get(ne),Ve=N(Pe.name,Pe.path),ae={isObject:s.get(Ve).type===de,index:C,address:oe};R(ae)}else throw Error(\"TODO: Using objects of depth greater than one.\")}else b(t)}}}}if(G!==Qo){var Ne=T.length-1|0;for(let X=Ne;X>=0;X=X-1|0){let Q=T[X];b(Q)}}},ee=k=>{let{key:T,inputs:K}=k;if(T===Qo){for(let Z of K){let M=Ie(Z);Z.type===Pt?M?.name===re?(e.push(i,...l(ec)),Re(),I(Z),e.push(le,g),e.push(st,fe,ue),Re(),e.push(F,g),e.push(st,fe,ue),Re()):(I(Z),Re(M?.name)):M?.name===re||Z.type===Co?(e.push(i,...l(ec)),Re(),I(Z),Re(),Re()):M?.type===q||M?.name===q||M?.layout===q?(Rs.includes(M.name)?e.push(i,...l(El)):e.push(i,...l(hl)),Re(),I(Z),e.push(_e),Re(),Re()):M?.name===Fn?(e.push(i,...l(_l)),Re(),I(Z),Re()):s.get(N(M.name,M.path))?.type===at?(I(Z),e.push(_e,_e),Re()):(I(Z),Re(M?.name))}e.push(i,...l(Ol)),Re(),o=o-K.length|0;return}if(T===ul){lt();return}let B=tc(T,K,r);switch(B.type){case He:{let{body:Z}=B;e.push(...Z);break}case\"artificial\":{let{index:Z}=B;e.push(et,Z);break}}let{lengths:G}=B;o=o-G.inputs|0,o=o+G.outputs|0},ie=k=>{let{value:T}=k,K=O=>{let a=0;me=!0;let z=qe(O),E,C;if(O.type===Pt){let{value:f,trail:S}=JSON.parse(JSON.stringify(O)),{name:m}=f,L=Fe.get(m),{data:v}=L,ne=N(v.name,v.path),Pe=s.get(ne),{indivisibles:oe}=Pe,{mapTrail:Ve}=oe,ae=S.join(\".\"),be=JSON.parse(JSON.stringify(S)),Te=Pe;for(;be.length>0;){let xt=be.shift();if(be.length>0){let ot=Te.members.get(xt),$e=N(ot.name,ot.path);Te=s.get($e);continue}Te=Te.members.get(xt)}let ke=N(Te.name,Te.path);E=s.get(ke)}else{let f=Fe.get(z),{data:S}=f,{name:m,path:L,segment:v}=S,ne=N(m,L);E=s.get(ne),C=m===re}if(E){switch(E.type){case He:{ie({value:O});let{link:f}=E,{load:S}=f;C||e.push(S.opcode,S.align,S.offset),a=a+1|0;break}case de:{let f=0,S=ne=>{ie({value:O});let{link:Pe}=ne,{load:oe}=Pe;e.push(oe.opcode,oe.align,oe.offset+f|0),a=a+1|0,f=f+oe.size|0},m=()=>{},{indivisibles:L}=E,{mapTrail:v}=L;for(let ne of v.values()){if(ne.type===Bt){m();continue}let{data:Pe}=ne,{name:oe,path:Ve}=Pe,ae=N(oe,Ve),be=s.get(ae);switch(be.type){case He:{S(be);break}case at:{ie({value:O}),e.push(st,fe,ue+f),a=a+1|0,f=f+Yt|0,ie({value:O}),e.push(i,...l(Tt)),e.push(st,fe,ue+f),e.push(H),a=a+1|0,f=f+Yt|0,ie({value:O}),e.push(i,...l(_t)),e.push(st,fe,ue+f),e.push(H),a=a+1|0,f=f+Yt|0;break}}}break}}return a}},B=(O,a=!0,z=!0)=>{let E=0;me=!0;function C(f){let{literal:S,name:m,path:L,vSize:v}=f,ne=v||S.length;f.quantity.capacity&&!v&&f.quantity.capacity.type===ve&&(ne=parseInt(f.quantity.capacity.literal,10));let Pe=N(m,L),oe=s.get(Pe),Ve=oe.type===de||m===re&&f.layout===q||f.contains===q;if(!f.quantity.capacity)if(f.literal)f.quantity.capacity={type:ve,name:mt,path:Qe,literal:`${Math.max(f.literal?.length||0,Wp)}`};else throw Error(\"Value without length provided for array container.\");if(Ve)I(f.quantity.capacity),m===re&&f.layout===q?e.push(i,...l(kn)):f.contains===q?e.push(i,...l(ms)):oe.type===de&&e.push(i,...l(vs)),e.push(Me),$(),e.push(le,g),Ye();else{Ye(),I(f.quantity.capacity);let ae=N(f.name,f.path),be=s.get(ae),{store:Te}=be.link;e.push(i,...l(Te.size)),e.push(Me),$(),e.push(le,g)}for(let ae=0;ae<ne;ae++){let be=S[ae];if(be)if(be.name===re&&f.layout===q||be.layout===q&&oe.type!==de){let Te=[];if(be.layout===q)e.push(F,g),e.push(F,g),e.push(F,g),e.push(F,g),e.push(i,...l(ae)),e.push(i,...l(ms)),e.push(Me),e.push(H),Te.push(be.literal),C(be),e.push(F,g),e.push(Be,fe,ue),e.push(i,...l(Tt)),e.push(i,...l(ae)),e.push(i,...l(_t)),e.push(Me),e.push(H),e.push(H),I(be.quantity.size),e.push(Be,fe,ue),e.push(i,...l(_t)),e.push(i,...l(ae)),e.push(i,...l(_t)),e.push(Me),e.push(H),e.push(H),I(be.quantity.size),e.push(Be,fe,ue),e.push(le,g);else{let ke=be.size||be.literal.length;for(let ot=0;ot<ke;ot++)Te.push({type:be.type,path:be.path,name:\"I32\",literal:be.literal[ot].charCodeAt().toString()});let xt={type:ve,name:mt,layout:q,path:be.path,literal:Te,quantity:{size:{literal:Te.length.toString(),type:ve,name:mt,path:Qe},capacity:{literal:Te.length.toString(),type:ve,name:mt,path:Qe}}};e.push(F,g),e.push(F,g),e.push(F,g),e.push(i,...l(ae)),e.push(i,...l(vs)),e.push(Me),e.push(H),C(xt),e.push(F,g),e.push(Be,fe,ue),e.push(i,...l(Tt)),e.push(i,...l(ae)),e.push(i,...l(_t)),e.push(Me),e.push(H),e.push(H),e.push(i,...l(ke)),e.push(Be,fe,ue),e.push(le,g)}}else switch(oe.type){case He:{let{link:Te}=oe,{store:ke}=Te;e.push(F,g),e.push(i,...l(At)),e.push(i,...l(ae)),e.push(Me),e.push(H),!be||be.type===ve?e.push(oe.opcode,...oe.encode(be?.literal||0)):I(be),e.push(ke.opcode,ke.align,ke.offset),ft(),E=3;break}case de:{e.push(F,g),e.push(F,g),e.push(i,...l(ae)),e.push(i,...l(8)),e.push(Me),e.push(H),I(be),e.push(le,Le),e.push(Be,fe,ue),e.push(le,g),e.push(F,g),e.push(i,...l(Tt)),e.push(i,...l(ae)),e.push(i,...l(_t)),e.push(Me),e.push(H),e.push(H),e.push(F,Le),e.push(Be,fe,ue);break}}}}return C(O),a&&(e.push(F,g),E=1),z&&(I(O.quantity.size),I(O.quantity.capacity),E=2),E},G=(O,a,z=!0)=>{let E=s.get(a);ut();let C=(m,L,v=null,ne=!1)=>{if(Ye(),dt(),e.push(F,g),e.push(F,g),e.push(F,g),ne&&e.push(F,g),nt(),e.push(i,...l(L)),e.push(H),e.push(F,g),e.push(Be,fe,ue),e.push(i,...l(L)),e.push(i,...l(Tt)),e.push(H),e.push(H),v!=null)Q(v,v+1|0);else if(m)I(ne?m.size:m);else throw new Error(\"Unable to read object length\");if(e.push(Be,fe,ue),ne){if(e.push(i,...l(L)),e.push(i,...l(_t)),e.push(H),e.push(H),v!=null)Q(v+1,v+2|0);else if(m)I(m.capacity);else throw new Error(\"Unable to read object length\");e.push(Be,fe,ue)}e.push(le,g)},f=[];for(let[m,L]of E.members){if(!L)continue;let v=O.find(oe=>oe.name===m)||{name:m,value:L.value},ne=N(L.name,L.path),Pe=s.get(ne);if(L.type===q){e.push(i,...l(ms)),$(),e.push(_e),f.push({data:{keyName:m,keyData:L},literal:v});continue}switch(Pe.type){case He:{let{link:oe}=Pe,{store:Ve}=oe;if(L.type===Bt)Ye(),e.push(i,...l(At)),$(),I(v.value),e.push(Ve.opcode,Ve.align,Ve.offset),nt();else if(L.name===re)e.push(i,...l(_t)),$(),e.push(_e),f.push({data:{keyName:m,keyData:L},literal:v});else{e.push(i,...l(Ve.size)),$();let ae=JSON.parse(JSON.stringify(v.value));ae.literal&&(ae.name!==L.name||ae.path!==L.path)&&(ae={...ae,name:L.name,path:L.path}),I(ae),e.push(Ve.opcode,Ve.align,Ve.offset)}ft();break}case de:{e.push(i,...l(_t)),$(),e.push(_e),f.push({data:{keyName:m,keyData:L},literal:v});break}}}if(f.length>0){let m=f[0],{data:L,literal:v}=m,{keyName:ne,keyData:Pe}=L,{type:oe,name:Ve,layout:ae,path:be}=Pe,ke=($e=>{let It=E.indivisibles.mapTrail;if(It.has($e))return It.get($e).address;let Mt=Array.from(It.entries()).filter(([en])=>en.startsWith(`${$e}.`));return Mt.length?(Mt.sort((en,Ec)=>en[1].address-Ec[1].address),Mt[0][1].address-8):null})(ne),xt=N(Ve,be),ot=s.get(xt);if(Ve===re){Ye(),I(v.value),e.push(_e),e.push(le,g);let $e={type:ve,name:mt,literal:v.value.size||v.value.literal.length,path:Qe};C($e,ke),ft()}else if(ot.type===de){Ye();let $e=G(v.value.literal,xt,!1);C({type:ve,name:mt,literal:$e,path:Qe},ke),ft()}else if(oe===q||ae===q)if(v.value.type===Je){let $e=Ce.get(v.value.name);Ye(),M(Pe,$e),C(Pe.quantity,ke,$e+1,!0),ft()}else Ye(),B(v.value,!1,!1),C(v.value.quantity,ke,null,!0),ft();else throw Error(\"Error: Unable to identify type: \",ot.type)}let S=E.indivisibles.mapTrail.size+f.length;return z&&(e.push(F,g),e.push(i,...l(S))),S},Z=(O,a)=>{let z=0;me=!0;let E=Fe.get(a),C;if(E){let{data:S}=E,{name:m,path:L,segment:v}=S;C=N(m,L)}else{let S=Ie(O);C=N(S?.name,S?.path)}let f=s.get(C);switch(f.type){case He:{let{link:S}=f,{store:m}=S;e.push(i,...l(m.size)),$(),e.push(le,g),e.push(F,g),I(O),e.push(m.opcode,m.align,m.offset),e.push(F,g),z=z+7|0;break}case de:{let S=0,{indivisibles:m}=f,{mapTrail:L}=m,v=O.trail.join(\".\");switch(O.type){case Pt:{let ne=L.get(v);if(ne&&yt(ne.data)){let Pe=N(ne.data.name,ne.data.path),oe=s.get(Pe),{link:Ve}=oe,{store:ae}=Ve;e.push(i,...l(ae.size)),$(),e.push(le,g),e.push(F,g),I(O),e.push(ae.opcode,ae.align,ae.offset),e.push(F,g);break}}default:{I(O);break}}break}}return z},M=(O,a=0,z=2)=>{let{name:E,path:C}=O,f=N(E,\"Flogram\"),S=s.get(f),{link:m}=S,{store:L,load:v}=m,ne=a;return ut(),e.push(i,0),e.push(le,Le),e.push(jt,Xe),e.push(Gt,Xe),Q(ne+z,ne+z+1|0),e.push(F,Le),e.push(Wo),e.push(ns,1),e.push(i,...l(L.size)),$(),Q(ne,ne+1|0),e.push(F,Le),e.push(i,v.size),e.push(Me),e.push(H),e.push(v.opcode,v.align,v.offset),e.push(L.opcode,L.align,L.offset),ft(),e.push(F,Le),e.push(i,1),e.push(H),e.push(le,Le),e.push(ss,0),e.push(Ht),e.push(Ht),O.length},Ne=(O,a=2)=>{let{name:z,path:E}=O,C=N(z,\"Flogram\"),f=s.get(C),{link:S}=f,{store:m,load:L}=S;return ut(),Ye(),dt(),e.push(i,0),e.push(le,Le),e.push(jt,Xe),e.push(Gt,Xe),e.push(F,g),e.push(i,...l(At*a)),e.push(H),e.push(st,fe,ue),e.push(F,Le),e.push(Wo),e.push(ns,1),e.push(i,...l(m.size)),$(),e.push(F,g),e.push(st,fe,ue),e.push(F,Le),e.push(i,L.size),e.push(Me),e.push(H),e.push(L.opcode,L.align,L.offset),e.push(m.opcode,m.align,m.offset),ft(),e.push(F,Le),e.push(i,1),e.push(H),e.push(le,Le),e.push(ss,0),e.push(Ht),e.push(Ht),nt(),O.length},X=(O,a)=>{let z=s.get(a);if(!z)throw new Error(\"No shape found\");let{opcode:E}=z,C=z.encode(O);e.push(E,...C)},Q=(O,a)=>{for(;O<a;)e.push(tt,O),O=O+1|0};if(!T)throw new Error(\"Invalid value provided to actionValue\");switch(T.type){case Lt:{x(T);break}case\"instance\":{let{path:O,members:a}=T;var Ue=a.length-1|0;for(let z=Ue;z>=0;z=z-1|0){let E=a[z],{path:C,value:f}=E;b(f)}break}case Qt:{let{data:O}=T,{name:a,path:z}=O,E=N(a,z),C=s.get(E);T.layout===\"NONE\"?e.push(C.opcode,...C.none):I(T.value),o=o+1|0;break}case Vs:{let{link:O}=T;D.optimization;let a=K(O);o=o+a|0;break}case zn:{let{value:O}=T,a=qe(O);if(Fe.get(a)?.data.type===q){I({name:a,type:Je});return}if(Ie(O)?.name===re){I(O);return}let E=Z(O,a);o=o+E|0;break}case Mo:{let{value:O}=T;switch(O.type){case Je:{if(Dt.get(O.name)&&D.linkValueLoad){let a=Dt.get(O.name),z=a.source.length;typeof a.source.literal===re.toLowerCase()&&(z=literal.value.literal.length),e.push(i,...l(z))}else{let a=Ce.get(O.name);Q(a+1|0,a+2|0)}break}}break}case Co:{let{values:O}=T;ut(Le),Ye(),Ye();for(let a of O){let z=Ie(a),E=N(z.name,z.path),C=s.get(E);if(z.name===re)I(a,es),e.push(_e),e.push(_e);else if(z.type===q||z.layout===q)I(a,es),e.push(_e),e.push(_e),e.push(_e);else if(C?.type===at)console.log(Ie(a));else if(ls.includes(z.name)){let{link:f}=C,{store:S,load:m}=f;e.push(i,...l(Yt)),$(),e.push(i,...l(sn.includes(z.name)?dl:bl)),e.push(Be,fe,ue),e.push(i,...l(S.size)),$(),I(a),z.mutable&&e.push(m.opcode,m.align,m.offset),e.push(S.opcode,S.align,S.offset)}else if(Rs.includes(z.name)){let{link:f}=C,{store:S,load:m}=f;e.push(i,...l(Yt)),$(),e.push(i,...l(z.name===Go?ml:Tl)),e.push(Be,fe,ue),e.push(i,...l(S.size)),$(),I(a),z.mutable&&e.push(m.opcode,m.align,m.offset),e.push(S.opcode,S.align,S.offset)}else if(z.name===Fn){let{link:f}=C,{store:S,load:m}=f;e.push(i,...l(S.size)),$(),I(a),z.mutable&&e.push(m.opcode,m.align,m.offset),e.push(S.opcode,S.align,S.offset)}else{let{link:f}=C,{store:S,load:m}=f;e.push(i,...l(S.size)),$(),I(a),z.mutable&&e.push(m.opcode,m.align,m.offset),e.push(S.opcode,S.align,S.offset)}ft()}nt(),nt(),ut(),e.push(F,Le),e.push(F,g),e.push(F,Le),e.push(tl),e.push(i,...l(At)),e.push(el),o=o+2|0;break}case ve:{let{literal:O,name:a,path:z}=T,E=N(a,z),C=s.get(E);if(T.layout===q){B(T),o=o+3|0;return}else if(a===re){let f=[];for(let m of O)f.push({type:ve,literal:m.charCodeAt(0).toString(),name:mt,path:\"Flogram\"});let S={...T,name:mt,layout:q,contains:null,quantity:{capacity:{literal:f.length.toString(),type:ve,name:mt,path:Qe},size:{literal:f.length.toString(),type:ve,name:mt,path:Qe}},literal:f};B(S),e.push(_e),o=o+2|0;return}if(C)if(C.type===de)G(O,E),o=o+2|0;else if(C.type===at){if(X(O,E),o=o+3|0,T.props?.length>0){let f=N(a,z),S=N(O,f),L=s.get(S).indivisibles.mapIndex,v=Object.freeze({type:ve,name:O,literal:T.props.map(ne=>({name:L.get(T.props.indexOf(ne)).trail,value:ne})),path:f});G(v.literal,S)}else e.push(i,0),e.push(i,0);return}else X(O,E),o=o+1|0;else throw console.log(E),new Error(\"NO SHAPE FOUND!!!!!!!!!\",T);break}case ws:{let{array:O,index:a}=T,z=qe(O),E=Ce.get(z),C=Ie(O);E!=null;let f=()=>{I(O),e.push(_e),e.push(_e)},S=N(C.name,C.path);me=!0;let m=s.get(S);switch(m.type){case He:if(C.contains===q||C?.type===q&&C?.layout===q||C?.name===re&&C.contains)E!=null?Q(E,E+1|0):f(),I(a),e.push(i,...l(At)),e.push(Me),e.push(H),e.push(le,g),Ye(),Ne(C);else if(C.name===re&&C.type===q)E!=null?Q(E,E+1|0):f(),I(a),e.push(i,...l(At)),e.push(Me),e.push(H),e.push(le,g),Ye(),Ne(C,2);else{let{link:L}=m,{load:v}=L;E!=null?Q(E,E+1|0):f(),I(a),e.push(i,...l(v.size)),e.push(Me),e.push(H),e.push(v.opcode,v.align,v.offset),o=o+1|0;break}case de:{E?Q(E,E+1|0):f(),I(a),C?.type===q?C?.name!==re&&!C?.contains?e.push(i,...l(At)):C.name===re?e.push(i,...l(kn)):e.push(i,...l(ms)):e.push(i,...l(vs)),e.push(Me),e.push(H),e.push(st,fe,ue),Q(E,E+1|0),e.push(i,...l(At)),I(a),C?.type===q?C?.name!==re&&!C?.contains?e.push(i,...l(At)):C.name===re?e.push(i,...l(kn)):e.push(i,...l(ms)):e.push(i,...l(vs)),e.push(Me),e.push(H),e.push(H),e.push(st,fe,ue),o=o+2|0;break}}break}case Uo:{I(T.value);break}case Je:{let{name:O}=T,a=Ce.get(O),z=Fe.get(O);if(D.optimization){let f=Dt.get(z.name);if(f){let S=m=>m.name===Dn?m.literal===\"FALSE\"||m.literal==\"0\"?0:1:parseInt(f.source.literal,10);if(f.source.name!==re&&f.source.layout!==q){let m=S(f.source);e.push(i,...l(m));return}}}let{data:E}=z,C=s.get(N(E.name,E.path));switch(E.type){case Bt:{E.name===q?(Q(a,a+Et|0),o=o+Et|0):C.type===de?(Q(a,a+ts|0),o=o+ts|0):E.name===re?(Q(a,a+Kt|0),o=o+Kt|0):(Q(a,a+Ts|0),o=o+Ts|0);break}case q:{n===es&&E.quantity.capacity?(M(E,a),e.push(F,g),E.quantity.capacity?(I(E.quantity.size),I(E.quantity.capacity)):Q(a+1,a+Et|0)):(Q(a,a+Et|0),o=o+Et|0);break}case Qt:case St:{let{name:f,path:S}=E,m=N(f,S),L=s.get(m);switch(E.layout){case q:{Q(a,a+Et|0),o=o+Et|0;break}default:{switch(L.type){case He:{if(f===re){n===es?(ut(),Ye(),Oe(\"save\"),e.push(i,0),e.push(le,g),e.push(jt,Xe),e.push(Gt,Xe),e.push(i,Yt),$(),e.push(tt,a),e.push(F,g),e.push(i,...l(At)),e.push(Me),e.push(H),e.push(st,fe,ue),e.push(Be,fe,ue),e.push(F,g),e.push(i,1),e.push(H),e.push(le,g),e.push(et,$o),Oe(\"merge\"),e.push(F,g),e.push(tt,a+1),e.push(gs),e.push(ns,1),e.push(ss,0),e.push(Ht),e.push(Ht),nt(),Oe(\"undo\"),e.push(F,g),e.push(tt,a+1)):(Q(a,a+2|0),o=o+2|0);break}else Q(a,a+1|0);break}case at:{Q(a,a+Un|0),o=o+Un|0;break}case de:{Q(a,a+ts|0),o=o+ts|0;break}}break}}break}}break}case Pt:{let{value:O,trail:a}=T,z=O.name||O.link||O.value;me=!0;let E=Fe.get(z),C;if(E){let{data:Te}=E;C=N(Te.name,Te.path)}else{let Te=Ie(O);C=N(Te.data?.name,Te.data?.path)}let f=s.get(C);if(f.type===at){let{opcode:Te}=f;Ye(),I(O),e.push(_e),e.push(le,g);let ke=f.labels.find(Mt=>Mt.props.includes(a[0]));if(e.push(_e),e.push(F,g),!ke){console.error(\"Load value: Unknown enum label value.....\");return}let ot=s.get(N(ke.name,C)).indivisibles.mapTrail.get(a[0]);e.push(i,...l(ot.address)),e.push(H);let $e=s.get(N(ot.data.name,ot.data.path)),{load:It}=$e.link;e.push(It.opcode,It.align,It.offset),nt();return}let{indivisibles:S}=f,{mapTrail:m}=S,L=JSON.parse(JSON.stringify(a)),v=m.get(a[0]),{address:ne}=v,Pe=[ne],oe=f;for(;L.length>0;){let Te=L.shift();if(L.length>0){let ke=oe.members.get(Te),xt=N(ke.name,ke.path);if(oe=s.get(xt),oe.indivisibles){let{indivisibles:ot}=oe,{mapTrail:$e}=ot,It=$e.get(L[0]),{address:Mt}=It;Pe.push(Mt)}continue}oe=oe.members.get(Te)}let Ve=N(oe.name,oe.path),ae=s.get(Ve),be=Ce.get(z);for(e.push(tt,...l(be));Pe.length>1;){let Te=Pe.shift();e.push(i,...l(Te)),e.push(H),e.push(st,fe,ue)}if(e.push(i,...l(Pe[0])),e.push(H),oe.type===q||oe.layout===q)e.push(le,g),e.push(F,g),e.push(i,...l(_t)),e.push(H),e.push(F,g),e.push(i,...l(Tt)),e.push(H),e.push(F,g);else if(oe.name===re){if(e.push(le,g),n===es){Ye(),Ne(oe,1),e.push(i,0),e.push(i,0);return}e.push(F,g),e.push(i,...l(Tt)),e.push(H),e.push(F,g)}else if(ae.type===de)e.push(le,g),e.push(F,g),e.push(i,...l(Tt)),e.push(H),e.push(F,g);else if(ae.type===at)e.push(le,g),e.push(F,g),e.push(st,fe,ue),e.push(F,g),e.push(st,fe,ue),e.push(F,g),e.push(st,fe,ue);else if(ae.link){let{link:Te}=ae,{load:ke}=Te;e.push(ke.opcode,ke.align,ke.offset)}else throw Error(\"Unhandled Case: Could read to program not running!!!!\");break}}},je=k=>{let{name:T,currentIndex:K}=k;if(K===0)e.push(Ct,Ce.size+1);else if(e.push(tt,Ce.size+1),T===\"==\")e.push(qp);else if(T===\"!=\")e.push($p);else throw new Error(`Unknown operator ${T} for objects`)},Ze=k=>{let{member:T}=k,{isObject:K,index:B,address:G}=T;if(K){e.push(tt,...l(B)),e.push(i,...l(G)),e.push(H),e.push(tt,...l(B)),e.push(i,...l(G+Tt)),e.push(H);return}e.push(tt,...l(B)),e.push(i,...l(G)),e.push(H)};for(b(t);p.length>0;){let k=p.shift();switch(k.type){case\"call\":{ee(k);break}case\"value\":{ie(k);break}case ds:{Ze(k);break}case jo:{je(k);break}}}return o},Xt=t=>{let n=(p,_)=>{for(;p<_;)_=_-1|0,e.push(Ct,_)},o=(p,_)=>{if(yt(_,!0)){n(p,p+1|0);return}switch(_.type){case Bt:{_.name===q?n(p,p+Et|0):_.name===re?n(p,p+Kt|0):n(p,p+Ts|0);break}case re:{n(p,p+Kt|0);break}case q:{n(p,p+Et|0);break}case Qt:case St:{let{name:b,path:R}=_,j=N(b,R),U=s.get(j);switch(b){case re:{n(p,p+2|0);break}case q:{n(p,p+Number(_.quantity.capacity.literal)|0);break}default:{switch(U.type){case He:{b===re?n(p,p+2|0):n(p,p+1|0);break}case at:{n(p,p+3|0);break}case de:{n(p,p+2|0);break}}break}}break}}};switch(t.type){case Je:{let{name:p}=t,_=Ce.get(p),b=Fe.get(p),{data:R}=b;o(_,R);break}case Pt:{let{value:p,trail:_}=t,{name:b}=p,R=Fe.get(b),{data:j}=R,U=N(j.name,j.path),x=s.get(U),{indivisibles:ee}=x,{mapTrail:ie}=ee,je=_.join(\".\"),Ze=JSON.parse(JSON.stringify(_)),k=ie.get(je),{index:T}=k,K=x;for(;Ze.length>0;){let G=Ze.shift();K=K.members.get(G)}let B=Ce.get(b);K.type==q?n(B+T|0,B+T+Et|0):K.type==re?n(B+T|0,B+T+Kt|0):n(B+T|0,B+T+1|0);break}}},y=(t,n)=>{let{array:o,index:p}=t;me=!0;let _=0,b=Ce.get(o.name),R=()=>{e.push(tt,b)},j=Fe.get(qe(o)),{data:U}=j,{name:x,path:ee}=U,ie=N(x,ee),je=s.get(ie);switch(je.type){case He:{R(),I(p);let{link:Ze}=je,{store:k}=Ze;e.push(i,k.size),e.push(Me),e.push(H);let T=Ie(n);I(n),T.mutable&&e.push(st,fe,ue),e.push(k.opcode,k.align,k.offset),_=_+4|0;break}case de:{R(),I(p),e.push(i,Yt),e.push(Me),e.push(H),e.push(le,g),e.push(F,g),e.push(F,g),e.push(i,Yt),e.push(H),I(n),e.push(Be,fe,ue),e.push(Be,fe,ue),_=_+4|0;break}}return _},u=(t,n)=>{let{value:o,trail:p}=t,{name:_}=o;me=!0;let b=Fe.get(_),{data:R}=b,j=N(R.name,R.path),U=s.get(j),{indivisibles:x}=U,{mapTrail:ee}=x,ie=p.join(\".\"),je=JSON.parse(JSON.stringify(p)),Ze=ee.get(ie),{address:k}=Ze,T=U;for(;je.length>0;){let G=je.shift();if(je.length>0){let Z=T.members.get(G),M=N(Z.name,Z.path);T=s.get(M);continue}T=T.members.get(G)}let K=N(T.name,T.path),B=s.get(K);switch(B.type){case He:{let{link:G}=B,{store:Z}=G,M=Ce.get(_);e.push(tt,...l(M)),e.push(i,...l(k)),e.push(H),I(n),e.push(Z.opcode,Z.align,Z.offset);break}}},P=(t,n)=>{let{link:o}=t;me=!0;let p=0,{name:_,path:b,layout:R}=Ie(o),j=N(_,b),U=s.get(j);if(_===q||R===q){I(o),e.push(_e),e.push(le,g);let x=Ce.get(qe(o));I(n),e.push(Ct,x+2|0),e.push(Ct,x+1|0),e.push(Ct,x),e.push(F,g),e.push(et,Ln),Oe(\"dealloc\")}else if(_===re){I(o),e.push(_e),e.push(le,g);let x=Ce.get(qe(o));I(n),e.push(Ct,x+1|0),e.push(Ct,x),e.push(F,g),e.push(et,Ln),Oe(\"dealloc\");return}switch(U.type){case He:{I(o),I(n);let{link:x}=U,{store:ee}=x;e.push(ee.opcode,ee.align,ee.offset),p=p+1|0;break}case de:{let x=0,ee=(G,Z,M=\"\")=>{let Ne=M?`${M}.${G.name}`:G.name,X=Z.get(Ne);if(X){let{data:Q}=X,Ue=N(Q.name,Q.path),O=s.get(Ue),{store:a}=O.link;I(o),e.push(_e),e.push(i,...l(X.address)),e.push(H),I(G.value),e.push(a.opcode,a.align,a.offset)}else if(G.value&&G.value.literal)for(let Q of G.value.literal)ee(Q,Z,Ne)};if(n.type===Je){let{name:G}=n;if(x=Ce.get(G),t.link.name.startsWith(ds)){let Z=Ce.get(t.link.name),{name:M,path:Ne}=Fe.get(G),X=N(M,Ne),Q=s.get(X),{indivisibles:Ue}=Q,{mapTrail:O}=Ue;for(let a of O){let{data:z}=a,E=N(z.name,z.path),C=s.get(E),{load:f,store:S}=C.link;e.push(i,...l(Z)),e.push(i,...l(a.address)),e.push(H),e.push(i,...l(x)),e.push(i,...l(a.address)),e.push(H),e.push(f.opcode,f.align,f.offset),e.push(S.opcode,S.align,S.offset)}return}return I(o),e.push(_e),e.push(tt,...l(x)),e.push(Be,fe,ue),I(o),e.push(_e),e.push(i,...l(Tt)),e.push(H),e.push(tt,...l(x+1|0)),e.push(Be,fe,ue),p=p+2|0,p}let{literal:ie,name:je,path:Ze}=n,k=N(je,Ze),T=s.get(k),{indivisibles:K}=T,{mapTrail:B}=K;for(let G of ie)ee(G,B)}}return p},Y=(t,n)=>{let{type:o,link:p}=n,_=0,b=ee=>{let ie=Array.from(ee.members.values()).reduce((K,B)=>B?K+1:K,0);ut();let{indivisibles:je}=ee,{mapTrail:Ze}=je,k=(K,B)=>{let{store:G,load:Z}=K.link,{address:M}=Ze.get(B);e.push(i,...l(G.size)),$(),I(p),e.push(_e),e.push(i,...l(M)),e.push(H),e.push(Z.opcode,Z.align,Z.offset),e.push(G.opcode,G.align,G.offset)},T=(K,B)=>{e.push(i,...l(_t)),$(),e.push(le,Le);for(let[Z,M]of K.members){if(!M)continue;let Ne=N(M.name,M.path),X=s.get(Ne);if(X.type===de){Ye(),T(X,`${B}.${Z}`);continue}let Q=`${B}.${Z}`;k(X,Q)}e.push(F,Le),e.push(F,Le),e.push(i,...l(_t)),e.push(H),e.push(Be,fe,ue);let G=Array.from(K.members.values()).reduce((Z,M)=>M?Z+1:Z,0);e.push(F,Le),e.push(i,...l(Tt)),e.push(H),e.push(i,...l(G)),e.push(Be,fe,ue),nt()};for(let[K,B]of ee.members){if(!B)continue;let G=N(B.name,B.path),Z=s.get(G);if(Z.type===de){T(Z,K);continue}k(Z,K)}e.push(F,g),e.push(i,...l(ie))},{name:R,path:j}=Ie(p||n),U=N(R,j),x=s.get(U);switch(x.type){case He:case de:{if(t.type===Je)return b(x),Xt(t),_;break}}return _},J=(t,n,o)=>{let p=s.get(t),_=R=>{switch(R.type){case Je:{let{name:j}=R,U=Ce.get(j);e.push(tt,U);break}case ve:{let{literal:j}=R,U=p.type===He?j:p.evaluate(j),x=l(U);e.push(i,...x);break}}},b=()=>{switch(p.type){case at:case He:{e.push(Xo),e.push(ns,0);break}}};switch(p.type){case at:{I(n),e.push(_e),e.push(_e),I(o),e.push(_e),e.push(_e),b();break}case He:{I(n),I(o),b();break}}},w=[],W=t=>{let n={type:Vo,statement:t};w.unshift(n)},ye=()=>{let t={type:Ho};w.unshift(t)};w.unshift({type:zt});let ze=(t,n)=>{if(t.members)for(let[o,p]of t.members.entries()){let _=N(p?.name,p?.path),b=s.get(_);if(b&&b.type===de){let R=ze(b,_,n);R&&he.push(R)}}return t.members&&t.members.has(vo)?n:null},he=[];Vt.forEach(t=>{let n=N(t.data.name,t.data.path),o=s.get(n);if(o&&o.type===de){let p=ze(o,n);p&&he.push(p)}});let xe=he.map(t=>({type:Do,expression:{type:Lt,name:vo,path:t,inputs:[]}}));for(let t of xe)W(t);var Ee=xs.length-1|0;for(let t=Ee;t>=0;t=t-1|0){let n=xs[t];W(n)}let we=t=>{let{target:n,source:o}=t;if(D.optimization){if(o.type===ve&&o.path===Qe){let b=qe(n);b&&Dt.set(b,{target:n,source:o})}o.type!==ve&&Dt.get(n.name||\"\")&&Dt.delete(n.name)}if(n.type===Fo){P(n,o);return}if(n.type===Up){y(n,o);return}if(n.type===Pt){u(n,o);return}let p,_=Ie(o);if(_&&(p=s.get(N(_.name,_.path))),p&&p.type===de&&_.type!==ve){let b=o;if(o.type===Vs){I(o.link),Xt(n);return}b={type:\"value_copy\",link:o},Y(n,b);return}I(o,es),Xt(n)},Ge=t=>{let{statements:n}=t;e.push(jt,Xe),e.push(Gt,Xe);let o={type:zt,layout:bs};w.unshift(o),w.unshift(o),w.unshift({type:wo});var p=n.length-1|0;for(let _=p;_>=0;_=_-1|0){let b=n[_];W(b)}},rs=t=>{let{statements:n,condition:o}=t;e.push(jt,Xe),e.push(Gt,Xe);let p={type:zt,layout:bs};w.unshift(p),w.unshift(p),w.unshift({type:Cn,condition:o});var _=n.length-1|0;for(let b=_;b>=0;b=b-1|0){let R=n[b];W(R)}},vt=t=>{let{statements:n,collection:o,index:p,iterator:_}=t;e.push(i,0),p?e.push(Ct,Ce.get(p)):e.push(le,g),e.push(jt,Xe),e.push(Gt,Xe);let b={type:zt,layout:bs};w.unshift(b),w.unshift(b),w.unshift({type:Ko,index:p});var R=n.length-1|0;for(let j=R;j>=0;j=j-1|0){let U=n[j];W(U)}w.unshift({type:Bo,collection:o,iterator:_,index:p})},De=t=>{let{statements:n}=t;t.initializer&&we(t.initializer),e.push(jt,Xe),e.push(Gt,Xe);let o={type:zt,layout:bs};w.unshift(o),w.unshift(o);let p={type:Lt,name:t.modifier===ko?\"<=\":t.modifier===Lo?\"<\":t.modifier===vp?\">=\":t.modifier===Mp?\">\":\"\",path:Qe,inputs:[t.variable,t.limit]};w.unshift({type:Cn,condition:p});let _={type:Lt,name:t.modifier===ko||t.modifier===Lo?\"+\":\"-\",path:Qe,inputs:[t.variable,t.step]},b={type:Ro,source:_,target:t.variable};W(b);var R=n.length-1|0;for(let j=R;j>=0;j=j-1|0){let U=n[j];W(U)}},qs=t=>{e.push(ss,2)},is=t=>{let{branches:n}=t;w.unshift({type:zt});for(let o=n.length-1;o>=0;o--){let p=n[o];switch(p.type){case Po:{let{statements:_}=p,b=_.length;for(let j=b-1;j>=0;j--){let U=_[j];W(U)}let R=_.find(j=>j.type===Ys);w.unshift({type:Ls,stop:R}),I(p.values[0]);break}case zo:{let{statements:_}=p,b=_.length;for(let R=b-1;R>=0;R--){let j=_[R];W(j)}w.unshift({type:jn});break}}}},Wt=(t,n)=>{w.unshift({type:zt});let o=n[0];if(n.length>=2){if(n[1].type===Po)Wt(t,n.slice(1));else if(n[1].type===zo){let{statements:x}=n[1],ee=x.length;for(let ie=ee-1;ie>=0;ie--)W(x[ie])}}let{statements:p}=o;w.unshift({type:jn});let _=p.length;for(let x=_-1;x>=0;x--)W(p[x]);let b=p.find(x=>x.type===Ys),R=Object.freeze({type:Ls,stop:b});w.unshift(R);let U=Object.freeze({type:Zo,function:()=>{let{name:x,path:ee}=Ie(t);s.get(N(x,ee)).type===at?(I(t),e.push(_e),e.push(_e),I(o.value),e.push(_e),e.push(_e),e.push(gs)):(I(t),I(o.value),e.push(gs))}});w.unshift(U)},$s=t=>{let{value:n,matches:o}=t;Wt(n,o)},Is=t=>{let n=t,{branches:o,values:p}=n;if(o.length>0&&p.length===0)return is(t);e.push(jt,Xe);let b={type:zt};w.unshift(b);let R=[];for(let U of p)switch(U.type){case Je:{let{name:x}=U,ee=Fe.get(x),{data:ie}=ee,{name:je,path:Ze}=ie,k=N(je,Ze);R.push(k);break}}var j=o.length-1|0;for(let U=j;U>=0;U=U-1|0){let x=o[U],ee={type:Yo,branch:x,condition:n,commonKeys:R};w.unshift(ee)}},As=t=>{let{expression:n}=t;var p=I(n)|0;for(let _=0;_<p;_=_+1|0)e.push(_e)},it=t=>{let{value:n}=t;I(n),e.push(et,Ln),Oe(\"dealloc\"),e.push(i,0),Xt(n)},Js=t=>{let{values:n}=t;for(let o of n)I(o);e.push(Jp)},Qs=()=>{e.push(sl)},qn=t=>{e.push(Ht)},d=t=>{e.push(12,0)},A=t=>{e.push(Qp)},V=t=>{t.stop?(e.push(qo),e.push(pt)):(e.push(qo),e.push(Xe))},Se=t=>{let{branch:n,commonKeys:o,condition:p}=t,{values:_}=n,{values:b}=p;var R=o.length|0;for(let x=0;x<R;x=x+1|0){let ee=o[x],ie=_[x],je=b[x];J(ee,ie,je)}let{statements:j}=n;var U=j.length-1|0;for(let x=U;x>=0;x=x-1|0){let ee=j[x];W(ee)}},se=t=>{let{condition:n}=t;I(n);let o=Ie(n);if(o?.mutable){let p=N(o.name,o.path),_=s.get(p),{load:b}=_.link;e.push(b.opcode,b.align,b.offset)}e.push(i,0),e.push(gs),e.push(ns,1),e.push(ss,0)},Ae=t=>{let{collection:n,iterator:o,index:p}=t;I(n),e.push(_e),me=!0;let _=Ce.get(p);p?e.push(tt,_):e.push(F,g),e.push(gs),e.push(ns,1),e.push(_e);let b=Object.freeze({type:ws,array:n,index:{type:Je,name:p}}),R=Object.freeze({type:Je,name:o}),j=Object.freeze({type:Ro,target:R,source:b});W(j)},te=t=>{let{index:n}=t,o=Ce.get(n);n?e.push(tt,o):e.push(F,g),e.push(i,1),e.push(H),n?e.push(Ct,o):e.push(le,g),e.push(ss,0)},rt=t=>{let{statement:n}=t;switch(n.type){case\"assign\":{we(n);break}case Ls:{Is(n);break}case Gp:{$s(n);break}case bs:{Ge(n);break}case kp:{rs(n);break}case Lp:{vt(n);break}case Vp:{De(n);break}case Yp:{qs(n);break}case Do:{As(n);break}case wp:{it(n);break}case Ys:{Js(n);break}case Xp:{Qs();break}default:throw new Error(`can not handle statement type ${n.type}`)}};for(;w.length>0;){let t=w.shift();switch(t.type){case zt:{qn(t);break}case wo:{d(t);break}case jn:{A(t);break}case Ls:{V(t);break}case Yo:{Se(t);break}case Vo:{rt(t);break}case Cn:{se(t);break}case Bo:{Ae(t);break}case Ko:{te(t);break}case Ho:{e.push(jt,Xe);break}case Zo:{t.function();break}default:break}}return{totalOctets:e,nativeImports:pe,loads:me}}var{ENUM_MEMORY_SIZE:gl,ENUM_STACK_SIZE:sc,ARRAY_MEMORY_SIZE:yl,ARRAY_STACK_SIZE:wn,STRING_MEMORY_SIZE:xl,STRING_STACK_SIZE:Vn,OBJECT_MEMORY_SIZE:Xu,OBJECT_STACK_SIZE:nc,NATIVE_MEMORY_SIZE:Wu,NATIVE_STACK_SIZE:oc,NATIVE_SIZE:qu,STEP:$u,DOUBLE_STEP:Il,TRIPPLE_STEP:Ju}=Rt.Sizes,{HEX_ENCODE:vn,LEB128_ENCODE:Nt}=Jt,{TYPES_ASSIGN:Mn,TYPES_ARRAY:wt,TYPES_DATA:Bs,TYPES_GENERICS:Al,TYPES_ENUMERATION:Zt,TYPES_EXPRESSION:Nl,TYPES_LINK:Ks,TYPES_LOCAL:os,TYPES_OBJECT:Ft,TYPES_PROCEDURE:Bn,TYPES_RETURN:cc,TYPES_SELECT:Rl,TYPES_ARRAY_ACCESS:ac,TYPES_ARRAY_ASSIGNMENT:rc,TYPES_MEMBER:ic,TYPES_STORE:Kn,TYPES_LITERAL:pc,TYPES_LINK_TO:Gs,TYPES_VALUE_AT:Hs,TYPES_SELF:lc,TYPES_NATIVE:cs,TYPES_STRING:as,TYPES_CONDITION:Sl,TYPES_BRANCH_MATCH:uc,TYPES_WHILE:Pl,TYPES_WHEN:zl,TYPES_FOR:jl,TYPES_FOREACH:Cl,TYPES_SIZE:fc,TYPES_DROP:Fl,TYPES_CONCAT:Dl,TYPES_UNREACHABLE:Ul}=Ns,Gn=\"\",We=(c,s)=>`${s}.${c}`,kl=c=>[\">\",\"<\",\">=\",\"<=\",\"!=\",\"==\"].includes(c),Ll=c=>[\"FP64\",\"I64\",\"U64\",\"FP32\",\"I32\",\"U32\",\"I16\",\"U16\",\"I8\",\"U8\",\"Bool\"].includes(c),Hn=48,Yl=Object.freeze([0,127]),wl=Object.freeze({}),Vl=Object.freeze([127]),hc=0;var vl=2;var Ml=10,Bl=7,Kl=3,Gl=2,Hl=1,Zl=6,Ot=96,gt=127,Zn=Object.freeze([7,105,109,112,111,114,116,115]),Xl=Object.freeze([6,109,101,109,111,114,121]),Wl=0;var ql=65,bt=new Uint8Array(8),$l=Object.freeze([0,97,115,109]),Jl=Object.freeze([1,0,0,0]),Ql=(c,s)=>{s=s??wl;let r={},{data:h,code:D}=c,ce=D.filter(y=>!y.description.generics||y.description.generics.length===0),e=new Map,pe=new Map,me=y=>{let u=0;for(let P of y){let{data:Y}=P;switch(Y.type){case\"Maybe\":case Bs:{let{name:J,path:w}=Y,W=We(J,w),ye=e.get(W);if(!ye)console.error(\"No shape found for key:\",W);else switch(ye.type){case cs:if(J===as){u=u+Vn|0;break}case Zt:{u=u+sc|0;break}case Ft:{u=u+nc|0;break}}break}case Ks:{let J=e.get(We(Y.name,Y.path));Y.name===as?u=u+Vn|0:Y.name===wt?u=u+wn|0:J.type===Ft?u=u+nc|0:u=u+oc|0;break}case wt:{u=u+wn|0;break}}}return u},Oe=(y,u)=>{let{labels:P}=u,Y=new Map,J=[];var w=P.length|0;for(let he=0;he<w;he=he+1|0){let{name:xe,props:Ee}=P[he];if(Ee.length>0){let we={type:Ft,name:xe,path:y,description:{members:Ee,generics:[]}};h.push(we),J.push({name:xe,props:Ee.map(Ge=>Ge.name)})}Y.set(xe,he)}return Object.freeze({type:Zt,encode:he=>{let xe=Y.get(he);return typeof xe>\"u\"?Vl:Nt(xe)},evaluate:he=>Y.get(he),opcode:ql,labels:J,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})})},$=y=>{let u=[],P=[],Y=0,J=()=>{let d=Object.freeze({type:\"back\"});u.unshift(d)},w=d=>{let A={type:Bs,data:d};u.unshift(A)},W=d=>{let A={type:\"name\",name:d};u.unshift(A)},ye=(d,A)=>{A&&(J(),w(A),W(d))},ze=d=>h.find(A=>A.name===d),he=(d,A)=>A.find(V=>V.name===d),xe=(d,{inputs:A})=>A.find(V=>V.name===d),Ee=(d,A)=>{let V=d;for(let Se of A){let se=he(Se,V.description.members),Ae=ze(se.data.name);if(Ae&&Ae.type===Ft)V=Ae;else return se}return null},we=(d,A)=>{let V=d.trail,Se=he(V[0],A.members);if(!Se)return null;if(V.length===1)return Se.data;let se=ze(Se.data.name);return Ee(se,V.slice(1)).data},Ge=(d,A,V,Se)=>{if(xe(A,V.description))return;V.description.self.push(d);let se=Object.seal({name:A,data:{...we({trail:d.trail||d.value?.trail||d.link?.trail||[]},Se)}});d.type!==Gs&&(se.data.type=Ks),V.description.inputs.push(se)},rs=(d,A,V)=>{let Se=d.inputs.map(Ae=>De(Ae,A,V)),se=typeof d.name==\"object\"&&d.name[0]===ic?d.name.slice(1).join(\"_\"):d.name;return{...d,name:se,inputs:Se}},vt=(d,A,V)=>{if(!(d.value.link===lc||d.value.value===lc))return d;let Se=`${d.type}_${d.trail.join(\"_\")}`;if(Ge(d,Se,A,V),d.value.value)return{type:Gs,value:Se};if(d.value.link)return{type:Hs,link:Se}},De=(d,A,V,Se=\"\")=>{switch(d.type){case os:case pc:return d;case ic:{let se=`${d.type}_${d.trail.join(\"_\")}`;return Ge(d,se,A,V),Se===\"target\"?{type:Kn,link:{type:os,name:se}}:{type:Hs,link:{type:os,name:se}}}case Gs:{if(d.value.type===pc)return d.value;{let se=`${d.value.type}_${d.value.trail.join(\"_\")}`;return Ge(d,se,A,V),{type:Gs,value:{type:os,name:se}}}}case Hs:{let se=`${d.link.type}_${d.link.trail.join(\"_\")}`;return Ge(d,se,A,V),{type:Hs,link:{type:os,name:se}}}case Kn:{let se=`${d.link.type}_${d.link.trail.join(\"_\")}`;return Ge(d,se,A,V),{type:Kn,link:{type:os,name:se}}}case Rl:return vt(d,A,V);case Nl:return rs(d,A,V);case ac:{let se=De(d.array,A,V),Ae=De(d.index,A,V);return Object.freeze({type:ac,index:Ae,array:se})}case rc:{let se=De(d.array,A,V),Ae=De(d.index,A,V);return Object.freeze({type:rc,index:Ae,array:se})}case fc:{let se=De(d.value,A,V);return Object.freeze({type:fc,value:se})}case Dl:{let se=d.values.map(Ae=>De(Ae,A,V));return Object.freeze({...d,values:se})}default:throw Error(`Unhandled type(checkObjectValues): ${d.type}`)}},qs=(d,A)=>{let V=JSON.parse(JSON.stringify(d));V.description.self=[];let Se=Ae=>{Ae.type===Mn?(Ae.target=De(Ae.target,V,A,\"target\"),Ae.source=De(Ae.source,V,A)):Ae.type===cc&&(Ae.values=Ae.values.map(te=>De(te,V,A)))},se=Ae=>{Ae.forEach(te=>{if(te.type===Mn||te.type===cc)Se(te);else if(te.type===Sl)te.branches.forEach(rt=>{se(rt.statements),rt.type===uc&&(rt.values=rt.values.map(t=>De(t,V,A)))});else if(te.type===Pl)te.condition=De(te.condition,V,A),se(te.statements);else if(te.type===zl)te.value=De(te.value,V,A),te.matches.forEach(rt=>{rt.type===uc&&(rt.value=De(rt.value,V,A)),se(rt.statements)});else if(te.type===jl)te.limit=De(te.limit,V,A),te.variable=De(te.variable,V,A),te.initializer.type===Mn&&(te.initializer.target=De(te.initializer.target,V,A),te.initializer.source=De(te.initializer.source,V,A)),te.step=De(te.step,V,A),se(te.statements);else if(te.type===Cl)te.collection=De(te.collection,V,A),se(te.statements);else if(te.type===Fl)te.expression=De(te.expression,V,A);else if(te.type!==Ul)throw new Error(\"unhandled statement type: \",te.type)})};se(V.description.statements),ce.push(V)},{members:is}=y,Wt=new Map;for(let d of is){let{name:A,data:V,value:Se}=d;Wt.set(A,V),Se&&Wt.set(A,{...V,value:Se})}var $s=is.length-1|0;for(let d=$s;d>=0;d=d-1|0){let A=is[d],{name:V,data:Se}=A;if(A.type&&A.type===Bn){qs(A,y);continue}ye(V,Se)}let Is=new Map,As=new Map,it=0;for(;u.length>0;){let d=u.shift();switch(d.type){case\"back\":{P.pop();break}case Bs:{let{data:A}=d,V=()=>{let rt=P.join(\".\"),t=We(A.name,A.path),n=e.get(t),{link:o}=n,p=Object.freeze({data:A,index:it,address:Y,trail:rt}),_=e.get(We(A.name,A.path));A.name===as?Y+=xl:A.type===wt||A.layout===wt?Y+=yl:_.type===Zt?Y+=gl:Y+=o?.load.size||Il,Is.set(rt,p),As.set(it,p),A.name===as?it=it+Vn|0:A.type===wt||A.layout===wt?it=it+wn|0:_.type===Zt?it=it+sc|0:it=it+oc|0};if(A.type===Ks){V();break}let{name:Se,path:se}=A,Ae=We(Se,se),te=e.get(Ae);if(!te)throw new Error(\"Shape not found: \",Ae);switch(te.type){case cs:{V();break}case Zt:{V();break}case Ft:{V();break}}break}case\"name\":{let{name:A}=d;P.push(A);break}}}let Js=it|0,Qs=Object.freeze({mapTrail:Is,mapIndex:As});return{type:Ft,length:Js,members:Wt,indivisibles:Qs}},Re={};for(let y of h){let{path:u}=y;switch(y.type){case cs:{let{name:P,path:Y}=y,J=We(P,Y);if(Object.hasOwn(kt,J)){let w=kt[J];e.set(J,w);continue}break}case\"import\":{if(Object.hasOwn(kt,u)){let P=kt[u];e.set(u,P);continue}break}case Al:{let{name:P,path:Y}=y,J=We(P,Y),w=kt[\"Flogram.FP32\"];e.set(J,w);break}case Zt:{let{name:P,path:Y,description:J}=y,w=We(P,Y),W=Oe(w,J);e.set(w,W);break}case Ft:{let{name:P,path:Y,description:J}=y,{generics:w}=J,W=We(P,Y);if(!w||w.length===0){let ye=$(J);e.set(W,ye)}break}}}r.structures=Re;let lt=0,ut=(y,u)=>{let P=pe.get(y);if(typeof P>\"u\"){pe.set(y,[u]);return}(P.length==0||P.length>0&&P[0].body!==u.body)&&pe.set(y,[u,...P])},Ye=y=>{let{name:u,path:P}=y,Y=We(u,P);switch(P===\"Flogram\"&&(Ll(u)?Y=We(y.description.inputs[0]?.data?.name?.toLowerCase()+\".\"+ct(u),P):y.description.outputs&&y.description.outputs.length>=1&&!kl(y.name)?y.description.outputs[0]?.data?.name&&(Y=We(y.description.outputs[0]?.data?.name?.toLowerCase()+\".\"+ct(u,y.description.inputs?.length),P)):(fs.includes(y.description.inputs[1]?.data?.name)&&(Y=We(y.description.inputs[1]?.data?.name+\".\"+ct(u),P),Gn=y.description.inputs[1]?.data?.name),Gn&&(Y=We(Gn.toLowerCase()+\".\"+ct(u),P)))),y.type){case cs:{if(Object.hasOwn(Os,Y)){let J=Os[Y];ut(Y,J);return}break}case Bn:{let{description:J}=y,{inputs:w,outputs:W}=J,ye=We(u,P),ze={type:\"artificial\",index:\"artificial\"+lt,procedure:y,lengths:Object.freeze({inputs:me(w),outputs:me(W)})};ut(ye,ze);break}}lt=lt+1|0},nt=[],dt=[];for(let y of ce){if(y.description.generics?.length>0)continue;let{description:u}=y,{inputs:P,outputs:Y}=u,J=[...P,...Y];if(!(y.type===cs&&J.some(w=>!fs.includes(w.data.name))))switch(Ye(y),y.type){case\"import\":{let{path:w}=y;if(Object.hasOwn(Os,w))continue;nt.push(y);break}case Bn:{dt.push(y);break}}}let ft=y=>{let u=0,P=[];for(let Y of y){let J=()=>{P.push(gt),u=u+1|0,P.push(gt),u=u+1|0,P.push(gt),u=u+1|0},w=we=>{let{identity:Ge}=we;P.push(Ge),u=u+1|0},W=()=>{P.push(gt),u=u+1|0},ye=()=>{P.push(gt),u=u+1|0,P.push(gt),u=u+1|0,P.push(gt),u=u+1|0},ze=()=>{P.push(gt),u=u+1|0,P.push(gt),u=u+1|0},he=()=>{P.push(gt),u=u+1|0,P.push(gt),u=u+1|0},{name:xe,data:Ee}=Y;switch(Ee.type){case\"\":case Bs:{let{name:we,path:Ge}=Ee,rs=We(we,Ge),vt=e.get(rs);if(!vt)w(kt[\"Flogram.FP32\"]);else switch(vt.type){case cs:{we===as?he():w(vt);break}case Zt:{J();break}case Ft:{ze();break}}break}case Ks:{let we=e.get(We(Ee.name,Ee.path));Ee.name===wt?ye():Ee.name===as?he():we.type===Ft?ze():W();break}case wt:{ye();break}}}return[u,P]},yt=(y,u)=>{let P=u.length|0,Y=Nt(P);u.unshift(y,...Y)},Zs=y=>{let u=[],P=[...nt,...dt],Y=new Map([[\"alloc\",[Ot,1,127,1,127]],[\"dealloc\",[Ot,1,127,0]],[\"merge\",[Ot,0,0]],[\"save\",[Ot,2,127,127,0]],[\"undo\",[Ot,0,2,127,127]],[\"undoPenultimate\",[Ot,0,2,127,127]],[\"draw\",[Ot,1,127,0]],[\"drawI64\",[Ot,1,126,0]],[\"drawFP32\",[Ot,1,125,0]],[\"drawFP64\",[Ot,1,124,0]],[\"now\",[Ot,0,1,126]]]);for(let W of y)if(Y.has(W))u.push(...Y.get(W));else throw new Error(\"Procedure not found:\",W);for(let W of P){let{description:ye}=W,{inputs:ze,outputs:he}=ye,[xe,Ee]=ft(ze),[we,Ge]=ft(he);u.push(Ot,xe,...Ee,we,...Ge)}let J=P.length|0,w=Nt(J+y.size);return u.unshift(...w),yt(Hl,u),u},Xs=y=>{let u=[];return y&&y.size>0&&(u.push(2),u.push(127,1),u.push(65,0,11),u.push(127,1),u.push(65,0,11),yt(Zl,u)),u},Vt=0,xs=(y,u)=>{let P=[],Y=0,J={};if(s.memory){let ye=xe=>{let Ee=[...xe].map(we=>we.charCodeAt(0));return[Ee.length,...Ee]},ze=[];(u||y.size>0)&&(J.memory={path:\"memory\",description:{inputs:[],outputs:[]}});for(let xe of y)ze.push(ye(xe)),J[xe]={path:xe,description:{inputs:[],outputs:[]}};let he=Array.from(y);for(let xe of y)bt.fill(Hn),vn(Y,bt),P.push(...Zn,...ze[he.indexOf(xe)],hc,he.indexOf(xe)),Y=Y+1|0}for(let ye of nt){bt.fill(Hn),vn(Y,bt);let ze=String.fromCodePoint(...bt);J[ze]={path:ye.path,description:ye.description};let he=Y|0;P.push(...Zn,bt.length|0,...bt,hc,he),Y=Y+1|0}Vt=Y|0,(u||y.size>0)&&(P.push(...Zn,...Xl,vl,...Yl),Y=Y+1|0);let w=Y|0,W=Nt(w);return P.unshift(...W),yt(Gl,P),r.imports=J,P},Ce=()=>{let y=[];var u=dt.length|0;for(let J=0;J<u;J=J+1|0){let w=J|0,W=Vt+w|0,ye=Nt(W);y.push(...ye)}let P=dt.length|0,Y=Nt(P);return y.unshift(...Y),yt(Kl,y),y},Fe=()=>{let y=[],u=0,P={};var Y=dt.length|0;for(let W=0;W<Y;W=W+1|0){let ye=W+Vt|0,ze=Nt(ye);bt.fill(Hn),vn(u,bt);let{name:he,path:xe,description:Ee}=dt[W];Ee={inputs:Ee.inputs,outputs:Ee.outputs};let we=String.fromCodePoint(...bt);P[we]={name:he,path:xe,description:Ee},y.push(bt.length|0,...bt,Wl,...ze),u=u+1|0}let J=u|0,w=Nt(J);return y.unshift(...w),yt(Bl,y),r.procedures=P,y},Dt=()=>{let y=[],u=new Set,P=!1;for(let W of dt){let{totalOctets:ye,nativeImports:ze,loads:he}=Ms(W,e,pe,ce,s);u=new Set([...u,...ze]),he&&!P&&(P=he);let xe=ye.length|0,Ee=Nt(xe);y.push(...Ee,...ye)}let Y=dt.length|0,J=Nt(Y);return y.unshift(...J),yt(Ml,y),y=((W,ye,ze)=>{let he=Array.from(ze),xe=\"artificial\";return W.map(Ee=>{if(typeof Ee==\"string\"){if(Ee.startsWith(xe)){let we=Ee.slice(xe.length),Ge=parseInt(we,10);if(!isNaN(Ge))return Ge+ye}if(he.includes(Ee))return he.indexOf(Ee)}return Ee})})(y,u.size,u),{totalOctets:y,allImports:u,loads:P}},{totalOctets:ge,allImports:Ke,loads:Xn}=Dt(),Ws=Zs(Ke),qe=xs(Ke,Xn),Ie=Ce(),Wn=Xs(Ke),I=Fe(),Xt=new Uint8Array([...$l,...Jl,...Ws,...qe,...Ie,...Wn,...I,...ge]);return[r,Xt]},eu=Object.freeze({compile:Ql}),Qu=eu;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AbXVuZXplcm8vZmxvcGFyc2VyL0NvbXBpbGVycy9TaW1wbGVyV0FTTS9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSwyTUFBMk0sNktBQTZLLFFBQVEsaytCQUFrK0IsNHRDQUE0dEMsUUFBUSxzQkFBc0IsMlNBQTJTLFFBQVEsbURBQW1ELDZCQUE2QixRQUFRLG9LQUFvSyxzQkFBc0IsdU5BQXVOLFFBQVEsc0JBQXNCLHFSQUFxUixRQUFRLDRDQUE0QztBQUMvdEgscUNBQXFDLHlLQUF5SyxRQUFRLGdRQUFnUSxJQUFJLGdDQUFnQyxJQUFJLDJNQUEyTSwrQkFBK0IsRUFBRSxvQkFBb0IsZUFBZSxtQkFBbUIsa0NBQWtDLGtCQUFrQixTQUFTLCtDQUErQywrQkFBK0IsRUFBRSxvQkFBb0IsZUFBZSwyQkFBMkIsK0NBQStDLDBCQUEwQixzQkFBc0IsbUJBQW1CLE1BQU0sRUFBRSxxQkFBcUIsZ0JBQWdCLG9CQUFvQixvQ0FBb0MsU0FBUyxRQUFRLFFBQVEsWUFBWSxLQUFLLHNCQUFzQixTQUFTLFNBQVMsdUZBQXVGLHdDQUF3QyxTQUFTLCtCQUErQixnQkFBZ0IsbUJBQW1CLGtCQUFrQiwwQ0FBMEMsS0FBSyxLQUFLLEVBQUUsV0FBVyxRQUFRLDRFQUE0RSxPQUFPLE1BQU0sU0FBUyxZQUFZLG1DQUFtQyw2RUFBNkUsY0FBYyx1QkFBdUIsS0FBSyw4R0FBOEcsd0VBQXdFLG9CQUFvQixZQUFZLGtDQUFrQyxNQUFNLFNBQVMsTUFBTSxFQUFFLFdBQVcsT0FBTyx3REFBd0QsY0FBYyxVQUFVLE1BQU0saUJBQWlCLFNBQVMsUUFBUSxjQUFjLEtBQUssRUFBRSxFQUFFLFdBQVcsd0RBQXdELFNBQVMsWUFBWSxNQUFNLFlBQVksTUFBTSxFQUFFLGFBQWEsUUFBUSxpQkFBaUIsOEJBQThCLDBCQUEwQixXQUFXLFlBQVksTUFBTSxPQUFPLFNBQVMsWUFBWSxNQUFNLFlBQVksTUFBTSxFQUFFLGFBQWEsUUFBUSxpQkFBaUIsMkJBQTJCLFNBQVMsWUFBWSxNQUFNLE9BQU8sU0FBUyxRQUFRLElBQUksb0JBQW9CLE1BQU0sdUNBQXVDLGdDQUFnQywyQkFBMkIsTUFBTSxZQUFZLGtDQUFrQyxZQUFZLE1BQU0sNkJBQTZCLGdEQUFnRCxzSUFBc0ksU0FBUyxTQUFTLFVBQVUsVUFBVSxlQUFlLGlCQUFpQixpQ0FBaUMsS0FBSyxJQUFJLEVBQUUsOENBQThDLGlCQUFpQixTQUFTLGNBQWMsWUFBWSxLQUFLLFNBQVMsaUJBQWlCLGdEQUFnRCxVQUFVLG9GQUFvRixtQ0FBbUMsT0FBTyxtQkFBbUIsa0NBQWtDLEtBQUssU0FBUyxFQUFFLG1CQUFtQixxQkFBcUIscUJBQXFCLGdEQUFnRCxLQUFLLGVBQWUsRUFBRSw0QkFBNEIseUJBQXlCLFFBQVEsb0NBQW9DLFNBQVMsbUJBQW1CLHFWQUFxVixRQUFRLGlCQUFpQixTQUFTLFVBQVUsZ0JBQWdCLE1BQU0sNEJBQTRCLE1BQU0sZ0JBQWdCLE1BQU0sZ0JBQWdCLE1BQU0sZ0JBQWdCLE1BQU0sZ0JBQWdCLE1BQU0sZUFBZSxNQUFNLGVBQWUsTUFBTSxnQkFBZ0IsTUFBTSxnQkFBZ0IsTUFBTSxnQkFBZ0IsTUFBTSxrQkFBa0IsTUFBTSxnQkFBZ0IsTUFBTSxrQkFBa0IsTUFBTSxrQkFBa0IsTUFBTSxvQkFBb0IsTUFBTSxvQkFBb0IsTUFBTSxvQkFBb0IsTUFBTSxvQkFBb0IsTUFBTSxzQkFBc0IsTUFBTSxzQkFBc0IsTUFBTSxVQUFVLHNCQUFzQiwrREFBK0QsbUJBQW1CLEVBQUUsb0JBQW9CLCtEQUErRCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQixzRkFBc0YsbUJBQW1CLEVBQUUsb0JBQW9CLCtEQUErRCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiwrREFBK0QsbUJBQW1CLEVBQUUsb0JBQW9CLCtEQUErRCxtQkFBbUIsRUFBRSxvQkFBb0Isa0dBQWtHLG1CQUFtQixFQUFFLG9CQUFvQiwrREFBK0QsbUJBQW1CLEVBQUUsb0JBQW9CLCtEQUErRCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiwrREFBK0QsbUJBQW1CLEVBQUUsb0JBQW9CLGtHQUFrRyxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiwrREFBK0QsbUJBQW1CLEVBQUUsb0JBQW9CLCtEQUErRCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiw4RUFBOEUsbUJBQW1CLEVBQUUsb0JBQW9CLCtEQUErRCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiwrREFBK0QsbUJBQW1CLEVBQUUsb0JBQW9CLCtEQUErRCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiwrREFBK0QsbUJBQW1CLEVBQUUsb0JBQW9CLCtEQUErRCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiwwRUFBMEUsbUJBQW1CLEVBQUUsb0JBQW9CLCtEQUErRCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiwrREFBK0QsbUJBQW1CLEVBQUUsb0JBQW9CLCtEQUErRCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiw4REFBOEQsbUJBQW1CLEVBQUUsb0JBQW9CLDhEQUE4RCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiw4REFBOEQsbUJBQW1CLEVBQUUsb0JBQW9CLDhEQUE4RCxtQkFBbUIsRUFBRSxvQkFBb0IsOERBQThELG1CQUFtQixFQUFFLG9CQUFvQiw4REFBOEQsbUJBQW1CLEVBQUUsb0JBQW9CLDhEQUE4RCxtQkFBbUIsRUFBRSxvQkFBb0IsOERBQThELG1CQUFtQixFQUFFLG9CQUFvQiw4REFBOEQsbUJBQW1CLEVBQUUsb0JBQW9CLDhEQUE4RCxtQkFBbUIsRUFBRSxvQkFBb0IsOERBQThELG1CQUFtQixFQUFFLG9CQUFvQiw4REFBOEQsbUJBQW1CLEVBQUUsb0JBQW9CLDhEQUE4RCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiw4REFBOEQsbUJBQW1CLEVBQUUsb0JBQW9CLDhEQUE4RCxtQkFBbUIsRUFBRSxvQkFBb0IsOERBQThELG1CQUFtQixFQUFFLG9CQUFvQiw4REFBOEQsbUJBQW1CLEVBQUUsb0JBQW9CLDhEQUE4RCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiw4REFBOEQsbUJBQW1CLEVBQUUsb0JBQW9CLDhEQUE4RCxtQkFBbUIsRUFBRSxvQkFBb0IsOERBQThELG1CQUFtQixFQUFFLG9CQUFvQiw4REFBOEQsbUJBQW1CLEVBQUUsb0JBQW9CLDhEQUE4RCxtQkFBbUIsRUFBRSxvQkFBb0IsOERBQThELG1CQUFtQixFQUFFLG9CQUFvQiw4REFBOEQsbUJBQW1CLEVBQUUsb0JBQW9CLDhEQUE4RCxtQkFBbUIsRUFBRSxvQkFBb0IsOERBQThELG1CQUFtQixFQUFFLG9CQUFvQiw4REFBOEQsbUJBQW1CLEVBQUUsb0JBQW9CLDhEQUE4RCxtQkFBbUIsRUFBRSxvQkFBb0IsOERBQThELG1CQUFtQixFQUFFLG9CQUFvQiw4REFBOEQsbUJBQW1CLEVBQUUsb0JBQW9CLDhEQUE4RCxtQkFBbUIsRUFBRSxvQkFBb0IsOERBQThELG1CQUFtQixFQUFFLG9CQUFvQiwrREFBK0QsbUJBQW1CLEVBQUUsb0JBQW9CLCtEQUErRCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiw4REFBOEQsbUJBQW1CLEVBQUUsb0JBQW9CLCtEQUErRCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiwrREFBK0QsbUJBQW1CLEVBQUUsb0JBQW9CLCtEQUErRCxtQkFBbUIsRUFBRSxvQkFBb0IsK0RBQStELG1CQUFtQixFQUFFLG9CQUFvQiwrREFB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QWtCLHdCQUF3QixzQkFBc0IsOENBQThDLDJCQUEyQix5Q0FBeUMsVUFBVSxFQUFFLGVBQWUsb0NBQW9DLEVBQUUsc0NBQXNDLDBIQUEwSCxhQUFhLG1CQUFtQixXQUFXLFFBQThCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEpBU09OXFxEZXNrdG9wXFxOZXcgZm9sZGVyXFxub2RlX21vZHVsZXNcXEBtdW5lemVyb1xcZmxvcGFyc2VyXFxDb21waWxlcnNcXFNpbXBsZXJXQVNNXFxpbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9jPVwiYXNcIixPYz1cIj1cIixiYz1cImJyZWFrXCIsZGM9XCJlbHNlXCIsbWM9XCJlbnVtXCIsVGM9XCJleHBvcnRcIixnYz1cImlmXCIseWM9XCJpbXBvcnRcIix4Yz1cIi0+XCIsSWM9XCJpc1wiLEFjPVwibG9vcFwiLE5jPVwibXV0XCIsUmM9XCJuYXRpdmVcIixTYz1cIm9iamVjdFwiLFBjPVwiZm5cIix6Yz1cInJldHVyblwiLGpjPVwic2VsZlwiLENjPVwidGVtcGxhdGVcIixGYz1PYmplY3QuZnJlZXplKHtBTElBUzpfYyxBU1NJR046T2MsQlJFQUs6YmMsRUxTRTpkYyxFTlVNRVJBVElPTjptYyxFWFBPUlQ6VGMsSUY6Z2MsSU1QT1JUOnljLElOVE86eGMsSVM6SWMsTE9PUDpBYyxNVVRBQkxFOk5jLE5BVElWRTpSYyxPQkpFQ1Q6U2MsUFJPQ0VEVVJFOlBjLFJFVFVSTjp6YyxTRUxGOmpjLFRFTVBMQVRFOkNjfSksJG49RmM7dmFyIERjPVwiYXNzaWduXCIsVWM9XCJhcml0eV9tYXRjaFwiLGtjPVwiYXJpdHlfc3RhdHVzXCIsTGM9XCJhcnJheV9hc3NpZ25tZW50XCIsWWM9XCJicmFuY2gtbWF0Y2hcIix3Yz1cImJyYW5jaC1kZWZhdWx0XCIsVmM9XCJjb25kaXRpb25cIix2Yz1cImxvb3BcIixNYz1cImRhdGFcIixCYz1cImdlbmVyaWNzXCIsS2M9XCJlbnVtZXJhdGlvblwiLEdjPVwiZXhwcmVzc2lvblwiLEhjPVwiaW5zdGFuY2VcIixaYz1cIkxpbmtcIixYYz1cImxvY2FsXCIsV2M9XCJvYmplY3RcIixxYz1cInByb2NlZHVyZVwiLCRjPVwicmV0dXJuXCIsSmM9XCJjb21wYXJlXCIsUWM9XCJzZWxlY3RcIixlYT1cIm1lbWJlclwiLHRhPVwic3RvcmVcIixzYT1cImJyZWFrXCIsbmE9XCJsaXRlcmFsXCIsb2E9XCJhcnJheV9hY2Nlc3NcIixjYT1cInZhbHVlTGlua1wiLGFhPVwibGlua1ZhbHVlXCIscmE9XCJzZWxmXCIsaWE9XCJwcm9jZWR1cmUtY2FsbFwiLHBhPVwiTWF5YmVcIixsYT1cIm5hdGl2ZVwiLHVhPVwibW92ZVwiLGZhPVwiU3RyaW5nXCIsaGE9XCJBcnJheVwiLEVhPVwiaW1wb3J0XCIsX2E9XCJsaWJyYXJ5XCIsT2E9XCJjb25zdHJ1Y3RvclwiLGJhPVwiZGVzdHJ1Y3RvclwiLGRhPVwiZnJlZVwiLG1hPVwiYmxvY2stZW5kXCIsVGE9XCJkZWZhdWx0LWJsb2NrXCIsZ2E9XCJjb250aW51ZVwiLHlhPVwiYnJhbmNoXCIseGE9XCJzdGF0ZW1lbnRcIixJYT1cImRyYXdcIixBYT1cIm5vd1wiLE5hPVwic2l6ZVwiLFJhPVwiY29uY2F0ZW5hdGlvblwiLFNhPVwiZm9yZWFjaFwiLFBhPVwid2hpbGVcIix6YT1cIndoZW5cIixqYT1cIndoaWxlLWNvbmRpdGlvblwiLENhPVwiZm9yZWFjaC1jb25kaXRpb25cIixGYT1cImZvcmVhY2gtZW5kXCIsRGE9XCJmb3JcIixVYT1cInVwX3RvXCIsa2E9XCJkb3duX3RvXCIsTGE9XCJhbG1vc3RfdXBfdG9cIixZYT1cImFsbW9zdF9kb3duX3RvXCIsd2E9XCJJMzJcIixWYT1cIlUzMlwiLHZhPVwiRlAzMlwiLE1hPVwiSTE2XCIsQmE9XCJVMTZcIixLYT1cIlU4XCIsR2E9XCJJOFwiLEhhPVwiRlA2NFwiLFphPVwiVTY0XCIsWGE9XCJJNjRcIixXYT1cIkNoYXJcIixxYT1cImJsb2NrLXN0YXJ0XCIsJGE9XCJmdW5jdGlvbi1jYWxsXCIsSmE9XCJCb29sXCIsUWE9T2JqZWN0LmZyZWV6ZSh7VFlQRVNfQVNTSUdOOkRjLFRZUEVTX0FSUkFZOmhhLFRZUEVTX0FSSVRZX01BVENIOlVjLFRZUEVTX0FSSVRZX1NUQVRVUzprYyxUWVBFU19BUlJBWV9BU1NJR05NRU5UOkxjLFRZUEVTX0JSQU5DSF9NQVRDSDpZYyxUWVBFU19CUkFOQ0hfREVGQVVMVDp3YyxUWVBFU19DT05ESVRJT046VmMsVFlQRVNfTE9PUDp2YyxUWVBFU19GT1JFQUNIX0VORDpGYSxUWVBFU19XSElMRV9DT05ESVRJT046amEsVFlQRVNfRk9SRUFDSF9DT05ESVRJT046Q2EsVFlQRVNfREFUQTpNYyxUWVBFU19DT01QQVJFOkpjLFRZUEVTX0dFTkVSSUNTOkJjLFRZUEVTX0VOVU1FUkFUSU9OOktjLFRZUEVTX0VYUFJFU1NJT046R2MsVFlQRVNfSU5TVEFOQ0U6SGMsVFlQRVNfTElOSzpaYyxUWVBFU19JTVBPUlQ6RWEsVFlQRVNfTE9DQUw6WGMsVFlQRVNfT0JKRUNUOldjLFRZUEVTX1BST0NFRFVSRTpxYyxUWVBFU19SRVRVUk46JGMsVFlQRVNfU0VMRUNUOlFjLFRZUEVTX01FTUJFUjplYSxUWVBFU19TVE9SRTp0YSxUWVBFU19CUkVBSzpzYSxUWVBFU19MSVRFUkFMOm5hLFRZUEVTX0FSUkFZX0FDQ0VTUzpvYSxUWVBFU19MSU5LX1RPOmNhLFRZUEVTX1ZBTFVFX0FUOmFhLFRZUEVTX1NFTEY6cmEsVFlQRVNfTElCUkFSWTpfYSxUWVBFU19EUk9QOmlhLFRZUEVTX01BWUJFOnBhLFRZUEVTX05BVElWRTpsYSxUWVBFU19NT1ZFOnVhLFRZUEVTX1NUUklORzpmYSxUWVBFU19DT05TVFJVQ1RPUjpPYSxUWVBFU19GUkVFOmRhLFRZUEVTX0RFRkFVTFRfQkxPQ0s6VGEsVFlQRVNfQkxPQ0tfRU5EOm1hLFRZUEVTX0NPTlRJTlVFOmdhLFRZUEVTX0JSQU5DSDp5YSxUWVBFU19TVEFURU1FTlQ6eGEsVFlQRVNfREVTVFJVQ1RPUjpiYSxUWVBFU19EUkFXOklhLFRZUEVTX05PVzpBYSxUWVBFU19TSVpFOk5hLFRZUEVTX0NPTkNBVDpSYSxUWVBFU19GT1JFQUNIOlNhLFRZUEVTX1dISUxFOlBhLFRZUEVTX1dIRU46emEsVFlQRVNfRk9SOkRhLFRZUEVTX1VQX1RPOlVhLFRZUEVTX0RPV05fVE86a2EsVFlQRVNfQUxNT1NUX1VQX1RPOkxhLFRZUEVTX0FMTU9TVF9ET1dOX1RPOllhLFRZUEVTX0kzMjp3YSxUWVBFU19GUDMyOnZhLFRZUEVTX0ZQNjQ6SGEsVFlQRVNfVTMyOlZhLFRZUEVTX0k2NDpYYSxUWVBFU19VNjQ6WmEsVFlQRVNfSTE2Ok1hLFRZUEVTX1UxNjpCYSxUWVBFU19JODpHYSxUWVBFU19VODpLYSxUWVBFU19DSEFSOldhLFRZUEVTX0JPT0w6SmEsVFlQRVNfQkxPQ0tfQkVHSU46cWEsVFlQRVNfRlVOQ1RJT05fQ0FMTDokYX0pLHRuPVFhO3ZhciBlcj1PYmplY3QuZnJlZXplKHtDT0xPTjo1OCxDT01NQTo0NCxESUdJVF9aRVJPOjQ4LERJR0lUX05JTkU6NTcsRE9UOjQ2LEhBU0hUQUc6MzUsSE9SSVpPTlRBTF9UQUI6OSxIWVBIRU5fTUlOVVM6NDUsTEVGVF9DVVJMWV9CUkFDS0VUOjEyMyxMRUZUX1BBUkVOVEhFU0lTOjQwLExFRlRfU1FVQVJFX0JSQUNLRVQ6OTEsTElORV9CUkVBSzoxMCxOVUxMOjAsUExVU19TSUdOOjQzLFJJR0hUX0NVUkxZX0JSQUNLRVQ6MTI1LFJJR0hUX1BBUkVOVEhFU0lTOjQxLFJJR0hUX1NRVUFSRV9CUkFDS0VUOjkzLFNFTUlDT0xPTjo1OSxTUEFDRTozMixFX1NJR046MTAxfSksSm49ZXI7dmFyIHRyPVwiYXNzaWdubWVudFwiLHNyPVwiRmxvZ3JhbVwiLG5yPU9iamVjdC5mcmVlemUoe0tfQVNTSUdOTUVOVDp0cixLX0ZMT0dSQU06c3J9KSxRbj1ucjt2YXIgb3I9T2JqZWN0LmZyZWV6ZShbWzQzXSxbNDVdLFs0Ml0sWzQ3XSxbMzddLFsxMTAsMTExLDExNl0sWzYwXSxbNjJdLFs5NF0sWzExMSwxMTRdLFszM10sWzYxLDYxXSxbNjAsNjFdLFs2Miw2MV0sWzMzLDYxXSxbMTIwLDExMSwxMTRdLFs5NywxMTAsMTAwXV0pLGNyPW9yLGVvPWNyO3ZhciBhcj1PYmplY3QuZnJlZXplKHtJTlRfQVJSQVlfU1RBUlQ6OTk5OTk5MSxGTE9BVF9BUlJBWV9TVEFSVDo5OTk5OTgxLFNUUklOR19TVEFSVDo4ODg4ODkxLENIQVJfU1RBUlQ6ODg4ODg4MSxOQVRfT05fSE9SSVpPTjo3Nzc3NzkxLEJJR19OQVRfT05fSE9SSVpPTjo3Nzc3NTkxLEZMT0FUX09OX0hPUklaT046Nzc3Nzc3MSxCSUdfRkxPQVRfT05fSE9SSVpPTjo3Nzc3NzMxLEVORF9PRl9MSU5FOjY2NjY2NjYxfSksdG89YXI7dmFyIHJyPU9iamVjdC5mcmVlemUoe0VOVU1fTUVNT1JZX1NJWkU6MTIsRU5VTV9TVEFDS19TSVpFOjMsQVJSQVlfTUVNT1JZX1NJWkU6MTIsQVJSQVlfU1RBQ0tfU0laRTozLEFSUkFZX0RFRkFVTFRfQ0FQQUNJVFk6NCxTVFJJTkdfTUVNT1JZX1NJWkU6OCxTVFJJTkdfU1RBQ0tfU0laRToyLE9CSkVDVF9NRU1PUllfU0laRTo4LE9CSkVDVF9TVEFDS19TSVpFOjIsTkFUSVZFX01FTU9SWV9TSVpFOjQsTkFUSVZFX1NUQUNLX1NJWkU6MSxOQVRJVkVfU0laRTo0LFNURVA6NCxET1VCTEVfU1RFUDo4LFRSSVBQTEVfU1RFUDoxMn0pLHNvPXJyO3ZhciBpcj1PYmplY3QuZnJlZXplKFtdKSxwcj1PYmplY3QuZnJlZXplKHt9KSxscj1cIlwiLHVyPVwiXHRcIixmcj1gXG5gLGhyPVwiVVRGLThcIixOcz10bixFcj1PYmplY3QuZnJlZXplKHtFTVBUWV9BUlJBWTppcixFTVBUWV9PQkpFQ1Q6cHIsRU1QVFlfU1RSSU5HOmxyLEhPUklaT05UQUxfVEFCOnVyLExJTkVfQlJFQUs6ZnIsVU5JQ09ERV9URVhUOmhyLENvZGVzOkpuLEtleXM6JG4sVHlwZXM6dG4sS2V5d29yZHM6UW4sT3BlcmF0b3JzOmVvLERyYXdTdGF0ZXM6dG8sU2l6ZXM6c299KSxSdD1Fcjt2YXIgX3I9T2JqZWN0LmZyZWV6ZShbXCJGUDY0XCIsXCJVNjRcIixcIkk2NFwiLFwiRlAzMlwiLFwiVTMyXCIsXCJJMzJcIixcIlUxNlwiLFwiSTE2XCIsXCJVOFwiLFwiSThcIixcIkJvb2xcIixcIkNoYXJcIixcIkFycmF5XCIsXCJTdHJpbmdcIixcIkxpbmtcIixcIk1heWJlXCJdKSxxdD1bXCJVOFwiLFwiVTE2XCIsXCJVMzJcIl0scHM9Wy4uLnF0LFwiSThcIixcIkkxNlwiLFwiSTMyXCJdLHNuPVtcIkk2NFwiLFwiVTY0XCJdLGxzPVsuLi5wcywuLi5zbl0sUnM9W1wiRlAzMlwiLFwiRlA2NFwiXSx1cz1bLi4ubHMsLi4uUnNdLGZzPV9yO3ZhcntFTVBUWV9TVFJJTkc6T3IsVU5JQ09ERV9URVhUOmFufT1SdDt2YXIgYnI9NDgsZHI9NTcsbXI9NDYsbm89NDUsb289NDMsVHI9NjUsZ3I9OTAseXI9XCJlXCIuY2hhckNvZGVBdCgwKSx4cj1cIkVcIi5jaGFyQ29kZUF0KDApLElyPS0xLEFyPTEsY289bmV3IFRleHREZWNvZGVyKGFuKSxOcj1uZXcgVGV4dEVuY29kZXIsUnI9UnQuT3BlcmF0b3JzLFNyPShjLHMscj0wLGg9Yy5sZW5ndGh8MCxEPTAsY2U9cy5sZW5ndGh8MCk9Pntmb3IoRD1EfDAscj1yfDAsY2U9Y2V8MCxoPWh8MDs7KXtsZXQgZT1yPj1oLHBlPUQ+PWNlO2lmKGV8fHBlKWJyZWFrO2xldCBPZT1jW3JdLCQ9c1tEXTtpZihyPXIrMXwwLEQ9RCsxfDAsT2U8JClyZXR1cm4gSXI7aWYoT2U+JClyZXR1cm4gQXJ9cmV0dXJuIDB9LFByPShjLHMscj0wLGg9Yy5sZW5ndGh8MCxEPTAsY2U9cy5sZW5ndGh8MCk9Pntmb3IoRD1EfDAscj1yfDAsY2U9Y2V8MCxoPWh8MDs7KXtsZXQgZT1EPj1jZSxwZT1yPj1oO2lmKGV8fHBlKWJyZWFrO3NbRF09Y1tyXSxEPUQrMXwwLHI9cisxfDB9fSxpbz0oYyxzLHI9MCxoPWMubGVuZ3RofDAsRD0wLGNlPXMubGVuZ3RofDApPT57cj1yfDAsRD1EfDAsaD1ofDAsY2U9Y2V8MDtsZXQgZT1oLXJ8MCxwZT1jZS1EfDA7aWYoZSE9PXBlKXJldHVybiExO2Zvcig7Oyl7bGV0IG1lPXI+PWgsT2U9RD49Y2U7aWYobWV8fE9lKWJyZWFrO2xldCBSZT1jW3JdLGx0PXNbRF07aWYocj1yKzF8MCxEPUQrMXwwLFJlIT09bHQpcmV0dXJuITF9cmV0dXJuITB9LHpyPWM9PntjPWM+Pj4wO2xldCBzPTAscj0wO2Zvcig7cj0ocjw8MXwxKT4+PjAsIShyPmMpOylzPXMrMXwwO3JldHVybiBzfSxwbz1PYmplY3QuZnJlZXplKFs0OCw0OSw1MCw1MSw1Miw1Myw1NCw1NSw1Niw1Nyw5Nyw5OCw5OSwxMDAsMTAxLDEwMl0pLGNuPShjLHMscixoKT0+e2ZvcihjPWM+Pj4wLGg9aD8/cy5sZW5ndGh8MCxyPXJ8MCxoPWh8MDtjPjAmJmg+cjspaD1oLTF8MCxzW2hdPXBvW2MmMTVdLGM9Yz4+PjR9LGpyPShjLHMscixoKT0+e2xldCBEPXJ8MCxjZT1yK2h8MDtpZihoPT09MClyZXR1cm4hMTtsZXQgZT0hMSxwZT0hMSxtZT0hMSxPZT0kPT4kPT09b298fCQ9PT1ubztmb3IoO0Q8Y2U7KXtsZXQgJD1zW0RdO0Q9RCsxfDA7bGV0IFJlPWJyPD0kJiYkPD1kcixsdD1vbz09PSR8fCQ9PT1ubyx1dD1tcj09PSQsWWU9QnI9PT0kLG50PSQ9PT15cnx8JD09PXhyO2lmKFJlKXttZT0hMDtjb250aW51ZX1lbHNlIGlmKGx0KXtpZigoRD09PXIrMXx8ZSYmIXBlKSYmIW1lKWNvbnRpbnVlfWVsc2UgaWYoKFllfHx1dCkmJiFlJiYhcGV8fG50JiYhZSludCYmKGU9ITAsRDxjZSYmT2Uoc1tEXSkmJihEPUQrMXwwLHBlPSEwKSk7ZWxzZSByZXR1cm4hMX1yZXR1cm4gbWUmJighZXx8ZSYmcGUpfSxDcj17STg6Wy4uLnBzXSxVODpbLi4ucXRdLEkxNjpbLi4ucHNdLFUxNjpbLi4ucXRdLEkzMjpbLi4ucHNdLFUzMjpbLi4ucXRdLEk2NDpbLi4ubHNdLFU2NDpbLi4ucXRdLEZQMzI6dXMsRlA2NDp1c30sRnI9KGMscyk9PiF1cy5pbmNsdWRlcyhjKXx8IXVzLmluY2x1ZGVzKHMpPyExOkNyW2NdLmluY2x1ZGVzKHMpLERyPWM9PntsZXQgcz1jPj1UcixyPWM8PWdyO3JldHVybiBzJiZyfSxQcz0xMjgsenM9MTI3LGxvPS0xLCR0PTY0LHJuPWM9PntjPWN8MDtsZXQgcz1bXTtmb3IoOzspe2xldCByPWMmenM7Yz1jPj43O2xldCBoPWM9PT0wLEQ9KHImJHQpPT09MCxjZT1oJiZELGU9Yz09PS0xLHBlPShyJiR0KSE9PTA7aWYoY2V8fGUmJnBlKXtzLnB1c2gocik7YnJlYWt9cj1yfFBzLHMucHVzaChyKX1yZXR1cm4gc30sVXI9Yz0+e2xldCBzPVtdLHI9ITA7Zm9yKDtyOyl7bGV0IGg9YyZ6cztjPj49NyxjPT09MCYmIShoJiR0KXx8Yz09PS0xJiZoJiR0P3I9ITE6aHw9UHMscy5wdXNoKGgpfXJldHVybiBzfSx1bz0oYyxzKT0+e3M9c3wwO2xldCByPTAsaD0wO2Zvcig7Oyl7bGV0IEQ9Y1tzXXwwO3M9cysxfDA7bGV0IGNlPShEJnpzKTw8aDtpZihoPWgrN3wwLHI9cnxjZSwoRCZQcyk9PT0wKXtsZXQgcGU9KEQmJHQpIT09MCxtZT1oPDMyO2lmKHBlJiZtZSl7bGV0ICQ9bG88PGg7cj1yfCR9YnJlYWt9fXJldHVybiByfSxrcj0oYyxzKT0+e3M9c3wwO2xldCByPTAsaD0wO2Zvcig7Oyl7bGV0IEQ9Y1tzXXwwO3M9cysxfDA7bGV0IGNlPShEJnpzKTw8aDtpZihoPWgrN3wwLHI9cnxjZSwhKEQmUHMpKXtpZihEJiR0KXtsZXQgZT1sbzw8aDtyPXJ8ZX1icmVha319cmV0dXJuIHJ9LExyPWM9Pnt0cnl7cmV0dXJuIGNvLmRlY29kZShjKX1jYXRjaHtyZXR1cm4gY28uZGVjb2RlKG5ldyBVaW50OEFycmF5KFtjXSkpfX0sWXI9Yz0+TnIuZW5jb2RlKGMpLHdyPShjPU9yKT0+e2xldCBzPWMubGVuZ3RofDAscj1ybihzKSxoPUJ1ZmZlci5mcm9tKGMsYW4pO3JldHVybiBPYmplY3QuZnJlZXplKFsuLi5yLC4uLmhdKX0sVnI9KGMscyk9PntzPXN8MDtsZXQgcj11byhjLHMpLGg9cm4ocikubGVuZ3RoO3JldHVybiBzPXMraHwwLGMuc3ViYXJyYXkocyxzK3J8MCkudG9TdHJpbmcoYW4pfSx2cj01OCxNcj00NixCcj05NSxocz0zMixubj00OCxLcj02NyxVdD1uZXcgVWludDhBcnJheShLciksYW89VXQuc3ViYXJyYXkoMCw4KSxTcz1VdC5zdWJhcnJheSgxMCw0OSkscm89VXQuc3ViYXJyYXkoNTEsNjgpLG9uPTE2LEdyPTI7VXRbOF09dnI7VXRbOV09aHM7VXRbNDldPWhzO1V0WzUwXT1oczt2YXIgSHI9KGMscyk9PntzPXM/P2NvbnNvbGUubG9nO2xldCByPTMyLGg9MTI2LEQ9Yy5sZW5ndGh8MCxjZT0wO2Zvcig7RD4wOyl7YW8uZmlsbChubiksY24oY2UsYW8pLFNzLmZpbGwoaHMpLHJvLmZpbGwoaHMpO2xldCBlPUQ+PW9uP29uOkQ7RD1ELW9ufDA7bGV0IHBlPTAsbWU9MDtmb3IobGV0ICQ9MTskPD1lOyQ9JCsxfDApe2xldCBSZT1jW2NlXSYyNTU7U3NbcGUrMHwwXT1ubixTc1twZSsxfDBdPW5uLGNuKFJlLFNzLHBlLHBlKzJ8MCk7bGV0IGx0PU1yO3I8PVJlJiZSZTw9aCYmKGx0PVJlKSxyb1ttZV09bHQsY2U9Y2UrMXwwLHBlPXBlKzJ8MCxtZT1tZSsxfDAsJCVHcj09PTAmJihwZT1wZSsxfDApfWxldCBPZT1TdHJpbmcuZnJvbUNvZGVQb2ludCguLi5VdCk7cyhPZSl9fSxacj1mdW5jdGlvbiooYyxzKXtsZXQgcj1jLmxlbmd0aHwwLGg9cy5sZW5ndGh8MCxEPTA7Zm9yKDtEPHImJkQ8aDspe2xldCBjZT1jW0RdLGU9c1tEXTt5aWVsZFtjZSxlXSxEPUQrMXwwfX0sWHI9ZnVuY3Rpb24qKGMscyxyKXtsZXQgaD1jLmxlbmd0aHwwLEQ9cy5sZW5ndGh8MCxjZT1yLmxlbmd0aHwwLGU9MDtmb3IoO2U8aCYmZTxEJiZlPGNlOyl7bGV0IHBlPWNbZV0sbWU9c1tlXSxPZT1yW2VdO3lpZWxkW3BlLG1lLE9lXSxlPWUrMXwwfX0sV3I9Yz0+e2ZvcihsZXQgcyBvZiBScilpZihpbyhjLHMpKXJldHVybiEwO3JldHVybiExfSxxcj1PYmplY3QuZnJlZXplKHtBUlJBWV9DT01QQVJFOlNyLEFSUkFZX0NPUFk6UHIsQVJSQVlfRVFVQUw6aW8sQklUX0RFUFRIOnpyLEhFWF9ESUdJVFM6cG8sSEVYX0VOQ09ERTpjbixJU19OVU1CRVI6anIsSVNfVVBQRVJDQVNFOkRyLElTX1ZBTElEX0FVVE9fQ0FTVDpGcixMRUIxMjhfREVDT0RFOnVvLExFQjEyOF9ERUNPREVfU0lHTkVEOmtyLExFQjEyOF9FTkNPREU6cm4sTEVCMTI4X0VOQ09ERV9TSUdORUQ6VXIsVVRGOF9ERUNPREU6THIsVVRGOF9FTkNPREU6WXIsV0FTTV9TVFJJTkdfRU5DT0RFOndyLFdBU01fU1RSSU5HX0RFQ09ERTpWcixYWERfRFVNUF9IRVg6SHIsWklQMjpacixaSVAzOlhyLElTX09QRVJBVE9SOldyfSksSnQ9cXI7dmFyIGN0PShjLHM9Mik9PntsZXQgcj1cIlwiO3N3aXRjaChjKXtjYXNlXCIrXCI6cj1cImFkZFwiO2JyZWFrO2Nhc2VcIi1cIjpyPXM9PT0yP1wic3ViXCI6XCJuZWdcIjticmVhaztjYXNlXCIqXCI6cj1cIm11bFwiO2JyZWFrO2Nhc2VcIi9cIjpyPVwiZGl2XCI7YnJlYWs7Y2FzZVwiJVwiOnI9XCJyZW1cIjticmVhaztjYXNlXCI9PVwiOnI9XCJlcVwiO2JyZWFrO2Nhc2VcIj5cIjpyPVwiZ3RcIjticmVhaztjYXNlXCI8XCI6cj1cImx0XCI7YnJlYWs7Y2FzZVwiPj1cIjpyPVwiZ2VcIjticmVhaztjYXNlXCI8PVwiOnI9XCJsZVwiO2JyZWFrO2Nhc2VcIiE9XCI6cj1cIm5lXCI7YnJlYWs7Y2FzZVwiYW5kXCI6cj1cImFuZFwiO2JyZWFrO2Nhc2VcIm9yXCI6cj1cIm9yXCI7YnJlYWs7Y2FzZVwieG9yXCI6cj1cInhvclwiO2JyZWFrO2Nhc2VcIm5vdFwiOnI9XCJub3RcIjticmVhaztjYXNlXCJJMzJcIjpyPVwidG9pMzJcIjticmVhaztjYXNlXCJVMzJcIjpyPVwidG91MzJcIjticmVhaztjYXNlXCJJNjRcIjpyPVwidG9pNjRcIjticmVhaztjYXNlXCJVNjRcIjpyPVwidG91NjRcIjticmVhaztjYXNlXCJGUDY0XCI6cj1cInRvZnA2NFwiO2JyZWFrO2Nhc2VcIkZQMzJcIjpyPVwidG9mcDMyXCI7YnJlYWt9cmV0dXJuIHJ9O3ZhciAkcj1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxNjBdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksSnI9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTYzXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLFFyPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzE2Ml0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxlaT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs2OCwwLDAsMCwwLDAsMCwyNDAsMTkxLDE2Ml0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjEsb3V0cHV0czoxfSl9KSx0aT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxNjFdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksc2k9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTI0XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLG5pPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzEyOF0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxvaT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxMjZdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksY2k9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbNjYsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwxMjZdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoxLG91dHB1dHM6MX0pfSksYWk9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTI1XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLHJpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzEyNF0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxpaT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxMjddKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSkscGk9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTI2XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLHh1PU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzY2LDI1NSwyNTUsMjU1LDI1NSwyNTUsMjU1LDI1NSwyNTUsMTI2XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLGxpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzEyNV0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxmbz1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxNDZdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksaG89T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTQ5XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLEVvPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzE0OF0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSx1aT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs2NywwLDAsMTI4LDE5MSwxNDhdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksX289T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTQwXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLHBuPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzEwNl0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxsbj1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxMTBdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksdW49T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTA4XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLGZuPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzEwN10pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxobj1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxMDZdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksRW49T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTA5XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLF9uPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzEwOF0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxPbj1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs2NSwxLDAsMCwwLDEwOF0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjEsb3V0cHV0czoxfSl9KSxibj1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxMDddKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksZmk9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTMwXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLGhpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzEyOV0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxkbj1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxMTJdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksbW49T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTExXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLEVpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzg2XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLF9pPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzg1XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLE9pPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzEwMF0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxqcz1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs3NV0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxUbj1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs3NF0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxiaT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs5NF0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxkaT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs4NF0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxtaT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs4M10pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxUaT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs5OV0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxDcz1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs3M10pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxnbj1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs3Ml0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxnaT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs5M10pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSx5aT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs4N10pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSx4aT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFs4OF0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSxJaT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxMDFdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSkseW49T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbNzZdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksRnM9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbNzddKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksQWk9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbOTVdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksTmk9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbODldKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksUmk9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbOTBdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksU2k9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTAyXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLHhuPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzc4XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLERzPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzc5XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLFBpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzk2XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLHppPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzgxXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLGppPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzgxXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLENpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzk3XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLEluPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzcwXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLEVzPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzcwXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLEZpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzkxXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLERpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzgyXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLFVpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzgyXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLGtpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzk4XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLF9zPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzcxXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLEFuPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzcxXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLExpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzkyXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLFlpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzExM10pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjIsb3V0cHV0czoxfSl9KSx3aT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxMTRdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoyLG91dHB1dHM6MX0pfSksVmk9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTE1XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MixvdXRwdXRzOjF9KX0pLHZpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzY5XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MSxvdXRwdXRzOjF9KX0pLE9vPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzE2N10pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjEsb3V0cHV0czoxfSl9KSxibz1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxNjddKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoxLG91dHB1dHM6MX0pfSksTWk9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTcwXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MSxvdXRwdXRzOjF9KX0pLEJpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzE3MV0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjEsb3V0cHV0czoxfSl9KSxLaT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxNjhdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoxLG91dHB1dHM6MX0pfSksR2k9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTY5XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MSxvdXRwdXRzOjF9KX0pLG1vPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoW10pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjEsb3V0cHV0czoxfSl9KSxVcz1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxOTNdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoxLG91dHB1dHM6MX0pfSksa3M9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTkyXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MSxvdXRwdXRzOjF9KX0pLEhpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoW10pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjEsb3V0cHV0czoxfSl9KSxaaT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFtdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoxLG91dHB1dHM6MX0pfSksWGk9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTc2XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MSxvdXRwdXRzOjF9KX0pLFdpPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzE3N10pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjEsb3V0cHV0czoxfSl9KSxxaT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxNzVdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoxLG91dHB1dHM6MX0pfSksJGk9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTc0XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MSxvdXRwdXRzOjF9KX0pLEppPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzE3Ml0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjEsb3V0cHV0czoxfSl9KSxRaT1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxOTZdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoxLG91dHB1dHM6MX0pfSksZXA9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTczXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MSxvdXRwdXRzOjF9KX0pLHRwPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzE5Nl0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjEsb3V0cHV0czoxfSl9KSxUbz1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxOTVdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoxLG91dHB1dHM6MX0pfSksZ289T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTk1XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MSxvdXRwdXRzOjF9KX0pLHlvPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzE5NF0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjEsb3V0cHV0czoxfSl9KSx4bz1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxOTRdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoxLG91dHB1dHM6MX0pfSksc3A9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTg1XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MSxvdXRwdXRzOjF9KX0pLG5wPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzE4Nl0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjEsb3V0cHV0czoxfSl9KSxObj1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxODNdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoxLG91dHB1dHM6MX0pfSksUm49T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTg0XSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MSxvdXRwdXRzOjF9KX0pLG9wPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzE4N10pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjEsb3V0cHV0czoxfSl9KSxjcD1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxODBdKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoxLG91dHB1dHM6MX0pfSksYXA9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTgxXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MSxvdXRwdXRzOjF9KX0pLFNuPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixib2R5Ok9iamVjdC5mcmVlemUoWzE3OF0pLGxlbmd0aHM6T2JqZWN0LmZyZWV6ZSh7aW5wdXRzOjEsb3V0cHV0czoxfSl9KSxQbj1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsYm9keTpPYmplY3QuZnJlZXplKFsxNzldKSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czoxLG91dHB1dHM6MX0pfSkscnA9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGJvZHk6T2JqZWN0LmZyZWV6ZShbMTgyXSksbGVuZ3RoczpPYmplY3QuZnJlZXplKHtpbnB1dHM6MSxvdXRwdXRzOjF9KX0pLE9zPU9iamVjdC5mcmVlemUoT2JqZWN0LmFzc2lnbih7XCJGbG9ncmFtLi9cIjpobyxcIkZsb2dyYW0uKlwiOkVvLFwiRmxvZ3JhbS4rXCI6Zm8sXCJGbG9ncmFtLi1cIjpfb30se1wiRmxvZ3JhbS5mcDY0LmRpdlwiOkpyLFwiRmxvZ3JhbS5mcDY0Lm11bFwiOlFyLFwiRmxvZ3JhbS5mcDY0LmFkZFwiOiRyLFwiRmxvZ3JhbS5mcDY0LnN1YlwiOnRpLFwiRmxvZ3JhbS5mcDY0Lm5lZ1wiOmVpLFwiRmxvZ3JhbS5mcDY0Lmd0XCI6T2ksXCJGbG9ncmFtLmZwNjQubHRcIjpUaSxcIkZsb2dyYW0uZnA2NC5sZVwiOklpLFwiRmxvZ3JhbS5mcDY0LmdlXCI6U2ksXCJGbG9ncmFtLmZwNjQubmVcIjpraSxcIkZsb2dyYW0uZnA2NC5lcVwiOkNpLFwiRmxvZ3JhbS5mcDY0LnRvaTMyXCI6TWksXCJGbG9ncmFtLmZwNjQudG91MzJcIjpCaSxcIkZsb2dyYW0uZnA2NC50b3U2NFwiOldpLFwiRmxvZ3JhbS5mcDY0LnRvaTY0XCI6WGksXCJGbG9ncmFtLmZwNjQudG9mcDMyXCI6cnB9LHtcIkZsb2dyYW0udTY0LmFkZFwiOnNpLFwiRmxvZ3JhbS51NjQuc3ViXCI6YWksXCJGbG9ncmFtLnU2NC5tdWxcIjpvaSxcIkZsb2dyYW0udTY0LmRpdlwiOm5pLFwiRmxvZ3JhbS51NjQucmVtXCI6ZmksXCJGbG9ncmFtLnU2NC5ndFwiOkVpLFwiRmxvZ3JhbS51NjQubHRcIjpkaSxcIkZsb2dyYW0udTY0LmxlXCI6eGksXCJGbG9ncmFtLnU2NC5nZVwiOlJpLFwiRmxvZ3JhbS51NjQubmVcIjpVaSxcIkZsb2dyYW0udTY0LmVxXCI6amksXCJGbG9ncmFtLnU2NC50b2kzMlwiOmJvLFwiRmxvZ3JhbS51NjQudG91MzJcIjpibyxcIkZsb2dyYW0udTY0LnRvaTY0XCI6SGksXCJGbG9ncmFtLnU2NC50b2ZwMzJcIjphcCxcIkZsb2dyYW0udTY0LnRvZnA2NFwiOm5wfSx7XCJGbG9ncmFtLmk2NC5hZGRcIjpyaSxcIkZsb2dyYW0uaTY0LnN1YlwiOmxpLFwiRmxvZ3JhbS5pNjQubmVnXCI6Y2ksXCJGbG9ncmFtLmk2NC5tdWxcIjpwaSxcIkZsb2dyYW0uaTY0LmRpdlwiOmlpLFwiRmxvZ3JhbS5pNjQucmVtXCI6aGksXCJGbG9ncmFtLmk2NC5ndFwiOl9pLFwiRmxvZ3JhbS5pNjQubHRcIjptaSxcIkZsb2dyYW0uaTY0LmxlXCI6eWksXCJGbG9ncmFtLmk2NC5nZVwiOk5pLFwiRmxvZ3JhbS5pNjQubmVcIjpEaSxcIkZsb2dyYW0uaTY0LmVxXCI6emksXCJGbG9ncmFtLmk2NC50b2kzMlwiOk9vLFwiRmxvZ3JhbS5pNjQudG91MzJcIjpPbyxcIkZsb2dyYW0uaTY0LnRvdTY0XCI6WmksXCJGbG9ncmFtLmk2NC50b2ZwMzJcIjpjcCxcIkZsb2dyYW0uaTY0LnRvZnA2NFwiOnNwfSx7XCJGbG9ncmFtLmZwMzIuZGl2XCI6aG8sXCJGbG9ncmFtLmZwMzIubXVsXCI6RW8sXCJGbG9ncmFtLmZwMzIuYWRkXCI6Zm8sXCJGbG9ncmFtLmZwMzIuc3ViXCI6X28sXCJGbG9ncmFtLmZwMzIubmVnXCI6dWksXCJGbG9ncmFtLmZwMzIuZ3RcIjpiaSxcIkZsb2dyYW0uZnAzMi5sdFwiOmdpLFwiRmxvZ3JhbS5mcDMyLmxlXCI6QWksXCJGbG9ncmFtLmZwMzIuZ2VcIjpQaSxcIkZsb2dyYW0uZnAzMi5uZVwiOkxpLFwiRmxvZ3JhbS5mcDMyLmVxXCI6RmksXCJGbG9ncmFtLmZwMzIudG9pMzJcIjpLaSxcIkZsb2dyYW0uZnAzMi50b3UzMlwiOkdpLFwiRmxvZ3JhbS5mcDMyLnRvdTY0XCI6cWksXCJGbG9ncmFtLmZwMzIudG9pNjRcIjokaSxcIkZsb2dyYW0uZnAzMi50b2ZwNjRcIjpvcH0se1wiRmxvZ3JhbS51MzIuYWRkXCI6cG4sXCJGbG9ncmFtLnUzMi5zdWJcIjpmbixcIkZsb2dyYW0udTMyLm11bFwiOnVuLFwiRmxvZ3JhbS51MzIuZGl2XCI6bG4sXCJGbG9ncmFtLnUzMi5yZW1cIjpkbixcIkZsb2dyYW0udTMyLmd0XCI6anMsXCJGbG9ncmFtLnUzMi5sdFwiOkNzLFwiRmxvZ3JhbS51MzIubGVcIjpGcyxcIkZsb2dyYW0udTMyLmdlXCI6RHMsXCJGbG9ncmFtLnUzMi5uZVwiOkFuLFwiRmxvZ3JhbS51MzIuZXFcIjpFcyxcIkZsb2dyYW0udTMyLnRvaTMyXCI6bW8sXCJGbG9ncmFtLnUzMi50b2k2NFwiOmVwLFwiRmxvZ3JhbS51MzIudG91NjRcIjp0cCxcIkZsb2dyYW0udTMyLnRvZnAzMlwiOlBuLFwiRmxvZ3JhbS51MzIudG9mcDY0XCI6Um59LHtcIkZsb2dyYW0uaTMyLmFkZFwiOmhuLFwiRmxvZ3JhbS5pMzIuc3ViXCI6Ym4sXCJGbG9ncmFtLmkzMi5uZWdcIjpPbixcIkZsb2dyYW0uaTMyLm11bFwiOl9uLFwiRmxvZ3JhbS5pMzIuZGl2XCI6RW4sXCJGbG9ncmFtLmkzMi5yZW1cIjptbixcIkZsb2dyYW0uaTMyLmd0XCI6VG4sXCJGbG9ncmFtLmkzMi5sdFwiOmduLFwiRmxvZ3JhbS5pMzIubGVcIjp5bixcIkZsb2dyYW0uaTMyLmdlXCI6eG4sXCJGbG9ncmFtLmkzMi5uZVwiOl9zLFwiRmxvZ3JhbS5pMzIuZXFcIjpJbixcIkZsb2dyYW0uaTMyLnRvaTY0XCI6SmksXCJGbG9ncmFtLmkzMi50b3U2NFwiOlFpLFwiRmxvZ3JhbS5pMzIudG91MzJcIjptbyxcIkZsb2dyYW0uaTMyLnRvZnAzMlwiOlNuLFwiRmxvZ3JhbS5pMzIudG9mcDY0XCI6Tm59LHtcIkZsb2dyYW0uaTE2LmFkZFwiOmhuLFwiRmxvZ3JhbS5pMTYuc3ViXCI6Ym4sXCJGbG9ncmFtLmkxNi5uZWdcIjpPbixcIkZsb2dyYW0uaTE2Lm11bFwiOl9uLFwiRmxvZ3JhbS5pMTYuZGl2XCI6RW4sXCJGbG9ncmFtLmkxNi5yZW1cIjptbixcIkZsb2dyYW0uaTE2Lmd0XCI6VG4sXCJGbG9ncmFtLmkxNi5sdFwiOmduLFwiRmxvZ3JhbS5pMTYubGVcIjp5bixcIkZsb2dyYW0uaTE2LmdlXCI6eG4sXCJGbG9ncmFtLmkxNi5uZVwiOl9zLFwiRmxvZ3JhbS5pMTYuZXFcIjpJbixcIkZsb2dyYW0uaTE2LnRvaTMyXCI6VXMsXCJGbG9ncmFtLmkxNi50b3UzMlwiOlVzLFwiRmxvZ3JhbS5pMTYudG9pNjRcIjpUbyxcIkZsb2dyYW0uaTE2LnRvdTY0XCI6Z28sXCJGbG9ncmFtLmkxNi50b2ZwMzJcIjpTbixcIkZsb2dyYW0uaTE2LnRvZnA2NFwiOk5ufSx7XCJGbG9ncmFtLnUxNi5hZGRcIjpwbixcIkZsb2dyYW0udTE2LnN1YlwiOmZuLFwiRmxvZ3JhbS51MTYubXVsXCI6dW4sXCJGbG9ncmFtLnUxNi5kaXZcIjpsbixcIkZsb2dyYW0udTE2LnJlbVwiOmRuLFwiRmxvZ3JhbS51MTYuZ3RcIjpqcyxcIkZsb2dyYW0udTE2Lmx0XCI6Q3MsXCJGbG9ncmFtLnUxNi5sZVwiOkZzLFwiRmxvZ3JhbS51MTYuZ2VcIjpEcyxcIkZsb2dyYW0udTE2Lm5lXCI6QW4sXCJGbG9ncmFtLnUxNi5lcVwiOkVzLFwiRmxvZ3JhbS51MTYudG9pMzJcIjpVcyxcIkZsb2dyYW0udTE2LnRvdTMyXCI6VXMsXCJGbG9ncmFtLnUxNi50b2k2NFwiOlRvLFwiRmxvZ3JhbS51MTYudG91NjRcIjpnbyxcIkZsb2dyYW0udTE2LnRvZnAzMlwiOlBuLFwiRmxvZ3JhbS51MTYudG9mcDY0XCI6Um59LHtcIkZsb2dyYW0uaTguYWRkXCI6aG4sXCJGbG9ncmFtLmk4LnN1YlwiOmJuLFwiRmxvZ3JhbS5pMTYubmVnXCI6T24sXCJGbG9ncmFtLmk4Lm11bFwiOl9uLFwiRmxvZ3JhbS5pOC5kaXZcIjpFbixcIkZsb2dyYW0uaTgucmVtXCI6bW4sXCJGbG9ncmFtLmk4Lmd0XCI6VG4sXCJGbG9ncmFtLmk4Lmx0XCI6Z24sXCJGbG9ncmFtLmk4LmxlXCI6eW4sXCJGbG9ncmFtLmk4LmdlXCI6eG4sXCJGbG9ncmFtLmk4Lm5lXCI6X3MsXCJGbG9ncmFtLmk4LmVxXCI6SW4sXCJGbG9ncmFtLmk4LnRvaTMyXCI6a3MsXCJGbG9ncmFtLmk4LnRvdTMyXCI6a3MsXCJGbG9ncmFtLmk4LnRvaTY0XCI6eW8sXCJGbG9ncmFtLmk4LnRvdTY0XCI6eG8sXCJGbG9ncmFtLmk4LnRvZnAzMlwiOlNuLFwiRmxvZ3JhbS5pOC50b2ZwNjRcIjpObn0se1wiRmxvZ3JhbS51OC5hZGRcIjpwbixcIkZsb2dyYW0udTguc3ViXCI6Zm4sXCJGbG9ncmFtLnU4Lm11bFwiOnVuLFwiRmxvZ3JhbS51OC5kaXZcIjpsbixcIkZsb2dyYW0udTgucmVtXCI6ZG4sXCJGbG9ncmFtLnU4Lmd0XCI6anMsXCJGbG9ncmFtLnU4Lmx0XCI6Q3MsXCJGbG9ncmFtLnU4LmxlXCI6RnMsXCJGbG9ncmFtLnU4LmdlXCI6RHMsXCJGbG9ncmFtLnU4Lm5lXCI6QW4sXCJGbG9ncmFtLnU4LmVxXCI6RXMsXCJGbG9ncmFtLnU4LnRvaTMyXCI6a3MsXCJGbG9ncmFtLnU4LnRvdTMyXCI6a3MsXCJGbG9ncmFtLnU4LnRvaTY0XCI6eW8sXCJGbG9ncmFtLnU4LnRvdTY0XCI6eG8sXCJGbG9ncmFtLnU4LnRvZnAzMlwiOlBuLFwiRmxvZ3JhbS51OC50b2ZwNjRcIjpSbn0se1wiRmxvZ3JhbS5ib29sLmFuZFwiOllpLFwiRmxvZ3JhbS5ib29sLm9yXCI6d2ksXCJGbG9ncmFtLmJvb2wueG9yXCI6VmksXCJGbG9ncmFtLmJvb2wubm90XCI6dmksXCJGbG9ncmFtLmJvb2wuZXFcIjpFcyxcIkZsb2dyYW0uYm9vbC5uZVwiOl9zfSx7XCJGbG9ncmFtLmNoYXIuZ3RcIjpqcyxcIkZsb2dyYW0uY2hhci5sdFwiOkNzLFwiRmxvZ3JhbS5jaGFyLmxlXCI6RnMsXCJGbG9ncmFtLmNoYXIuZ2VcIjpEcyxcIkZsb2dyYW0uY2hhci5lcVwiOkVzLFwiRmxvZ3JhbS5jaGFyLm5lXCI6X3N9KSk7dmFye0xFQjEyOF9FTkNPREU6aHR9PUp0LE51PW5ldyBJbnQ4QXJyYXkoMSksUnU9bmV3IFVpbnQ4QXJyYXkoMSksaXA9Yz0+e2xldCBzPVtdLHI9ITA7Zm9yKDtyOyl7bGV0IGg9YyYxMjc7Yz4+PTcsYz09PTAmJiEoaCY2NCl8fGM9PT0tMSYmaCY2ND9yPSExOmh8PTEyOCxzLnB1c2goaCl9cmV0dXJuIG5ldyBVaW50OEFycmF5KHMpfSxwcD1jPT57bGV0IHM9W10scj0hMDtmb3IoO3I7KXtsZXQgaD1jJjEyNztjPj49NyxjPT09MD9yPSExOmh8PTEyOCxzLnB1c2goaCl9cmV0dXJuIG5ldyBVaW50OEFycmF5KHMpfSxscD1jPT57bGV0IHM9W107Zm9yKDtjPj0xMjg7KXMucHVzaChjJjEyN3wxMjgpLGM+Pj49NztyZXR1cm4gcy5wdXNoKGMpLG5ldyBVaW50OEFycmF5KHMpfSx1cD0xMjgsZnA9MTI3LElvPTY0LGhwPWM9PntjPWM8PDE2Pj4xNjtsZXQgcz1bXTtmb3IoOzspe2xldCByPWMmZnA7Yz1jPj43O2xldCBoPWM9PT0wLEQ9KHImSW8pPT09MCxjZT1oJiZELGU9Yz09PS0xLHBlPShyJklvKSE9PTA7aWYoY2V8fGUmJnBlKXtzLnB1c2gocik7YnJlYWt9cj1yfHVwLHMucHVzaChyKX1yZXR1cm4gc307dmFyIEVwPWM9PntsZXQgcz1uZXcgRmxvYXQzMkFycmF5KDEpO3JldHVybiBzWzBdPXBhcnNlRmxvYXQoYyksbmV3IFVpbnQ4QXJyYXkocy5idWZmZXIpfSxBbz1jPT57bGV0IHM9W10scj0hMDtmb3IoO3I7KXtsZXQgaD1jJjEyNztjPj49NyxjPT09MCYmIShoJjY0KXx8Yz09PS0xJiZoJjY0P3I9ITE6aHw9MTI4LHMucHVzaChoKX1yZXR1cm4gbmV3IFVpbnQ4QXJyYXkocyl9LF9wPWM9Pmh0KGMpLE9wPWM9PntsZXQgcz1uZXcgRmxvYXQ2NEFycmF5KDEpO3JldHVybiBzWzBdPWMsbmV3IFVpbnQ4QXJyYXkocy5idWZmZXIpfSxicD1jPT57bGV0IHM9W107Zm9yKDtjPj0xMjg7KXMucHVzaChjJjEyN3wxMjgpLGM+Pj49NztyZXR1cm4gcy5wdXNoKGMpLG5ldyBVaW50OEFycmF5KHMpfSxkcD1jPT57bGV0IHM9W10scj0hMDtmb3IoO3I7KXtsZXQgaD1jJjEyNztjPj49NyxjPT09MCYmIShoJjY0KXx8Yz09PS0xJiZoJjY0P3I9ITE6aHw9MTI4LHMucHVzaChoKX1yZXR1cm4gbmV3IFVpbnQ4QXJyYXkocyl9LG1wPWM9PntsZXQgcz1uZXcgVWludDhBcnJheSgxKTtyZXR1cm4gc1swXT1jPT09XCJUUlVFXCI/MTpjPT09XCJGQUxTRVwiPzA6YyxzfSxUcD1jPT57bGV0IHM9Yy5jaGFyQ29kZUF0KDApO3JldHVybiBodChzKX0sTm89KCk9PntsZXQgYz1uZXcgQXJyYXlCdWZmZXIoNCk7cmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoYylbMF09LTAsWy4uLm5ldyBVaW50OEFycmF5KGMpXX0sZ3A9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGlkZW50aXR5OjEyNyxvcGNvZGU6NjUsZW5jb2RlOkFvLGxpbms6T2JqZWN0LmZyZWV6ZSh7bG9hZDpPYmplY3QuZnJlZXplKHtvcGNvZGU6NDAsYWxpZ246MixvZmZzZXQ6MCxzaXplOjR9KSxzdG9yZTpPYmplY3QuZnJlZXplKHtvcGNvZGU6NTQsYWxpZ246MixvZmZzZXQ6MCxzaXplOjR9KX0pfSkseXA9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGlkZW50aXR5OjEyNyxvcGNvZGU6NjUsbm9uZTpodCgtMSksZW5jb2RlOlRwLGxpbms6T2JqZWN0LmZyZWV6ZSh7bG9hZDpPYmplY3QuZnJlZXplKHtvcGNvZGU6NDAsYWxpZ246MixvZmZzZXQ6MCxzaXplOjR9KSxzdG9yZTpPYmplY3QuZnJlZXplKHtvcGNvZGU6NTQsYWxpZ246MixvZmZzZXQ6MCxzaXplOjR9KX0pfSkseHA9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGlkZW50aXR5OjEyNyxvcGNvZGU6NjUsbm9uZTpodCgtMSksZW5jb2RlOm1wLGxpbms6T2JqZWN0LmZyZWV6ZSh7bG9hZDpPYmplY3QuZnJlZXplKHtvcGNvZGU6NDAsYWxpZ246MixvZmZzZXQ6MCxzaXplOjR9KSxzdG9yZTpPYmplY3QuZnJlZXplKHtvcGNvZGU6NTQsYWxpZ246MixvZmZzZXQ6MCxzaXplOjR9KSx2YWx1ZXM6e1RSVUU6MSxGQUxTRTowfX0pfSksSXA9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGlkZW50aXR5OjEyNCxvcGNvZGU6Njgsbm9uZTpObygpLGVuY29kZTpPcCxsaW5rOk9iamVjdC5mcmVlemUoe2xvYWQ6T2JqZWN0LmZyZWV6ZSh7b3Bjb2RlOjQzLGFsaWduOjIsb2Zmc2V0OjAsc2l6ZTo4fSksc3RvcmU6T2JqZWN0LmZyZWV6ZSh7b3Bjb2RlOjU3LGFsaWduOjIsb2Zmc2V0OjAsc2l6ZTo4fSl9KX0pLEFwPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixpZGVudGl0eToxMjYsb3Bjb2RlOjY2LG5vbmU6aHQoLTEpLGVuY29kZTpicCxsaW5rOk9iamVjdC5mcmVlemUoe2xvYWQ6T2JqZWN0LmZyZWV6ZSh7b3Bjb2RlOjUzLGFsaWduOjIsb2Zmc2V0OjAsc2l6ZTo4fSksc3RvcmU6T2JqZWN0LmZyZWV6ZSh7b3Bjb2RlOjU1LGFsaWduOjIsb2Zmc2V0OjAsc2l6ZTo4fSl9KX0pLE5wPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixpZGVudGl0eToxMjYsb3Bjb2RlOjY2LG5vbmU6aHQoLTkyMjMzNzIwMzY4NTQ3NzZlMyksZW5jb2RlOmRwLGxpbms6T2JqZWN0LmZyZWV6ZSh7bG9hZDpPYmplY3QuZnJlZXplKHtvcGNvZGU6NTIsYWxpZ246MixvZmZzZXQ6MCxzaXplOjh9KSxzdG9yZTpPYmplY3QuZnJlZXplKHtvcGNvZGU6NTUsYWxpZ246MixvZmZzZXQ6MCxzaXplOjh9KX0pfSksUnA9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGlkZW50aXR5OjEyNSxvcGNvZGU6Njcsbm9uZTpObygpLGVuY29kZTpFcCxsaW5rOk9iamVjdC5mcmVlemUoe2xvYWQ6T2JqZWN0LmZyZWV6ZSh7b3Bjb2RlOjQyLGFsaWduOjIsb2Zmc2V0OjAsc2l6ZTo0fSksc3RvcmU6T2JqZWN0LmZyZWV6ZSh7b3Bjb2RlOjU2LGFsaWduOjIsb2Zmc2V0OjAsc2l6ZTo0fSl9KX0pLFNwPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixpZGVudGl0eToxMjcsb3Bjb2RlOjY1LG5vbmU6aHQoLTEpLGVuY29kZTpfcCxsaW5rOk9iamVjdC5mcmVlemUoe2xvYWQ6T2JqZWN0LmZyZWV6ZSh7b3Bjb2RlOjQwLGFsaWduOjIsb2Zmc2V0OjAsc2l6ZTo0fSksc3RvcmU6T2JqZWN0LmZyZWV6ZSh7b3Bjb2RlOjU0LGFsaWduOjIsb2Zmc2V0OjAsc2l6ZTo0fSl9KX0pLFBwPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixpZGVudGl0eToxMjcsb3Bjb2RlOjY1LG5vbmU6aHQoLTIxNDc0ODM2NDgpLGVuY29kZTpBbyxsaW5rOk9iamVjdC5mcmVlemUoe2xvYWQ6T2JqZWN0LmZyZWV6ZSh7b3Bjb2RlOjQwLGFsaWduOjIsb2Zmc2V0OjAsc2l6ZTo0fSksc3RvcmU6T2JqZWN0LmZyZWV6ZSh7b3Bjb2RlOjU0LGFsaWduOjIsb2Zmc2V0OjAsc2l6ZTo0fSl9KX0pLHpwPU9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixpZGVudGl0eToxMjcsb3Bjb2RlOjY1LG5vbmU6aHQoLTMyNzY4KSxlbmNvZGU6aHAsbGluazpPYmplY3QuZnJlZXplKHtsb2FkOk9iamVjdC5mcmVlemUoe29wY29kZTo0MCxhbGlnbjoyLG9mZnNldDowLHNpemU6NH0pLHN0b3JlOk9iamVjdC5mcmVlemUoe29wY29kZTo1NCxhbGlnbjoyLG9mZnNldDowLHNpemU6NH0pfSl9KSxqcD1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsaWRlbnRpdHk6MTI3LG9wY29kZTo2NSxlbmNvZGU6bHAsbm9uZTpodCgtMSksbGluazpPYmplY3QuZnJlZXplKHtsb2FkOk9iamVjdC5mcmVlemUoe29wY29kZTo0MCxhbGlnbjoyLG9mZnNldDowLHNpemU6NH0pLHN0b3JlOk9iamVjdC5mcmVlemUoe29wY29kZTo1NCxhbGlnbjoyLG9mZnNldDowLHNpemU6NH0pfSl9KSxDcD1PYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsaWRlbnRpdHk6MTI3LG9wY29kZTo2NSxub25lOmh0KC0xMjgpLGVuY29kZTppcCxkZWNvZGU6Yz0+bmV3IEludDhBcnJheShbY10pWzBdLGxpbms6T2JqZWN0LmZyZWV6ZSh7bG9hZDpPYmplY3QuZnJlZXplKHtvcGNvZGU6NDAsYWxpZ246MCxvZmZzZXQ6MCxzaXplOjR9KSxzdG9yZTpPYmplY3QuZnJlZXplKHtvcGNvZGU6NTQsYWxpZ246MCxvZmZzZXQ6MCxzaXplOjR9KX0pfSksRnA9T2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLGlkZW50aXR5OjEyNyxvcGNvZGU6NjUsbm9uZTpodCgtMSksZW5jb2RlOnBwLGxpbms6T2JqZWN0LmZyZWV6ZSh7bG9hZDpPYmplY3QuZnJlZXplKHtvcGNvZGU6NDAsYWxpZ246MCxvZmZzZXQ6MCxzaXplOjR9KSxzdG9yZTpPYmplY3QuZnJlZXplKHtvcGNvZGU6NTQsYWxpZ246MCxvZmZzZXQ6MCxzaXplOjR9KX0pfSksa3Q9T2JqZWN0LmZyZWV6ZSh7XCJGbG9ncmFtLlN0cmluZ1wiOmdwLFwiRmxvZ3JhbS5DaGFyXCI6eXAsXCJGbG9ncmFtLkJvb2xcIjp4cCxcIkZsb2dyYW0uRlA2NFwiOklwLFwiRmxvZ3JhbS5VNjRcIjpBcCxcIkZsb2dyYW0uSTY0XCI6TnAsXCJGbG9ncmFtLkZQMzJcIjpScCxcIkZsb2dyYW0uVTMyXCI6U3AsXCJGbG9ncmFtLkkzMlwiOlBwLFwiRmxvZ3JhbS5JMTZcIjp6cCxcIkZsb2dyYW0uVTE2XCI6anAsXCJGbG9ncmFtLkk4XCI6Q3AsXCJGbG9ncmFtLlU4XCI6RnB9KTt2YXJ7VFlQRVNfQVNTSUdOOlJvLFRZUEVTX0RSQVc6RHAsVFlQRVNfTk9XOlNvLFRZUEVTX0FSUkFZOnEsVFlQRVNfQVJSQVlfQVNTSUdOTUVOVDpVcCxUWVBFU19CUkFOQ0hfTUFUQ0g6UG8sVFlQRVNfQlJBTkNIX0RFRkFVTFQ6em8sVFlQRVNfQ09ORElUSU9OOkxzLFRZUEVTX0xPT1A6YnMsVFlQRVNfV0hJTEU6a3AsVFlQRVNfRk9SRUFDSDpMcCxUWVBFU19EQVRBOlN0LFRZUEVTX0NPTVBBUkU6am8sVFlQRVNfRU5VTUVSQVRJT046YXQsVFlQRVNfRVhQUkVTU0lPTjpMdCxUWVBFU19MSU5LOkJ0LFRZUEVTX0xPQ0FMOkplLFRZUEVTX0NPTkNBVDpDbyxUWVBFU19PQkpFQ1Q6ZGUsVFlQRVNfUkVUVVJOOllzLFRZUEVTX1NFTEVDVDpQdCxUWVBFU19NRU1CRVI6ZHMsVFlQRVNfU1RPUkU6Rm8sVFlQRVNfQlJFQUs6WXAsVFlQRVNfTElURVJBTDp2ZSxUWVBFU19BUlJBWV9BQ0NFU1M6d3MsVFlQRVNfTElOS19UTzp6bixUWVBFU19WQUxVRV9BVDpWcyxUWVBFU19EUk9QOkRvLFRZUEVTX01BWUJFOlF0LFRZUEVTX01PVkU6VW8sVFlQRVNfTkFUSVZFOkhlLFRZUEVTX1NUUklORzpyZSxUWVBFU19GUkVFOndwLFRZUEVTX0ZPUjpWcCxUWVBFU19VUF9UTzprbyxUWVBFU19ET1dOX1RPOnZwLFRZUEVTX0FMTU9TVF9VUF9UTzpMbyxUWVBFU19BTE1PU1RfRE9XTl9UTzpNcCxUWVBFU19CUkFOQ0g6WW8sVFlQRVNfQ09OVElOVUU6d28sVFlQRVNfREVGQVVMVF9CTE9DSzpqbixUWVBFU19CTE9DS19FTkQ6enQsVFlQRVNfU1RBVEVNRU5UOlZvLFRZUEVTX0RFU1RSVUNUT1I6dm8sVFlQRVNfU0laRTpNbyxUWVBFU19XSElMRV9DT05ESVRJT046Q24sVFlQRVNfRk9SRUFDSF9DT05ESVRJT046Qm8sVFlQRVNfRk9SRUFDSF9FTkQ6S28sVFlQRVNfRlAzMjpHbyxUWVBFU19JMzI6bXQsVFlQRVNfSTY0OkJwLFRZUEVTX0ZQNjQ6S3AsVFlQRVNfQ0hBUjpGbixUWVBFU19CT09MOkRuLFRZUEVTX0JMT0NLX0JFR0lOOkhvLFRZUEVTX1dIRU46R3AsVFlQRVNfRlVOQ1RJT05fQ0FMTDpabyxUWVBFU19QUk9DRURVUkU6SHAsVFlQRVNfQ09OU1RSVUNUT1I6WnAsVFlQRVNfVU5SRUFDSEFCTEU6WHB9PU5zLHtLX0FTU0lHTk1FTlQ6ZXMsS19GTE9HUkFNOlFlfT1SdC5LZXl3b3Jkcyx7RU5VTV9NRU1PUllfU0laRTpMdSxFTlVNX1NUQUNLX1NJWkU6VW4sQVJSQVlfTUVNT1JZX1NJWkU6bXMsQVJSQVlfU1RBQ0tfU0laRTpFdCxBUlJBWV9ERUZBVUxUX0NBUEFDSVRZOldwLFNUUklOR19NRU1PUllfU0laRTprbixTVFJJTkdfU1RBQ0tfU0laRTpLdCxPQkpFQ1RfTUVNT1JZX1NJWkU6dnMsT0JKRUNUX1NUQUNLX1NJWkU6dHMsTkFUSVZFX01FTU9SWV9TSVpFOkF0LE5BVElWRV9TVEFDS19TSVpFOlRzLE5BVElWRV9TSVpFOll1LFNURVA6VHQsRE9VQkxFX1NURVA6X3QsVFJJUFBMRV9TVEVQOnd1fT1SdC5TaXplcyxqdD0yLEd0PTMsc3M9MTIsbnM9MTMsZXQ9MTYsX2U9MjYsaT02NSxYbz03MSxxcD0xMTMsJHA9MTE0LGdzPTcwLFdvPTc2LHR0PTMyLEN0PTMzLEY9MzUsbGU9MzYsSnA9MTUsSHQ9MTEscW89NCxRcD01LFhlPTY0LHB0PTEyNyxNZT0xMDgsZWw9MTA5LEg9MTA2LHRsPTEwNyxCZT01NCxzdD00MCxzbD0wLHVlPTAsZmU9MixZdD00LG5sPVwiYWxsb2NcIixMbj1cImRlYWxsb2NcIiwkbz1cIm1lcmdlXCIsSm89XCJzYXZlXCIsb2w9XCJ1bmRvXCIsY2w9XCJ1bmRvUGVudWx0aW1hdGVcIixhbD1cImRyYXdcIixybD1cImRyYXdJNjRcIixpbD1cImRyYXdGUDMyXCIscGw9XCJkcmF3RlA2NFwiLGxsPVwibm93XCIsZz0wLExlPTEsUW89XCJGbG9ncmFtLmRyYXdcIix1bD1cIkZsb2dyYW0ubm93XCIseXM9bmV3IFNldChbXCI9PVwiLFwiIT1cIixcIj5cIixcIj49XCIsXCI8XCIsXCI8PVwiLFwib3JcIixcImFuZFwiLFwib3JcIixcIm5vdFwiXSksZmw9bmV3IFNldChbXCJJMzJcIixcIlUzMlwiLFwiQm9vbFwiLFwiRlAzMlwiLFwiSTY0XCIsXCJVNjRcIixcIkZQNjRcIl0pLHtMRUIxMjhfRU5DT0RFOmx9PUp0LHtJTlRfQVJSQVlfU1RBUlQ6aGwsRkxPQVRfQVJSQVlfU1RBUlQ6RWwsU1RSSU5HX1NUQVJUOmVjLENIQVJfU1RBUlQ6X2wsRU5EX09GX0xJTkU6T2wsTkFUX09OX0hPUklaT046YmwsQklHX05BVF9PTl9IT1JJWk9OOmRsLEZMT0FUX09OX0hPUklaT046bWwsQklHX0ZMT0FUX09OX0hPUklaT046VGx9PVJ0LkRyYXdTdGF0ZXMsWW4sTj0oYyxzKT0+YCR7c30uJHtjfWAsdGM9KGMscyxyKT0+e2xldCBoPXIuZ2V0KGMpO2lmKGgmJmgubGVuZ3RoPT09MSlyZXR1cm4gaFswXTtpZihoJiZoLmxlbmd0aD4xKXJldHVybiBoWzBdO3Rocm93IGNvbnNvbGUubG9nKGMpLGNvbnNvbGUubG9nKHMpLEVycm9yKFwiTm8gQ2FsbGVlcyB3ZXJlIGZvdW5kXCIpfTtmdW5jdGlvbiBNcyhjLHMscixoLEQpe2M/LmRlc2NyaXB0aW9uPy5pbnB1dHMubGVuZ3RoPjA/WW49Yy5kZXNjcmlwdGlvbi5pbnB1dHNbMF0uZGF0YS5uYW1lOmM/LmRlc2NyaXB0aW9uPy5vdXRwdXRzLmxlbmd0aD4wJiYoWW49Yy5kZXNjcmlwdGlvbi5vdXRwdXRzWzBdLmRhdGEubmFtZSk7bGV0IGNlPXQ9PntJZSh0LmNvbGxlY3Rpb24pLmxlbmd0aH0sZT1bXSxwZT1uZXcgU2V0LG1lPSExLE9lPXQ9PntwZS5hZGQodCl9LCQ9KCk9PntlLnB1c2goZXQsbmwpLE9lKFwiYWxsb2NcIil9LFJlPXQ9Pnt0PT09R28/KGUucHVzaChldCxpbCksT2UoXCJkcmF3RlAzMlwiKSk6dD09PUtwPyhlLnB1c2goZXQscGwpLE9lKFwiZHJhd0ZQNjRcIikpOnQ/LmluY2x1ZGVzKFwiNjRcIik/KGUucHVzaChldCxybCksT2UoXCJkcmF3STY0XCIpKTooZS5wdXNoKGV0LGFsKSxPZShcImRyYXdcIikpfSxsdD0oKT0+e09lKFwibm93XCIpLGUucHVzaChldCxsbCl9LHV0PSh0PWcpPT57ZS5wdXNoKGksMCksJCgpLGUucHVzaChsZSx0KX0sWWU9KCk9PntlLnB1c2goRixnKSxlLnB1c2goRixMZSksZS5wdXNoKGV0LEpvKSxlLnB1c2goRixMZSksZS5wdXNoKEYsZyksZS5wdXNoKGV0LEpvKSxPZShcInNhdmVcIil9LG50PSgpPT57ZS5wdXNoKGV0LG9sKSxlLnB1c2gobGUsTGUpLGUucHVzaChsZSxnKSxPZShcInVuZG9cIil9LGR0PSgpPT57ZS5wdXNoKGV0LGNsKSxlLnB1c2gobGUsTGUpLGUucHVzaChsZSxnKSxPZShcInVuZG9QZW51bHRpbWF0ZVwiKX0sZnQ9KCk9PntlLnB1c2goZXQsJG8pLE9lKFwibWVyZ2VcIil9LHl0PSh0LG49ITEpPT57bGV0IG89dC5wYXRoPT09UWUmJnQubmFtZSE9PXJlJiZ0LmxheW91dCE9PXEmJnQudHlwZSE9PXE7cmV0dXJuIG4/byYmdC5tdXRhYmxlOm99LHtkZXNjcmlwdGlvbjpac309Yyx7aW5wdXRzOlhzLGxvY2FsczpWdCxzdGF0ZW1lbnRzOnhzfT1acyxDZT1uZXcgTWFwLEZlPW5ldyBNYXAsRHQ9bmV3IE1hcDt7bGV0IHQ9MCxuPW89Pntmb3IobGV0IHAgb2Ygbyl7bGV0e25hbWU6XyxkYXRhOmJ9PXA7c3dpdGNoKENlLnNldChfLHQpLEZlLnNldChfLHApLGIudHlwZSl7Y2FzZSBRdDpjYXNlIFN0OntsZXR7bmFtZTpSLHBhdGg6an09YixVPU4oUixqKTtzd2l0Y2goUil7Y2FzZSByZTp7dD10K0t0fDA7YnJlYWt9ZGVmYXVsdDp7bGV0IHg9cy5nZXQoVSk7aWYoIXgpdGhyb3cgbmV3IEVycm9yKFwiS2V5IG5vdCBmb3VuZDogXCIsVSk7c3dpdGNoKHgudHlwZSl7Y2FzZSBIZTp7dD10K1RzfDA7YnJlYWt9Y2FzZSBhdDp7dD10K1VufDA7YnJlYWt9Y2FzZSBkZTp7bGV0e2xlbmd0aDplZX09eDt0PXQrdHN8MDticmVha319YnJlYWt9fWJyZWFrfWNhc2UgcTp7dD10K0V0fDA7YnJlYWt9Y2FzZSBCdDp7bGV0IFI9cy5nZXQoTihiLm5hbWUsYi5wYXRoKSk7Yi5uYW1lPT09cmU/dD10K0t0fDA6Yi5uYW1lPT09cXx8Yi5sYXlvdXQ9PT1xP3Q9dCtFdHwwOlIudHlwZT09PWRlP3Q9dCt0c3wwOnQ9dCtUc3wwO2JyZWFrfX19fTtuKFhzKSxuKFZ0KX1sZXQgZ2U9MCxLZT1bXTtmb3IobGV0IHQgb2YgVnQpe2xldHtkYXRhOm59PXQsbz0oKT0+e0tlLnB1c2goMSxwdCksZ2U9Z2UrMXwwfSxwPSgpPT57S2UucHVzaCgxLHB0KSxnZT1nZSsxfDAsS2UucHVzaCgxLHB0KSxnZT1nZSsxfDAsS2UucHVzaCgxLHB0KSxnZT1nZSsxfDB9LF89KCk9PntLZS5wdXNoKDEscHQpLGdlPWdlKzF8MCxLZS5wdXNoKDEscHQpLGdlPWdlKzF8MH0sYj0oKT0+e0tlLnB1c2goMSxwdCksZ2U9Z2UrMXwwLEtlLnB1c2goMSxwdCksZ2U9Z2UrMXwwfSxSPVU9PntsZXR7aWRlbnRpdHk6eH09VTtLZS5wdXNoKDEseCksZ2U9Z2UrMXwwfSxqPSgpPT57S2UucHVzaCgxLHB0KSxnZT1nZSsxfDAsS2UucHVzaCgxLHB0KSxnZT1nZSsxfDAsS2UucHVzaCgxLHB0KSxnZT1nZSsxfDB9O2lmKHl0KG4sITApKXtvKCk7Y29udGludWV9c3dpdGNoKG4udHlwZSl7Y2FzZSBxOntwKCk7YnJlYWt9Y2FzZSBCdDp7bGV0IFU9cy5nZXQoTihuLm5hbWUsbi5wYXRoKSk7bi5uYW1lPT09cT9wKCk6bi5uYW1lPT09cmU/XygpOlUmJlUudHlwZT09PWRlP2IoKTpvKCk7YnJlYWt9Y2FzZSBRdDpjYXNlIFN0OntsZXR7bmFtZTpVLHBhdGg6eH09bjtzd2l0Y2goVSl7Y2FzZSByZTp7cCgpO2JyZWFrfWRlZmF1bHQ6e2xldCBlZT1OKFUseCksaWU9cy5nZXQoZWUpO3N3aXRjaChpZS50eXBlKXtjYXNlIEhlOntSKGllKTticmVha31jYXNlIGF0OntqKCk7YnJlYWt9Y2FzZSBkZTp7YigpO2JyZWFrfX1icmVha319YnJlYWt9fX0oKHQsbik9Pntmb3IobGV0W28scF1vZiB0KWlmKHAudHlwZT09bil7S2UucHVzaCgxLHB0KSxnZT1nZSsxfDA7YnJlYWt9fSkocyxkZSk7bGV0IFdzPWwoZ2UpO2UucHVzaCguLi5XcywuLi5LZSk7bGV0IHFlPXQ9PntpZih0eXBlb2YgdCE9PWRlKXJldHVybiB0O3N3aXRjaCh0LnR5cGUpe2Nhc2UgSmU6cmV0dXJuIHQubmFtZTtjYXNlIHpuOnJldHVybiBxZSh0LnZhbHVlKTtjYXNlIFZzOnJldHVybiBxZSh0LmxpbmspO2Nhc2UgZHM6cmV0dXJuYCR7dC50eXBlfV8ke3QudHJhaWwuam9pbihcIl9cIil9YDtjYXNlIHdzOnJldHVybiB0LmFycmF5Lm5hbWU7Y2FzZSBQdDpyZXR1cm4gcWUodC52YWx1ZSk7Y2FzZSBGbzpyZXR1cm4gcWUodC5saW5rKX1yZXR1cm4gbnVsbH0sSWU9dD0+e2lmKCF0KXJldHVybiBudWxsO3N3aXRjaCh0LnR5cGUpe2Nhc2UgdmU6cmV0dXJuIHQ7Y2FzZSBKZTpyZXR1cm4gRmUuZ2V0KHQubmFtZSk/LmRhdGE7Y2FzZSBWczpyZXR1cm4gSWUodC5saW5rKTtjYXNlIHpuOnJldHVybiBJZSh0LnZhbHVlKTtjYXNlIFVvOnJldHVybiBJZSh0LnZhbHVlKTtjYXNlIFF0OnJldHVybiB0O2Nhc2UgTW86e2lmKHQudmFsdWUudHlwZT09PUplKXJldHVybntuYW1lOm10LHBhdGg6UWUsdHlwZTpTdH07YnJlYWt9Y2FzZSB3czp7bGV0IG49SWUodC5hcnJheSk7aWYobi5uYW1lPT09cmUpcmV0dXJue25hbWU6bi50eXBlPT09cT9yZTpGbixwYXRoOlFlLHR5cGU6U3R9O2xldCBvPUZlLmdldChxZSh0KSk7cmV0dXJuIG8uZGV0YWlsc3x8by5kYXRhLmRldGFpbHN8fHsuLi5vLmRhdGEsdHlwZTpvLmRhdGEubmFtZT09PXE/cTpTdH19Y2FzZSBQdDp7bGV0e3ZhbHVlOm4sdHJhaWw6b309dCx7bmFtZTpwfT1uLF89RmUuZ2V0KHB8fHFlKG4pKSx7ZGF0YTpifT1fLFI9TihiLm5hbWUsYi5wYXRoKSxqPXMuZ2V0KFIpO2lmKGoudHlwZT09PWF0KXtsZXR7bGFiZWxzOmllfT1qLGplPWllLmZpbmQoVD0+VC5wcm9wcy5pbmNsdWRlcyhvWzBdKSk7aWYoIWplKXtjb25zb2xlLmVycm9yKFwiR2V0IFR5cGU6IFVua25vd24gZW51bSBsYWJlbCB2YWx1ZS4uLi4uXCIpO3JldHVybn1sZXQgaz1zLmdldChOKGplLm5hbWUsUikpLm1lbWJlcnMuZ2V0KG9bMF0pO2lmKG8ubGVuZ3RoPjEpZm9yKDtvLmxlbmd0aD4wOyl7bGV0IFQ9by5zaGlmdCgpO2s9cy5nZXQoTihrLm5hbWUsay5wYXRoKSkubWVtYmVycy5nZXQoVCl9cmV0dXJuIGt9bGV0e2luZGl2aXNpYmxlczpVfT1qLHg9SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvKSksZWU9ajtmb3IoO3gubGVuZ3RoPjA7KXtsZXQgaWU9eC5zaGlmdCgpO2lmKHgubGVuZ3RoPjApe2xldCBqZT1lZS5tZW1iZXJzLmdldChpZSksWmU9TihqZS5uYW1lLGplLnBhdGgpO2VlPXMuZ2V0KFplKTtjb250aW51ZX1lZT1lZS5tZW1iZXJzLmdldChpZSl9cmV0dXJuIGVlfWNhc2UgTHQ6e2xldCBuPWguZmluZChSPT5SLm5hbWU9PT10Lm5hbWUmJlIucGF0aD09PXQucGF0aCk7aWYobilyZXR1cm4gbi5kZXNjcmlwdGlvbi5vdXRwdXRzWzBdLmRhdGE7bGV0IG89Wy4uLmMuZGVzY3JpcHRpb24ubG9jYWxzLC4uLmMuZGVzY3JpcHRpb24uaW5wdXRzXSxwPVI9PmguZmluZChqPT5qLnR5cGU9PT1IcCYmai5uYW1lPT09Ui5uYW1lKT8uZGVzY3JpcHRpb24ub3V0cHV0c1swXSxfPShSLGopPT57bGV0IFU7Zm9yKGxldCB4PTA7eDxSLm5hbWUubGVuZ3RoLTE7eCsrKWo9RmUuZ2V0KFIubmFtZVswXSk7aWYoail7bGV0IHg9TihqLmRhdGEubmFtZSxqLmRhdGEucGF0aCksZWU9aC5maW5kKGllPT5pZS5uYW1lPT09Ui5uYW1lW1IubmFtZS5sZW5ndGgtMV0mJmllLnBhdGg9PT14KTtpZihlZSlyZXR1cm4gZWUuZGVzY3JpcHRpb24ub3V0cHV0c1swXTtjb25zb2xlLmVycm9yKFwiVW5hYmxlIHRvIGZpbmQgc2hhcGU6IFwiLGoseCl9cmV0dXJuIFU/LmRlc2NyaXB0aW9uLm1lbWJlcnM/LmZpbmQoeD0+eC5uYW1lPT09Ui5uYW1lW1IubmFtZS5sZW5ndGgtMV0pPy5kZXNjcmlwdGlvbi5vdXRwdXRzWzBdfSxiO2lmKHQucGF0aCE9PVFlKXtpZihiPXAodCksdHlwZW9mIHQubmFtZT09XCJvYmplY3RcIil7bGV0IFI9by5maW5kKFU9PlUubmFtZT09PXQubmFtZVswXSkuZGF0YTtiPV8odCxSKTtsZXQgaj10Lm5hbWUubGVuZ3RoO3QubmFtZVtqLTFdPT09WnAmJihiPXtkYXRhOlJ9KX1yZXR1cm4gYiYmYi5kYXRhfWVsc2V7aWYodC5uYW1lPT09U28pcmV0dXJue3R5cGU6U3QsbmFtZTpCcCxwYXRoOlFlfTtpZih5cy5oYXModC5uYW1lKSlyZXR1cm57dHlwZTpTdCxuYW1lOkRuLHBhdGg6UWV9O3tsZXQgUj10LmlucHV0cy5tYXAoVT0+SWUoVSkpLGo9aC5maW5kKFU9PlUuZGVzY3JpcHRpb24mJkFycmF5LmlzQXJyYXkoVS5kZXNjcmlwdGlvbi5pbnB1dHMpP1UuZGVzY3JpcHRpb24uaW5wdXRzLmxlbmd0aCE9PVIubGVuZ3RofHxVLm5hbWUhPT10Lm5hbWV8fFUucGF0aCE9PXQucGF0aD8hMTpVLmRlc2NyaXB0aW9uLmlucHV0cy5ldmVyeSgoeCxlZSk9PnguZGF0YS5uYW1lPT09UltlZV0ubmFtZSk6ITEpO2lmKGope2xldHtkZXNjcmlwdGlvbjpVfT1qLHtvdXRwdXRzOnh9PVU7cmV0dXJuIHhbMF0uZGF0YX1lbHNle2NvbnNvbGUuZXJyb3IoXCJOb3QgZm91bmQ6OiBcIix0KTtyZXR1cm59fX1icmVha319fSxXbj10PT57SWUodCk/Lm11dGFibGUmJmUucHVzaChzdCxmZSx1ZSl9LEk9KHQsbj1Zcyk9PntsZXQgbz0wLHA9W10sXz0oayxUKT0+e2xldCBLPXt0eXBlOlwiY2FsbFwiLGtleTprLGlucHV0czpUfTtwLnVuc2hpZnQoSyl9LGI9az0+e2xldCBUPXt0eXBlOlwidmFsdWVcIix2YWx1ZTprfTtwLnVuc2hpZnQoVCl9LFI9az0+e2xldCBUPXt0eXBlOmRzLG1lbWJlcjprfTtwLnVuc2hpZnQoVCl9LGo9KGssVCxLLEIsRyk9PntsZXQgWj17a2V5Om51bGwsc3RvcDohMX0sTTtpZihrJiZmcy5pbmNsdWRlcyhrLm5hbWUpKWlmKGsubmFtZT09PXJlKWUucHVzaChpLE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoyKSksZS5wdXNoKGksTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjIpKSxlLnB1c2goWG8pLFouc3RvcD0hMDtlbHNle2xldHtuYW1lOlh9PWs7TT1OKFgudG9Mb3dlckNhc2UoKStcIi5cIitjdChCKSxLKSxZbj1YfWVsc2UgaWYoayl7bGV0e25hbWU6WCxwYXRoOlF9PWssVWU9TihYLFEpLE89cy5nZXQoVWUpO2lmKE8udHlwZT09PWF0KXtsZXR7bGFiZWxzOmF9PU8sej1JZShUKTtpZihOKHoubmFtZSx6LnBhdGgpPT09VWUpe2xldCBFPWEuZmluZChTPT5TLnByb3BzLmluY2x1ZGVzKFQudHJhaWxbMF0pKSxmPXMuZ2V0KE4oRS5uYW1lLFVlKSkuaW5kaXZpc2libGVzLm1hcFRyYWlsLmdldChULnRyYWlsWzBdKTtNPU4oZi5kYXRhLm5hbWUudG9Mb3dlckNhc2UoKStcIi5cIitjdChCKSxLKX1lbHNlIE09Tih6Lm5hbWUudG9Mb3dlckNhc2UoKStcIi5cIitjdChCKSxLKX1lbHNle2xldHtpbmRpdmlzaWJsZXM6YX09Tyx7bWFwVHJhaWw6en09YSxFPUcuZXZlcnkoZj0+e2xldCBTPUllKGYpLG09TihTLm5hbWUsUy5wYXRoKTtyZXR1cm4gcy5nZXQobSkudHlwZT09PWRlfSksQz1JZShUKTtpZigoQj09XCI9PVwifHxCPT1cIiE9XCIpJiZFKXtsZXQgZj16LnNpemUtMTtmb3IobGV0W1MsbV1vZiB6KXtwLnVuc2hpZnQoe3R5cGU6am8sY3VycmVudEluZGV4OmYsbmFtZTpCfSksTT1OKG0uZGF0YS5uYW1lLnRvTG93ZXJDYXNlKCkrXCIuXCIrY3QoQiksbS5kYXRhLnBhdGgpO2xldCBMPUcubWFwKHY9Pih7dHlwZTpQdCx2YWx1ZTp7dHlwZTpKZSxuYW1lOnYubmFtZXx8cWUodil9LHRyYWlsOlttLnRyYWlsXX0pKTtfKE0sTCk7dmFyIE5lPUwubGVuZ3RoLTF8MDtmb3IobGV0IHY9TmU7dj49MDt2PXYtMXwwKXtsZXQgbmU9TFt2XTtiKG5lKX1mLS19Wi5zdG9wPSEwfWVsc2UgRy5ldmVyeShmPT5JZShmKS5uYW1lPT09cmUpP1ouc3RvcD0hMDpNPU4oQy5uYW1lLnRvTG93ZXJDYXNlKCkrXCIuXCIrY3QoQiksSyl9fXJldHVybiBaLmtleT1NLFp9LFU9az0+e2xldHtuYW1lOlQscGF0aDpLLGlucHV0czpCfT1rO2lmKHlzLmhhcyhrLm5hbWUpKXJldHVybiBEbjtpZihmbC5oYXMoay5uYW1lKSlyZXR1cm4gay5uYW1lO2xldCBHPWguZmlsdGVyKE09Pk0ubmFtZT09PVQmJk0ucGF0aD09PUsmJk0uZGVzY3JpcHRpb24uaW5wdXRzLmZpbHRlcihOZT0+TmUubmFtZS5zdGFydHNXaXRoKFwibWVtYmVyX1wiKT8hTmUuZGF0YS50eXBlPT09QnQmJiFLLmluY2x1ZGVzKFwiLlwiKTohMCkubGVuZ3RoPT09Qi5sZW5ndGgpO2lmKEcubGVuZ3RoPT09MSlyZXR1cm4gR1swXS5kZXNjcmlwdGlvbi5vdXRwdXRzWzBdPy5kYXRhLm5hbWU/P1wiXCI7aWYoQi5maW5kKE09Pk0udHlwZT09THQpKXtsZXQgTT1CLm1hcChYPT57aWYoWC50eXBlPT09SmUpcmV0dXJuIEZlLmdldChYLm5hbWUpO2lmKFgudHlwZT09PXZlKXJldHVybntkYXRhOlh9O2lmKFgudHlwZT09PUx0KXJldHVybntkYXRhOntuYW1lOlUoWCl9fX0pLE5lPWguZmluZChYPT5YLmRlc2NyaXB0aW9uJiZBcnJheS5pc0FycmF5KFguZGVzY3JpcHRpb24uaW5wdXRzKT9YLmRlc2NyaXB0aW9uLmlucHV0cy5sZW5ndGghPT1NLmxlbmd0aD8hMTpYLmRlc2NyaXB0aW9uLmlucHV0cy5ldmVyeSgoUSxVZSk9PlEuZGF0YS5uYW1lPT09TVtVZV0uZGF0YS5uYW1lKTohMSk7cmV0dXJuIE5lP3lzLmhhcyhOZS5uYW1lKT9OZS5kZXNjcmlwdGlvbi5pbnB1dHNbMF0uZGF0YS5uYW1lOk5lLmRlc2NyaXB0aW9uLm91dHB1dHNbMF0uZGF0YS5uYW1lOlwidW5rbm93blwifWVsc2V7bGV0IE09Qi5tYXAoWD0+KHtkYXRhOkllKFgpfSkpLE5lPWguZmluZChYPT5YLmRlc2NyaXB0aW9uJiZBcnJheS5pc0FycmF5KFguZGVzY3JpcHRpb24uaW5wdXRzKT9YLmRlc2NyaXB0aW9uLmlucHV0cy5sZW5ndGghPT1NLmxlbmd0aD8hMTpYLmRlc2NyaXB0aW9uLmlucHV0cy5ldmVyeSgoUSxVZSk9PlEuZGF0YS5uYW1lPT09TVtVZV0uZGF0YS5uYW1lKTohMSk7aWYoTmUpcmV0dXJuIHlzLmhhcyhOZS5uYW1lKT9OZS5kZXNjcmlwdGlvbi5pbnB1dHNbMF0uZGF0YS5uYW1lOk5lLmRlc2NyaXB0aW9uLm91dHB1dHNbMF0uZGF0YS5uYW1lO3Rocm93IGNvbnNvbGUubG9nKGspLG5ldyBFcnJvcihcImNvdWxkIG5vdCBmaW5kIHRoZSB0eXBlIGZvciBwcm9jZWR1cmU6IFwiLGsubmFtZSl9fSx4PWs9PntsZXR7aW5wdXRzOlQsbmFtZTpLLHBhdGg6Qn09ayxHPU4oSyxCKSxaPVtCXSxNO2lmKHR5cGVvZiBLPT09ZGUpe2xldCBYPUtbMF07aWYoTT1GZS5nZXQoWCksTSl7Wi5wdXNoKE0uZGF0YS5uYW1lKTtmb3IobGV0IFVlPTE7VWU8PUsubGVuZ3RoLTI7VWUrKylYPUtbVWVdLE09RmUuZ2V0KFgpLE0mJloucHVzaChNLmRhdGEubmFtZSl9bGV0IFE9Sy5sZW5ndGgtMXwwO0c9TihLW1FdLFouam9pbihcIi5cIikpfWlmKEI9PT1cIkZsb2dyYW1cIiYmSyE9PURwJiZLIT09U28pe2xldCBYPVQuZmluZChhPT5hLnR5cGU9PT1MdCksUT1ULmZpbmQoYT0+YS50eXBlPT09dmUpLFVlLE87Zm9yKGxldCBhIG9mIFQpe2xldCB6PUllKGEpO2lmKHope1VlPXosTz1hO2JyZWFrfX1pZihVZSl7bGV0IGE9aihVZSxPLEIsSyxUKTtpZihHPWEua2V5LGEuc3RvcClyZXR1cm59ZWxzZSBpZihRKUc9TihgJHtRLm5hbWUudG9Mb3dlckNhc2UoKX0uJHtjdChLKX1gLEIpO2Vsc2UgaWYoWClHPU4oYCR7VShYKS50b0xvd2VyQ2FzZSgpfS4ke2N0KEspfWAsQik7ZWxzZXtsZXQgYT1oLmZpbmQoRT0+RS5uYW1lPT09ay5uYW1lJiZFLnBhdGg9PT1rLnBhdGgmJkUuZGVzY3JpcHRpb24uaW5wdXRzLmxlbmd0aD09PWsuaW5wdXRzLmxlbmd0aCksej1oLmZpbHRlcihFPT5FLm5hbWU9PT1rLm5hbWUmJkUucGF0aD09PWsucGF0aCYmRS5kZXNjcmlwdGlvbi5pbnB1dHMubGVuZ3RoPT09ay5pbnB1dHMubGVuZ3RoKTtHPU4oYCR7eXMuaGFzKGEubmFtZSk/YS5kZXNjcmlwdGlvbi5pbnB1dHNbMF0/LmRhdGEubmFtZS50b0xvd2VyQ2FzZSgpOmEuZGVzY3JpcHRpb24ub3V0cHV0c1swXT8uZGF0YS5uYW1lLnRvTG93ZXJDYXNlKCl9LiR7Y3QoYS5uYW1lKX1gLEIpfX1pZihfKEcsVCksdHlwZW9mIEs9PT1kZSl7bGV0IFg9dGMoRyxULHIpO2lmKFgpe2xldHtwcm9jZWR1cmU6UX09WCx7ZGVzY3JpcHRpb246VWV9PVEse3NlbGY6T309VWUsYT1GZS5nZXQoS1swXSksej1OKGEuZGF0YS5uYW1lLGEuZGF0YS5wYXRoKSxFPXMuZ2V0KHopO2lmKEUpe2xldCBDPUNlLmdldChLWzBdKSx7aW5kaXZpc2libGVzOmYsbWVtYmVyczpTfT1FLHttYXBUcmFpbDptfT1mO2ZvcihsZXQgTD1PLmxlbmd0aC0xfDA7TD49MDtMLS0pe2xldCB2PU9bTF07aWYodi50eXBlPT09ZHMpe2xldCBuZT12LnRyYWlsLmpvaW4oXCIuXCIpO2lmKG0uZ2V0KG5lKSl7bGV0e2RhdGE6UGUsYWRkcmVzczpvZX09bS5nZXQobmUpLFZlPU4oUGUubmFtZSxQZS5wYXRoKSxhZT17aXNPYmplY3Q6cy5nZXQoVmUpLnR5cGU9PT1kZSxpbmRleDpDLGFkZHJlc3M6b2V9O1IoYWUpfWVsc2UgdGhyb3cgRXJyb3IoXCJUT0RPOiBVc2luZyBvYmplY3RzIG9mIGRlcHRoIGdyZWF0ZXIgdGhhbiBvbmUuXCIpfWVsc2UgYih0KX19fX1pZihHIT09UW8pe3ZhciBOZT1ULmxlbmd0aC0xfDA7Zm9yKGxldCBYPU5lO1g+PTA7WD1YLTF8MCl7bGV0IFE9VFtYXTtiKFEpfX19LGVlPWs9PntsZXR7a2V5OlQsaW5wdXRzOkt9PWs7aWYoVD09PVFvKXtmb3IobGV0IFogb2YgSyl7bGV0IE09SWUoWik7Wi50eXBlPT09UHQ/TT8ubmFtZT09PXJlPyhlLnB1c2goaSwuLi5sKGVjKSksUmUoKSxJKFopLGUucHVzaChsZSxnKSxlLnB1c2goc3QsZmUsdWUpLFJlKCksZS5wdXNoKEYsZyksZS5wdXNoKHN0LGZlLHVlKSxSZSgpKTooSShaKSxSZShNPy5uYW1lKSk6TT8ubmFtZT09PXJlfHxaLnR5cGU9PT1Dbz8oZS5wdXNoKGksLi4ubChlYykpLFJlKCksSShaKSxSZSgpLFJlKCkpOk0/LnR5cGU9PT1xfHxNPy5uYW1lPT09cXx8TT8ubGF5b3V0PT09cT8oUnMuaW5jbHVkZXMoTS5uYW1lKT9lLnB1c2goaSwuLi5sKEVsKSk6ZS5wdXNoKGksLi4ubChobCkpLFJlKCksSShaKSxlLnB1c2goX2UpLFJlKCksUmUoKSk6TT8ubmFtZT09PUZuPyhlLnB1c2goaSwuLi5sKF9sKSksUmUoKSxJKFopLFJlKCkpOnMuZ2V0KE4oTS5uYW1lLE0ucGF0aCkpPy50eXBlPT09YXQ/KEkoWiksZS5wdXNoKF9lLF9lKSxSZSgpKTooSShaKSxSZShNPy5uYW1lKSl9ZS5wdXNoKGksLi4ubChPbCkpLFJlKCksbz1vLUsubGVuZ3RofDA7cmV0dXJufWlmKFQ9PT11bCl7bHQoKTtyZXR1cm59bGV0IEI9dGMoVCxLLHIpO3N3aXRjaChCLnR5cGUpe2Nhc2UgSGU6e2xldHtib2R5Olp9PUI7ZS5wdXNoKC4uLlopO2JyZWFrfWNhc2VcImFydGlmaWNpYWxcIjp7bGV0e2luZGV4Olp9PUI7ZS5wdXNoKGV0LFopO2JyZWFrfX1sZXR7bGVuZ3RoczpHfT1CO289by1HLmlucHV0c3wwLG89bytHLm91dHB1dHN8MH0saWU9az0+e2xldHt2YWx1ZTpUfT1rLEs9Tz0+e2xldCBhPTA7bWU9ITA7bGV0IHo9cWUoTyksRSxDO2lmKE8udHlwZT09PVB0KXtsZXR7dmFsdWU6Zix0cmFpbDpTfT1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KE8pKSx7bmFtZTptfT1mLEw9RmUuZ2V0KG0pLHtkYXRhOnZ9PUwsbmU9Tih2Lm5hbWUsdi5wYXRoKSxQZT1zLmdldChuZSkse2luZGl2aXNpYmxlczpvZX09UGUse21hcFRyYWlsOlZlfT1vZSxhZT1TLmpvaW4oXCIuXCIpLGJlPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoUykpLFRlPVBlO2Zvcig7YmUubGVuZ3RoPjA7KXtsZXQgeHQ9YmUuc2hpZnQoKTtpZihiZS5sZW5ndGg+MCl7bGV0IG90PVRlLm1lbWJlcnMuZ2V0KHh0KSwkZT1OKG90Lm5hbWUsb3QucGF0aCk7VGU9cy5nZXQoJGUpO2NvbnRpbnVlfVRlPVRlLm1lbWJlcnMuZ2V0KHh0KX1sZXQga2U9TihUZS5uYW1lLFRlLnBhdGgpO0U9cy5nZXQoa2UpfWVsc2V7bGV0IGY9RmUuZ2V0KHopLHtkYXRhOlN9PWYse25hbWU6bSxwYXRoOkwsc2VnbWVudDp2fT1TLG5lPU4obSxMKTtFPXMuZ2V0KG5lKSxDPW09PT1yZX1pZihFKXtzd2l0Y2goRS50eXBlKXtjYXNlIEhlOntpZSh7dmFsdWU6T30pO2xldHtsaW5rOmZ9PUUse2xvYWQ6U309ZjtDfHxlLnB1c2goUy5vcGNvZGUsUy5hbGlnbixTLm9mZnNldCksYT1hKzF8MDticmVha31jYXNlIGRlOntsZXQgZj0wLFM9bmU9PntpZSh7dmFsdWU6T30pO2xldHtsaW5rOlBlfT1uZSx7bG9hZDpvZX09UGU7ZS5wdXNoKG9lLm9wY29kZSxvZS5hbGlnbixvZS5vZmZzZXQrZnwwKSxhPWErMXwwLGY9ZitvZS5zaXplfDB9LG09KCk9Pnt9LHtpbmRpdmlzaWJsZXM6TH09RSx7bWFwVHJhaWw6dn09TDtmb3IobGV0IG5lIG9mIHYudmFsdWVzKCkpe2lmKG5lLnR5cGU9PT1CdCl7bSgpO2NvbnRpbnVlfWxldHtkYXRhOlBlfT1uZSx7bmFtZTpvZSxwYXRoOlZlfT1QZSxhZT1OKG9lLFZlKSxiZT1zLmdldChhZSk7c3dpdGNoKGJlLnR5cGUpe2Nhc2UgSGU6e1MoYmUpO2JyZWFrfWNhc2UgYXQ6e2llKHt2YWx1ZTpPfSksZS5wdXNoKHN0LGZlLHVlK2YpLGE9YSsxfDAsZj1mK1l0fDAsaWUoe3ZhbHVlOk99KSxlLnB1c2goaSwuLi5sKFR0KSksZS5wdXNoKHN0LGZlLHVlK2YpLGUucHVzaChIKSxhPWErMXwwLGY9ZitZdHwwLGllKHt2YWx1ZTpPfSksZS5wdXNoKGksLi4ubChfdCkpLGUucHVzaChzdCxmZSx1ZStmKSxlLnB1c2goSCksYT1hKzF8MCxmPWYrWXR8MDticmVha319fWJyZWFrfX1yZXR1cm4gYX19LEI9KE8sYT0hMCx6PSEwKT0+e2xldCBFPTA7bWU9ITA7ZnVuY3Rpb24gQyhmKXtsZXR7bGl0ZXJhbDpTLG5hbWU6bSxwYXRoOkwsdlNpemU6dn09ZixuZT12fHxTLmxlbmd0aDtmLnF1YW50aXR5LmNhcGFjaXR5JiYhdiYmZi5xdWFudGl0eS5jYXBhY2l0eS50eXBlPT09dmUmJihuZT1wYXJzZUludChmLnF1YW50aXR5LmNhcGFjaXR5LmxpdGVyYWwsMTApKTtsZXQgUGU9TihtLEwpLG9lPXMuZ2V0KFBlKSxWZT1vZS50eXBlPT09ZGV8fG09PT1yZSYmZi5sYXlvdXQ9PT1xfHxmLmNvbnRhaW5zPT09cTtpZighZi5xdWFudGl0eS5jYXBhY2l0eSlpZihmLmxpdGVyYWwpZi5xdWFudGl0eS5jYXBhY2l0eT17dHlwZTp2ZSxuYW1lOm10LHBhdGg6UWUsbGl0ZXJhbDpgJHtNYXRoLm1heChmLmxpdGVyYWw/Lmxlbmd0aHx8MCxXcCl9YH07ZWxzZSB0aHJvdyBFcnJvcihcIlZhbHVlIHdpdGhvdXQgbGVuZ3RoIHByb3ZpZGVkIGZvciBhcnJheSBjb250YWluZXIuXCIpO2lmKFZlKUkoZi5xdWFudGl0eS5jYXBhY2l0eSksbT09PXJlJiZmLmxheW91dD09PXE/ZS5wdXNoKGksLi4ubChrbikpOmYuY29udGFpbnM9PT1xP2UucHVzaChpLC4uLmwobXMpKTpvZS50eXBlPT09ZGUmJmUucHVzaChpLC4uLmwodnMpKSxlLnB1c2goTWUpLCQoKSxlLnB1c2gobGUsZyksWWUoKTtlbHNle1llKCksSShmLnF1YW50aXR5LmNhcGFjaXR5KTtsZXQgYWU9TihmLm5hbWUsZi5wYXRoKSxiZT1zLmdldChhZSkse3N0b3JlOlRlfT1iZS5saW5rO2UucHVzaChpLC4uLmwoVGUuc2l6ZSkpLGUucHVzaChNZSksJCgpLGUucHVzaChsZSxnKX1mb3IobGV0IGFlPTA7YWU8bmU7YWUrKyl7bGV0IGJlPVNbYWVdO2lmKGJlKWlmKGJlLm5hbWU9PT1yZSYmZi5sYXlvdXQ9PT1xfHxiZS5sYXlvdXQ9PT1xJiZvZS50eXBlIT09ZGUpe2xldCBUZT1bXTtpZihiZS5sYXlvdXQ9PT1xKWUucHVzaChGLGcpLGUucHVzaChGLGcpLGUucHVzaChGLGcpLGUucHVzaChGLGcpLGUucHVzaChpLC4uLmwoYWUpKSxlLnB1c2goaSwuLi5sKG1zKSksZS5wdXNoKE1lKSxlLnB1c2goSCksVGUucHVzaChiZS5saXRlcmFsKSxDKGJlKSxlLnB1c2goRixnKSxlLnB1c2goQmUsZmUsdWUpLGUucHVzaChpLC4uLmwoVHQpKSxlLnB1c2goaSwuLi5sKGFlKSksZS5wdXNoKGksLi4ubChfdCkpLGUucHVzaChNZSksZS5wdXNoKEgpLGUucHVzaChIKSxJKGJlLnF1YW50aXR5LnNpemUpLGUucHVzaChCZSxmZSx1ZSksZS5wdXNoKGksLi4ubChfdCkpLGUucHVzaChpLC4uLmwoYWUpKSxlLnB1c2goaSwuLi5sKF90KSksZS5wdXNoKE1lKSxlLnB1c2goSCksZS5wdXNoKEgpLEkoYmUucXVhbnRpdHkuc2l6ZSksZS5wdXNoKEJlLGZlLHVlKSxlLnB1c2gobGUsZyk7ZWxzZXtsZXQga2U9YmUuc2l6ZXx8YmUubGl0ZXJhbC5sZW5ndGg7Zm9yKGxldCBvdD0wO290PGtlO290KyspVGUucHVzaCh7dHlwZTpiZS50eXBlLHBhdGg6YmUucGF0aCxuYW1lOlwiSTMyXCIsbGl0ZXJhbDpiZS5saXRlcmFsW290XS5jaGFyQ29kZUF0KCkudG9TdHJpbmcoKX0pO2xldCB4dD17dHlwZTp2ZSxuYW1lOm10LGxheW91dDpxLHBhdGg6YmUucGF0aCxsaXRlcmFsOlRlLHF1YW50aXR5OntzaXplOntsaXRlcmFsOlRlLmxlbmd0aC50b1N0cmluZygpLHR5cGU6dmUsbmFtZTptdCxwYXRoOlFlfSxjYXBhY2l0eTp7bGl0ZXJhbDpUZS5sZW5ndGgudG9TdHJpbmcoKSx0eXBlOnZlLG5hbWU6bXQscGF0aDpRZX19fTtlLnB1c2goRixnKSxlLnB1c2goRixnKSxlLnB1c2goRixnKSxlLnB1c2goaSwuLi5sKGFlKSksZS5wdXNoKGksLi4ubCh2cykpLGUucHVzaChNZSksZS5wdXNoKEgpLEMoeHQpLGUucHVzaChGLGcpLGUucHVzaChCZSxmZSx1ZSksZS5wdXNoKGksLi4ubChUdCkpLGUucHVzaChpLC4uLmwoYWUpKSxlLnB1c2goaSwuLi5sKF90KSksZS5wdXNoKE1lKSxlLnB1c2goSCksZS5wdXNoKEgpLGUucHVzaChpLC4uLmwoa2UpKSxlLnB1c2goQmUsZmUsdWUpLGUucHVzaChsZSxnKX19ZWxzZSBzd2l0Y2gob2UudHlwZSl7Y2FzZSBIZTp7bGV0e2xpbms6VGV9PW9lLHtzdG9yZTprZX09VGU7ZS5wdXNoKEYsZyksZS5wdXNoKGksLi4ubChBdCkpLGUucHVzaChpLC4uLmwoYWUpKSxlLnB1c2goTWUpLGUucHVzaChIKSwhYmV8fGJlLnR5cGU9PT12ZT9lLnB1c2gob2Uub3Bjb2RlLC4uLm9lLmVuY29kZShiZT8ubGl0ZXJhbHx8MCkpOkkoYmUpLGUucHVzaChrZS5vcGNvZGUsa2UuYWxpZ24sa2Uub2Zmc2V0KSxmdCgpLEU9MzticmVha31jYXNlIGRlOntlLnB1c2goRixnKSxlLnB1c2goRixnKSxlLnB1c2goaSwuLi5sKGFlKSksZS5wdXNoKGksLi4ubCg4KSksZS5wdXNoKE1lKSxlLnB1c2goSCksSShiZSksZS5wdXNoKGxlLExlKSxlLnB1c2goQmUsZmUsdWUpLGUucHVzaChsZSxnKSxlLnB1c2goRixnKSxlLnB1c2goaSwuLi5sKFR0KSksZS5wdXNoKGksLi4ubChhZSkpLGUucHVzaChpLC4uLmwoX3QpKSxlLnB1c2goTWUpLGUucHVzaChIKSxlLnB1c2goSCksZS5wdXNoKEYsTGUpLGUucHVzaChCZSxmZSx1ZSk7YnJlYWt9fX19cmV0dXJuIEMoTyksYSYmKGUucHVzaChGLGcpLEU9MSkseiYmKEkoTy5xdWFudGl0eS5zaXplKSxJKE8ucXVhbnRpdHkuY2FwYWNpdHkpLEU9MiksRX0sRz0oTyxhLHo9ITApPT57bGV0IEU9cy5nZXQoYSk7dXQoKTtsZXQgQz0obSxMLHY9bnVsbCxuZT0hMSk9PntpZihZZSgpLGR0KCksZS5wdXNoKEYsZyksZS5wdXNoKEYsZyksZS5wdXNoKEYsZyksbmUmJmUucHVzaChGLGcpLG50KCksZS5wdXNoKGksLi4ubChMKSksZS5wdXNoKEgpLGUucHVzaChGLGcpLGUucHVzaChCZSxmZSx1ZSksZS5wdXNoKGksLi4ubChMKSksZS5wdXNoKGksLi4ubChUdCkpLGUucHVzaChIKSxlLnB1c2goSCksdiE9bnVsbClRKHYsdisxfDApO2Vsc2UgaWYobSlJKG5lP20uc2l6ZTptKTtlbHNlIHRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byByZWFkIG9iamVjdCBsZW5ndGhcIik7aWYoZS5wdXNoKEJlLGZlLHVlKSxuZSl7aWYoZS5wdXNoKGksLi4ubChMKSksZS5wdXNoKGksLi4ubChfdCkpLGUucHVzaChIKSxlLnB1c2goSCksdiE9bnVsbClRKHYrMSx2KzJ8MCk7ZWxzZSBpZihtKUkobS5jYXBhY2l0eSk7ZWxzZSB0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gcmVhZCBvYmplY3QgbGVuZ3RoXCIpO2UucHVzaChCZSxmZSx1ZSl9ZS5wdXNoKGxlLGcpfSxmPVtdO2ZvcihsZXRbbSxMXW9mIEUubWVtYmVycyl7aWYoIUwpY29udGludWU7bGV0IHY9Ty5maW5kKG9lPT5vZS5uYW1lPT09bSl8fHtuYW1lOm0sdmFsdWU6TC52YWx1ZX0sbmU9TihMLm5hbWUsTC5wYXRoKSxQZT1zLmdldChuZSk7aWYoTC50eXBlPT09cSl7ZS5wdXNoKGksLi4ubChtcykpLCQoKSxlLnB1c2goX2UpLGYucHVzaCh7ZGF0YTp7a2V5TmFtZTptLGtleURhdGE6TH0sbGl0ZXJhbDp2fSk7Y29udGludWV9c3dpdGNoKFBlLnR5cGUpe2Nhc2UgSGU6e2xldHtsaW5rOm9lfT1QZSx7c3RvcmU6VmV9PW9lO2lmKEwudHlwZT09PUJ0KVllKCksZS5wdXNoKGksLi4ubChBdCkpLCQoKSxJKHYudmFsdWUpLGUucHVzaChWZS5vcGNvZGUsVmUuYWxpZ24sVmUub2Zmc2V0KSxudCgpO2Vsc2UgaWYoTC5uYW1lPT09cmUpZS5wdXNoKGksLi4ubChfdCkpLCQoKSxlLnB1c2goX2UpLGYucHVzaCh7ZGF0YTp7a2V5TmFtZTptLGtleURhdGE6TH0sbGl0ZXJhbDp2fSk7ZWxzZXtlLnB1c2goaSwuLi5sKFZlLnNpemUpKSwkKCk7bGV0IGFlPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodi52YWx1ZSkpO2FlLmxpdGVyYWwmJihhZS5uYW1lIT09TC5uYW1lfHxhZS5wYXRoIT09TC5wYXRoKSYmKGFlPXsuLi5hZSxuYW1lOkwubmFtZSxwYXRoOkwucGF0aH0pLEkoYWUpLGUucHVzaChWZS5vcGNvZGUsVmUuYWxpZ24sVmUub2Zmc2V0KX1mdCgpO2JyZWFrfWNhc2UgZGU6e2UucHVzaChpLC4uLmwoX3QpKSwkKCksZS5wdXNoKF9lKSxmLnB1c2goe2RhdGE6e2tleU5hbWU6bSxrZXlEYXRhOkx9LGxpdGVyYWw6dn0pO2JyZWFrfX19aWYoZi5sZW5ndGg+MCl7bGV0IG09ZlswXSx7ZGF0YTpMLGxpdGVyYWw6dn09bSx7a2V5TmFtZTpuZSxrZXlEYXRhOlBlfT1MLHt0eXBlOm9lLG5hbWU6VmUsbGF5b3V0OmFlLHBhdGg6YmV9PVBlLGtlPSgkZT0+e2xldCBJdD1FLmluZGl2aXNpYmxlcy5tYXBUcmFpbDtpZihJdC5oYXMoJGUpKXJldHVybiBJdC5nZXQoJGUpLmFkZHJlc3M7bGV0IE10PUFycmF5LmZyb20oSXQuZW50cmllcygpKS5maWx0ZXIoKFtlbl0pPT5lbi5zdGFydHNXaXRoKGAkeyRlfS5gKSk7cmV0dXJuIE10Lmxlbmd0aD8oTXQuc29ydCgoZW4sRWMpPT5lblsxXS5hZGRyZXNzLUVjWzFdLmFkZHJlc3MpLE10WzBdWzFdLmFkZHJlc3MtOCk6bnVsbH0pKG5lKSx4dD1OKFZlLGJlKSxvdD1zLmdldCh4dCk7aWYoVmU9PT1yZSl7WWUoKSxJKHYudmFsdWUpLGUucHVzaChfZSksZS5wdXNoKGxlLGcpO2xldCAkZT17dHlwZTp2ZSxuYW1lOm10LGxpdGVyYWw6di52YWx1ZS5zaXplfHx2LnZhbHVlLmxpdGVyYWwubGVuZ3RoLHBhdGg6UWV9O0MoJGUsa2UpLGZ0KCl9ZWxzZSBpZihvdC50eXBlPT09ZGUpe1llKCk7bGV0ICRlPUcodi52YWx1ZS5saXRlcmFsLHh0LCExKTtDKHt0eXBlOnZlLG5hbWU6bXQsbGl0ZXJhbDokZSxwYXRoOlFlfSxrZSksZnQoKX1lbHNlIGlmKG9lPT09cXx8YWU9PT1xKWlmKHYudmFsdWUudHlwZT09PUplKXtsZXQgJGU9Q2UuZ2V0KHYudmFsdWUubmFtZSk7WWUoKSxNKFBlLCRlKSxDKFBlLnF1YW50aXR5LGtlLCRlKzEsITApLGZ0KCl9ZWxzZSBZZSgpLEIodi52YWx1ZSwhMSwhMSksQyh2LnZhbHVlLnF1YW50aXR5LGtlLG51bGwsITApLGZ0KCk7ZWxzZSB0aHJvdyBFcnJvcihcIkVycm9yOiBVbmFibGUgdG8gaWRlbnRpZnkgdHlwZTogXCIsb3QudHlwZSl9bGV0IFM9RS5pbmRpdmlzaWJsZXMubWFwVHJhaWwuc2l6ZStmLmxlbmd0aDtyZXR1cm4geiYmKGUucHVzaChGLGcpLGUucHVzaChpLC4uLmwoUykpKSxTfSxaPShPLGEpPT57bGV0IHo9MDttZT0hMDtsZXQgRT1GZS5nZXQoYSksQztpZihFKXtsZXR7ZGF0YTpTfT1FLHtuYW1lOm0scGF0aDpMLHNlZ21lbnQ6dn09UztDPU4obSxMKX1lbHNle2xldCBTPUllKE8pO0M9TihTPy5uYW1lLFM/LnBhdGgpfWxldCBmPXMuZ2V0KEMpO3N3aXRjaChmLnR5cGUpe2Nhc2UgSGU6e2xldHtsaW5rOlN9PWYse3N0b3JlOm19PVM7ZS5wdXNoKGksLi4ubChtLnNpemUpKSwkKCksZS5wdXNoKGxlLGcpLGUucHVzaChGLGcpLEkoTyksZS5wdXNoKG0ub3Bjb2RlLG0uYWxpZ24sbS5vZmZzZXQpLGUucHVzaChGLGcpLHo9eis3fDA7YnJlYWt9Y2FzZSBkZTp7bGV0IFM9MCx7aW5kaXZpc2libGVzOm19PWYse21hcFRyYWlsOkx9PW0sdj1PLnRyYWlsLmpvaW4oXCIuXCIpO3N3aXRjaChPLnR5cGUpe2Nhc2UgUHQ6e2xldCBuZT1MLmdldCh2KTtpZihuZSYmeXQobmUuZGF0YSkpe2xldCBQZT1OKG5lLmRhdGEubmFtZSxuZS5kYXRhLnBhdGgpLG9lPXMuZ2V0KFBlKSx7bGluazpWZX09b2Use3N0b3JlOmFlfT1WZTtlLnB1c2goaSwuLi5sKGFlLnNpemUpKSwkKCksZS5wdXNoKGxlLGcpLGUucHVzaChGLGcpLEkoTyksZS5wdXNoKGFlLm9wY29kZSxhZS5hbGlnbixhZS5vZmZzZXQpLGUucHVzaChGLGcpO2JyZWFrfX1kZWZhdWx0OntJKE8pO2JyZWFrfX1icmVha319cmV0dXJuIHp9LE09KE8sYT0wLHo9Mik9PntsZXR7bmFtZTpFLHBhdGg6Q309TyxmPU4oRSxcIkZsb2dyYW1cIiksUz1zLmdldChmKSx7bGluazptfT1TLHtzdG9yZTpMLGxvYWQ6dn09bSxuZT1hO3JldHVybiB1dCgpLGUucHVzaChpLDApLGUucHVzaChsZSxMZSksZS5wdXNoKGp0LFhlKSxlLnB1c2goR3QsWGUpLFEobmUreixuZSt6KzF8MCksZS5wdXNoKEYsTGUpLGUucHVzaChXbyksZS5wdXNoKG5zLDEpLGUucHVzaChpLC4uLmwoTC5zaXplKSksJCgpLFEobmUsbmUrMXwwKSxlLnB1c2goRixMZSksZS5wdXNoKGksdi5zaXplKSxlLnB1c2goTWUpLGUucHVzaChIKSxlLnB1c2godi5vcGNvZGUsdi5hbGlnbix2Lm9mZnNldCksZS5wdXNoKEwub3Bjb2RlLEwuYWxpZ24sTC5vZmZzZXQpLGZ0KCksZS5wdXNoKEYsTGUpLGUucHVzaChpLDEpLGUucHVzaChIKSxlLnB1c2gobGUsTGUpLGUucHVzaChzcywwKSxlLnB1c2goSHQpLGUucHVzaChIdCksTy5sZW5ndGh9LE5lPShPLGE9Mik9PntsZXR7bmFtZTp6LHBhdGg6RX09TyxDPU4oeixcIkZsb2dyYW1cIiksZj1zLmdldChDKSx7bGluazpTfT1mLHtzdG9yZTptLGxvYWQ6TH09UztyZXR1cm4gdXQoKSxZZSgpLGR0KCksZS5wdXNoKGksMCksZS5wdXNoKGxlLExlKSxlLnB1c2goanQsWGUpLGUucHVzaChHdCxYZSksZS5wdXNoKEYsZyksZS5wdXNoKGksLi4ubChBdCphKSksZS5wdXNoKEgpLGUucHVzaChzdCxmZSx1ZSksZS5wdXNoKEYsTGUpLGUucHVzaChXbyksZS5wdXNoKG5zLDEpLGUucHVzaChpLC4uLmwobS5zaXplKSksJCgpLGUucHVzaChGLGcpLGUucHVzaChzdCxmZSx1ZSksZS5wdXNoKEYsTGUpLGUucHVzaChpLEwuc2l6ZSksZS5wdXNoKE1lKSxlLnB1c2goSCksZS5wdXNoKEwub3Bjb2RlLEwuYWxpZ24sTC5vZmZzZXQpLGUucHVzaChtLm9wY29kZSxtLmFsaWduLG0ub2Zmc2V0KSxmdCgpLGUucHVzaChGLExlKSxlLnB1c2goaSwxKSxlLnB1c2goSCksZS5wdXNoKGxlLExlKSxlLnB1c2goc3MsMCksZS5wdXNoKEh0KSxlLnB1c2goSHQpLG50KCksTy5sZW5ndGh9LFg9KE8sYSk9PntsZXQgej1zLmdldChhKTtpZigheil0aHJvdyBuZXcgRXJyb3IoXCJObyBzaGFwZSBmb3VuZFwiKTtsZXR7b3Bjb2RlOkV9PXosQz16LmVuY29kZShPKTtlLnB1c2goRSwuLi5DKX0sUT0oTyxhKT0+e2Zvcig7TzxhOyllLnB1c2godHQsTyksTz1PKzF8MH07aWYoIVQpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB2YWx1ZSBwcm92aWRlZCB0byBhY3Rpb25WYWx1ZVwiKTtzd2l0Y2goVC50eXBlKXtjYXNlIEx0Ont4KFQpO2JyZWFrfWNhc2VcImluc3RhbmNlXCI6e2xldHtwYXRoOk8sbWVtYmVyczphfT1UO3ZhciBVZT1hLmxlbmd0aC0xfDA7Zm9yKGxldCB6PVVlO3o+PTA7ej16LTF8MCl7bGV0IEU9YVt6XSx7cGF0aDpDLHZhbHVlOmZ9PUU7YihmKX1icmVha31jYXNlIFF0OntsZXR7ZGF0YTpPfT1ULHtuYW1lOmEscGF0aDp6fT1PLEU9TihhLHopLEM9cy5nZXQoRSk7VC5sYXlvdXQ9PT1cIk5PTkVcIj9lLnB1c2goQy5vcGNvZGUsLi4uQy5ub25lKTpJKFQudmFsdWUpLG89bysxfDA7YnJlYWt9Y2FzZSBWczp7bGV0e2xpbms6T309VDtELm9wdGltaXphdGlvbjtsZXQgYT1LKE8pO289bythfDA7YnJlYWt9Y2FzZSB6bjp7bGV0e3ZhbHVlOk99PVQsYT1xZShPKTtpZihGZS5nZXQoYSk/LmRhdGEudHlwZT09PXEpe0koe25hbWU6YSx0eXBlOkplfSk7cmV0dXJufWlmKEllKE8pPy5uYW1lPT09cmUpe0koTyk7cmV0dXJufWxldCBFPVooTyxhKTtvPW8rRXwwO2JyZWFrfWNhc2UgTW86e2xldHt2YWx1ZTpPfT1UO3N3aXRjaChPLnR5cGUpe2Nhc2UgSmU6e2lmKER0LmdldChPLm5hbWUpJiZELmxpbmtWYWx1ZUxvYWQpe2xldCBhPUR0LmdldChPLm5hbWUpLHo9YS5zb3VyY2UubGVuZ3RoO3R5cGVvZiBhLnNvdXJjZS5saXRlcmFsPT09cmUudG9Mb3dlckNhc2UoKSYmKHo9bGl0ZXJhbC52YWx1ZS5saXRlcmFsLmxlbmd0aCksZS5wdXNoKGksLi4ubCh6KSl9ZWxzZXtsZXQgYT1DZS5nZXQoTy5uYW1lKTtRKGErMXwwLGErMnwwKX1icmVha319YnJlYWt9Y2FzZSBDbzp7bGV0e3ZhbHVlczpPfT1UO3V0KExlKSxZZSgpLFllKCk7Zm9yKGxldCBhIG9mIE8pe2xldCB6PUllKGEpLEU9Tih6Lm5hbWUsei5wYXRoKSxDPXMuZ2V0KEUpO2lmKHoubmFtZT09PXJlKUkoYSxlcyksZS5wdXNoKF9lKSxlLnB1c2goX2UpO2Vsc2UgaWYoei50eXBlPT09cXx8ei5sYXlvdXQ9PT1xKUkoYSxlcyksZS5wdXNoKF9lKSxlLnB1c2goX2UpLGUucHVzaChfZSk7ZWxzZSBpZihDPy50eXBlPT09YXQpY29uc29sZS5sb2coSWUoYSkpO2Vsc2UgaWYobHMuaW5jbHVkZXMoei5uYW1lKSl7bGV0e2xpbms6Zn09Qyx7c3RvcmU6Uyxsb2FkOm19PWY7ZS5wdXNoKGksLi4ubChZdCkpLCQoKSxlLnB1c2goaSwuLi5sKHNuLmluY2x1ZGVzKHoubmFtZSk/ZGw6YmwpKSxlLnB1c2goQmUsZmUsdWUpLGUucHVzaChpLC4uLmwoUy5zaXplKSksJCgpLEkoYSksei5tdXRhYmxlJiZlLnB1c2gobS5vcGNvZGUsbS5hbGlnbixtLm9mZnNldCksZS5wdXNoKFMub3Bjb2RlLFMuYWxpZ24sUy5vZmZzZXQpfWVsc2UgaWYoUnMuaW5jbHVkZXMoei5uYW1lKSl7bGV0e2xpbms6Zn09Qyx7c3RvcmU6Uyxsb2FkOm19PWY7ZS5wdXNoKGksLi4ubChZdCkpLCQoKSxlLnB1c2goaSwuLi5sKHoubmFtZT09PUdvP21sOlRsKSksZS5wdXNoKEJlLGZlLHVlKSxlLnB1c2goaSwuLi5sKFMuc2l6ZSkpLCQoKSxJKGEpLHoubXV0YWJsZSYmZS5wdXNoKG0ub3Bjb2RlLG0uYWxpZ24sbS5vZmZzZXQpLGUucHVzaChTLm9wY29kZSxTLmFsaWduLFMub2Zmc2V0KX1lbHNlIGlmKHoubmFtZT09PUZuKXtsZXR7bGluazpmfT1DLHtzdG9yZTpTLGxvYWQ6bX09ZjtlLnB1c2goaSwuLi5sKFMuc2l6ZSkpLCQoKSxJKGEpLHoubXV0YWJsZSYmZS5wdXNoKG0ub3Bjb2RlLG0uYWxpZ24sbS5vZmZzZXQpLGUucHVzaChTLm9wY29kZSxTLmFsaWduLFMub2Zmc2V0KX1lbHNle2xldHtsaW5rOmZ9PUMse3N0b3JlOlMsbG9hZDptfT1mO2UucHVzaChpLC4uLmwoUy5zaXplKSksJCgpLEkoYSksei5tdXRhYmxlJiZlLnB1c2gobS5vcGNvZGUsbS5hbGlnbixtLm9mZnNldCksZS5wdXNoKFMub3Bjb2RlLFMuYWxpZ24sUy5vZmZzZXQpfWZ0KCl9bnQoKSxudCgpLHV0KCksZS5wdXNoKEYsTGUpLGUucHVzaChGLGcpLGUucHVzaChGLExlKSxlLnB1c2godGwpLGUucHVzaChpLC4uLmwoQXQpKSxlLnB1c2goZWwpLG89bysyfDA7YnJlYWt9Y2FzZSB2ZTp7bGV0e2xpdGVyYWw6TyxuYW1lOmEscGF0aDp6fT1ULEU9TihhLHopLEM9cy5nZXQoRSk7aWYoVC5sYXlvdXQ9PT1xKXtCKFQpLG89byszfDA7cmV0dXJufWVsc2UgaWYoYT09PXJlKXtsZXQgZj1bXTtmb3IobGV0IG0gb2YgTylmLnB1c2goe3R5cGU6dmUsbGl0ZXJhbDptLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoKSxuYW1lOm10LHBhdGg6XCJGbG9ncmFtXCJ9KTtsZXQgUz17Li4uVCxuYW1lOm10LGxheW91dDpxLGNvbnRhaW5zOm51bGwscXVhbnRpdHk6e2NhcGFjaXR5OntsaXRlcmFsOmYubGVuZ3RoLnRvU3RyaW5nKCksdHlwZTp2ZSxuYW1lOm10LHBhdGg6UWV9LHNpemU6e2xpdGVyYWw6Zi5sZW5ndGgudG9TdHJpbmcoKSx0eXBlOnZlLG5hbWU6bXQscGF0aDpRZX19LGxpdGVyYWw6Zn07QihTKSxlLnB1c2goX2UpLG89bysyfDA7cmV0dXJufWlmKEMpaWYoQy50eXBlPT09ZGUpRyhPLEUpLG89bysyfDA7ZWxzZSBpZihDLnR5cGU9PT1hdCl7aWYoWChPLEUpLG89byszfDAsVC5wcm9wcz8ubGVuZ3RoPjApe2xldCBmPU4oYSx6KSxTPU4oTyxmKSxMPXMuZ2V0KFMpLmluZGl2aXNpYmxlcy5tYXBJbmRleCx2PU9iamVjdC5mcmVlemUoe3R5cGU6dmUsbmFtZTpPLGxpdGVyYWw6VC5wcm9wcy5tYXAobmU9Pih7bmFtZTpMLmdldChULnByb3BzLmluZGV4T2YobmUpKS50cmFpbCx2YWx1ZTpuZX0pKSxwYXRoOmZ9KTtHKHYubGl0ZXJhbCxTKX1lbHNlIGUucHVzaChpLDApLGUucHVzaChpLDApO3JldHVybn1lbHNlIFgoTyxFKSxvPW8rMXwwO2Vsc2UgdGhyb3cgY29uc29sZS5sb2coRSksbmV3IEVycm9yKFwiTk8gU0hBUEUgRk9VTkQhISEhISEhISFcIixUKTticmVha31jYXNlIHdzOntsZXR7YXJyYXk6TyxpbmRleDphfT1ULHo9cWUoTyksRT1DZS5nZXQoeiksQz1JZShPKTtFIT1udWxsO2xldCBmPSgpPT57SShPKSxlLnB1c2goX2UpLGUucHVzaChfZSl9LFM9TihDLm5hbWUsQy5wYXRoKTttZT0hMDtsZXQgbT1zLmdldChTKTtzd2l0Y2gobS50eXBlKXtjYXNlIEhlOmlmKEMuY29udGFpbnM9PT1xfHxDPy50eXBlPT09cSYmQz8ubGF5b3V0PT09cXx8Qz8ubmFtZT09PXJlJiZDLmNvbnRhaW5zKUUhPW51bGw/UShFLEUrMXwwKTpmKCksSShhKSxlLnB1c2goaSwuLi5sKEF0KSksZS5wdXNoKE1lKSxlLnB1c2goSCksZS5wdXNoKGxlLGcpLFllKCksTmUoQyk7ZWxzZSBpZihDLm5hbWU9PT1yZSYmQy50eXBlPT09cSlFIT1udWxsP1EoRSxFKzF8MCk6ZigpLEkoYSksZS5wdXNoKGksLi4ubChBdCkpLGUucHVzaChNZSksZS5wdXNoKEgpLGUucHVzaChsZSxnKSxZZSgpLE5lKEMsMik7ZWxzZXtsZXR7bGluazpMfT1tLHtsb2FkOnZ9PUw7RSE9bnVsbD9RKEUsRSsxfDApOmYoKSxJKGEpLGUucHVzaChpLC4uLmwodi5zaXplKSksZS5wdXNoKE1lKSxlLnB1c2goSCksZS5wdXNoKHYub3Bjb2RlLHYuYWxpZ24sdi5vZmZzZXQpLG89bysxfDA7YnJlYWt9Y2FzZSBkZTp7RT9RKEUsRSsxfDApOmYoKSxJKGEpLEM/LnR5cGU9PT1xP0M/Lm5hbWUhPT1yZSYmIUM/LmNvbnRhaW5zP2UucHVzaChpLC4uLmwoQXQpKTpDLm5hbWU9PT1yZT9lLnB1c2goaSwuLi5sKGtuKSk6ZS5wdXNoKGksLi4ubChtcykpOmUucHVzaChpLC4uLmwodnMpKSxlLnB1c2goTWUpLGUucHVzaChIKSxlLnB1c2goc3QsZmUsdWUpLFEoRSxFKzF8MCksZS5wdXNoKGksLi4ubChBdCkpLEkoYSksQz8udHlwZT09PXE/Qz8ubmFtZSE9PXJlJiYhQz8uY29udGFpbnM/ZS5wdXNoKGksLi4ubChBdCkpOkMubmFtZT09PXJlP2UucHVzaChpLC4uLmwoa24pKTplLnB1c2goaSwuLi5sKG1zKSk6ZS5wdXNoKGksLi4ubCh2cykpLGUucHVzaChNZSksZS5wdXNoKEgpLGUucHVzaChIKSxlLnB1c2goc3QsZmUsdWUpLG89bysyfDA7YnJlYWt9fWJyZWFrfWNhc2UgVW86e0koVC52YWx1ZSk7YnJlYWt9Y2FzZSBKZTp7bGV0e25hbWU6T309VCxhPUNlLmdldChPKSx6PUZlLmdldChPKTtpZihELm9wdGltaXphdGlvbil7bGV0IGY9RHQuZ2V0KHoubmFtZSk7aWYoZil7bGV0IFM9bT0+bS5uYW1lPT09RG4/bS5saXRlcmFsPT09XCJGQUxTRVwifHxtLmxpdGVyYWw9PVwiMFwiPzA6MTpwYXJzZUludChmLnNvdXJjZS5saXRlcmFsLDEwKTtpZihmLnNvdXJjZS5uYW1lIT09cmUmJmYuc291cmNlLmxheW91dCE9PXEpe2xldCBtPVMoZi5zb3VyY2UpO2UucHVzaChpLC4uLmwobSkpO3JldHVybn19fWxldHtkYXRhOkV9PXosQz1zLmdldChOKEUubmFtZSxFLnBhdGgpKTtzd2l0Y2goRS50eXBlKXtjYXNlIEJ0OntFLm5hbWU9PT1xPyhRKGEsYStFdHwwKSxvPW8rRXR8MCk6Qy50eXBlPT09ZGU/KFEoYSxhK3RzfDApLG89byt0c3wwKTpFLm5hbWU9PT1yZT8oUShhLGErS3R8MCksbz1vK0t0fDApOihRKGEsYStUc3wwKSxvPW8rVHN8MCk7YnJlYWt9Y2FzZSBxOntuPT09ZXMmJkUucXVhbnRpdHkuY2FwYWNpdHk/KE0oRSxhKSxlLnB1c2goRixnKSxFLnF1YW50aXR5LmNhcGFjaXR5PyhJKEUucXVhbnRpdHkuc2l6ZSksSShFLnF1YW50aXR5LmNhcGFjaXR5KSk6UShhKzEsYStFdHwwKSk6KFEoYSxhK0V0fDApLG89bytFdHwwKTticmVha31jYXNlIFF0OmNhc2UgU3Q6e2xldHtuYW1lOmYscGF0aDpTfT1FLG09TihmLFMpLEw9cy5nZXQobSk7c3dpdGNoKEUubGF5b3V0KXtjYXNlIHE6e1EoYSxhK0V0fDApLG89bytFdHwwO2JyZWFrfWRlZmF1bHQ6e3N3aXRjaChMLnR5cGUpe2Nhc2UgSGU6e2lmKGY9PT1yZSl7bj09PWVzPyh1dCgpLFllKCksT2UoXCJzYXZlXCIpLGUucHVzaChpLDApLGUucHVzaChsZSxnKSxlLnB1c2goanQsWGUpLGUucHVzaChHdCxYZSksZS5wdXNoKGksWXQpLCQoKSxlLnB1c2godHQsYSksZS5wdXNoKEYsZyksZS5wdXNoKGksLi4ubChBdCkpLGUucHVzaChNZSksZS5wdXNoKEgpLGUucHVzaChzdCxmZSx1ZSksZS5wdXNoKEJlLGZlLHVlKSxlLnB1c2goRixnKSxlLnB1c2goaSwxKSxlLnB1c2goSCksZS5wdXNoKGxlLGcpLGUucHVzaChldCwkbyksT2UoXCJtZXJnZVwiKSxlLnB1c2goRixnKSxlLnB1c2godHQsYSsxKSxlLnB1c2goZ3MpLGUucHVzaChucywxKSxlLnB1c2goc3MsMCksZS5wdXNoKEh0KSxlLnB1c2goSHQpLG50KCksT2UoXCJ1bmRvXCIpLGUucHVzaChGLGcpLGUucHVzaCh0dCxhKzEpKTooUShhLGErMnwwKSxvPW8rMnwwKTticmVha31lbHNlIFEoYSxhKzF8MCk7YnJlYWt9Y2FzZSBhdDp7UShhLGErVW58MCksbz1vK1VufDA7YnJlYWt9Y2FzZSBkZTp7UShhLGErdHN8MCksbz1vK3RzfDA7YnJlYWt9fWJyZWFrfX1icmVha319YnJlYWt9Y2FzZSBQdDp7bGV0e3ZhbHVlOk8sdHJhaWw6YX09VCx6PU8ubmFtZXx8Ty5saW5rfHxPLnZhbHVlO21lPSEwO2xldCBFPUZlLmdldCh6KSxDO2lmKEUpe2xldHtkYXRhOlRlfT1FO0M9TihUZS5uYW1lLFRlLnBhdGgpfWVsc2V7bGV0IFRlPUllKE8pO0M9TihUZS5kYXRhPy5uYW1lLFRlLmRhdGE/LnBhdGgpfWxldCBmPXMuZ2V0KEMpO2lmKGYudHlwZT09PWF0KXtsZXR7b3Bjb2RlOlRlfT1mO1llKCksSShPKSxlLnB1c2goX2UpLGUucHVzaChsZSxnKTtsZXQga2U9Zi5sYWJlbHMuZmluZChNdD0+TXQucHJvcHMuaW5jbHVkZXMoYVswXSkpO2lmKGUucHVzaChfZSksZS5wdXNoKEYsZyksIWtlKXtjb25zb2xlLmVycm9yKFwiTG9hZCB2YWx1ZTogVW5rbm93biBlbnVtIGxhYmVsIHZhbHVlLi4uLi5cIik7cmV0dXJufWxldCBvdD1zLmdldChOKGtlLm5hbWUsQykpLmluZGl2aXNpYmxlcy5tYXBUcmFpbC5nZXQoYVswXSk7ZS5wdXNoKGksLi4ubChvdC5hZGRyZXNzKSksZS5wdXNoKEgpO2xldCAkZT1zLmdldChOKG90LmRhdGEubmFtZSxvdC5kYXRhLnBhdGgpKSx7bG9hZDpJdH09JGUubGluaztlLnB1c2goSXQub3Bjb2RlLEl0LmFsaWduLEl0Lm9mZnNldCksbnQoKTtyZXR1cm59bGV0e2luZGl2aXNpYmxlczpTfT1mLHttYXBUcmFpbDptfT1TLEw9SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShhKSksdj1tLmdldChhWzBdKSx7YWRkcmVzczpuZX09dixQZT1bbmVdLG9lPWY7Zm9yKDtMLmxlbmd0aD4wOyl7bGV0IFRlPUwuc2hpZnQoKTtpZihMLmxlbmd0aD4wKXtsZXQga2U9b2UubWVtYmVycy5nZXQoVGUpLHh0PU4oa2UubmFtZSxrZS5wYXRoKTtpZihvZT1zLmdldCh4dCksb2UuaW5kaXZpc2libGVzKXtsZXR7aW5kaXZpc2libGVzOm90fT1vZSx7bWFwVHJhaWw6JGV9PW90LEl0PSRlLmdldChMWzBdKSx7YWRkcmVzczpNdH09SXQ7UGUucHVzaChNdCl9Y29udGludWV9b2U9b2UubWVtYmVycy5nZXQoVGUpfWxldCBWZT1OKG9lLm5hbWUsb2UucGF0aCksYWU9cy5nZXQoVmUpLGJlPUNlLmdldCh6KTtmb3IoZS5wdXNoKHR0LC4uLmwoYmUpKTtQZS5sZW5ndGg+MTspe2xldCBUZT1QZS5zaGlmdCgpO2UucHVzaChpLC4uLmwoVGUpKSxlLnB1c2goSCksZS5wdXNoKHN0LGZlLHVlKX1pZihlLnB1c2goaSwuLi5sKFBlWzBdKSksZS5wdXNoKEgpLG9lLnR5cGU9PT1xfHxvZS5sYXlvdXQ9PT1xKWUucHVzaChsZSxnKSxlLnB1c2goRixnKSxlLnB1c2goaSwuLi5sKF90KSksZS5wdXNoKEgpLGUucHVzaChGLGcpLGUucHVzaChpLC4uLmwoVHQpKSxlLnB1c2goSCksZS5wdXNoKEYsZyk7ZWxzZSBpZihvZS5uYW1lPT09cmUpe2lmKGUucHVzaChsZSxnKSxuPT09ZXMpe1llKCksTmUob2UsMSksZS5wdXNoKGksMCksZS5wdXNoKGksMCk7cmV0dXJufWUucHVzaChGLGcpLGUucHVzaChpLC4uLmwoVHQpKSxlLnB1c2goSCksZS5wdXNoKEYsZyl9ZWxzZSBpZihhZS50eXBlPT09ZGUpZS5wdXNoKGxlLGcpLGUucHVzaChGLGcpLGUucHVzaChpLC4uLmwoVHQpKSxlLnB1c2goSCksZS5wdXNoKEYsZyk7ZWxzZSBpZihhZS50eXBlPT09YXQpZS5wdXNoKGxlLGcpLGUucHVzaChGLGcpLGUucHVzaChzdCxmZSx1ZSksZS5wdXNoKEYsZyksZS5wdXNoKHN0LGZlLHVlKSxlLnB1c2goRixnKSxlLnB1c2goc3QsZmUsdWUpO2Vsc2UgaWYoYWUubGluayl7bGV0e2xpbms6VGV9PWFlLHtsb2FkOmtlfT1UZTtlLnB1c2goa2Uub3Bjb2RlLGtlLmFsaWduLGtlLm9mZnNldCl9ZWxzZSB0aHJvdyBFcnJvcihcIlVuaGFuZGxlZCBDYXNlOiBDb3VsZCByZWFkIHRvIHByb2dyYW0gbm90IHJ1bm5pbmchISEhXCIpO2JyZWFrfX19LGplPWs9PntsZXR7bmFtZTpULGN1cnJlbnRJbmRleDpLfT1rO2lmKEs9PT0wKWUucHVzaChDdCxDZS5zaXplKzEpO2Vsc2UgaWYoZS5wdXNoKHR0LENlLnNpemUrMSksVD09PVwiPT1cIillLnB1c2gocXApO2Vsc2UgaWYoVD09PVwiIT1cIillLnB1c2goJHApO2Vsc2UgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIG9wZXJhdG9yICR7VH0gZm9yIG9iamVjdHNgKX0sWmU9az0+e2xldHttZW1iZXI6VH09ayx7aXNPYmplY3Q6SyxpbmRleDpCLGFkZHJlc3M6R309VDtpZihLKXtlLnB1c2godHQsLi4ubChCKSksZS5wdXNoKGksLi4ubChHKSksZS5wdXNoKEgpLGUucHVzaCh0dCwuLi5sKEIpKSxlLnB1c2goaSwuLi5sKEcrVHQpKSxlLnB1c2goSCk7cmV0dXJufWUucHVzaCh0dCwuLi5sKEIpKSxlLnB1c2goaSwuLi5sKEcpKSxlLnB1c2goSCl9O2ZvcihiKHQpO3AubGVuZ3RoPjA7KXtsZXQgaz1wLnNoaWZ0KCk7c3dpdGNoKGsudHlwZSl7Y2FzZVwiY2FsbFwiOntlZShrKTticmVha31jYXNlXCJ2YWx1ZVwiOntpZShrKTticmVha31jYXNlIGRzOntaZShrKTticmVha31jYXNlIGpvOntqZShrKTticmVha319fXJldHVybiBvfSxYdD10PT57bGV0IG49KHAsXyk9Pntmb3IoO3A8XzspXz1fLTF8MCxlLnB1c2goQ3QsXyl9LG89KHAsXyk9PntpZih5dChfLCEwKSl7bihwLHArMXwwKTtyZXR1cm59c3dpdGNoKF8udHlwZSl7Y2FzZSBCdDp7Xy5uYW1lPT09cT9uKHAscCtFdHwwKTpfLm5hbWU9PT1yZT9uKHAscCtLdHwwKTpuKHAscCtUc3wwKTticmVha31jYXNlIHJlOntuKHAscCtLdHwwKTticmVha31jYXNlIHE6e24ocCxwK0V0fDApO2JyZWFrfWNhc2UgUXQ6Y2FzZSBTdDp7bGV0e25hbWU6YixwYXRoOlJ9PV8saj1OKGIsUiksVT1zLmdldChqKTtzd2l0Y2goYil7Y2FzZSByZTp7bihwLHArMnwwKTticmVha31jYXNlIHE6e24ocCxwK051bWJlcihfLnF1YW50aXR5LmNhcGFjaXR5LmxpdGVyYWwpfDApO2JyZWFrfWRlZmF1bHQ6e3N3aXRjaChVLnR5cGUpe2Nhc2UgSGU6e2I9PT1yZT9uKHAscCsyfDApOm4ocCxwKzF8MCk7YnJlYWt9Y2FzZSBhdDp7bihwLHArM3wwKTticmVha31jYXNlIGRlOntuKHAscCsyfDApO2JyZWFrfX1icmVha319YnJlYWt9fX07c3dpdGNoKHQudHlwZSl7Y2FzZSBKZTp7bGV0e25hbWU6cH09dCxfPUNlLmdldChwKSxiPUZlLmdldChwKSx7ZGF0YTpSfT1iO28oXyxSKTticmVha31jYXNlIFB0OntsZXR7dmFsdWU6cCx0cmFpbDpffT10LHtuYW1lOmJ9PXAsUj1GZS5nZXQoYikse2RhdGE6an09UixVPU4oai5uYW1lLGoucGF0aCkseD1zLmdldChVKSx7aW5kaXZpc2libGVzOmVlfT14LHttYXBUcmFpbDppZX09ZWUsamU9Xy5qb2luKFwiLlwiKSxaZT1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KF8pKSxrPWllLmdldChqZSkse2luZGV4OlR9PWssSz14O2Zvcig7WmUubGVuZ3RoPjA7KXtsZXQgRz1aZS5zaGlmdCgpO0s9Sy5tZW1iZXJzLmdldChHKX1sZXQgQj1DZS5nZXQoYik7Sy50eXBlPT1xP24oQitUfDAsQitUK0V0fDApOksudHlwZT09cmU/bihCK1R8MCxCK1QrS3R8MCk6bihCK1R8MCxCK1QrMXwwKTticmVha319fSx5PSh0LG4pPT57bGV0e2FycmF5Om8saW5kZXg6cH09dDttZT0hMDtsZXQgXz0wLGI9Q2UuZ2V0KG8ubmFtZSksUj0oKT0+e2UucHVzaCh0dCxiKX0saj1GZS5nZXQocWUobykpLHtkYXRhOlV9PWose25hbWU6eCxwYXRoOmVlfT1VLGllPU4oeCxlZSksamU9cy5nZXQoaWUpO3N3aXRjaChqZS50eXBlKXtjYXNlIEhlOntSKCksSShwKTtsZXR7bGluazpaZX09amUse3N0b3JlOmt9PVplO2UucHVzaChpLGsuc2l6ZSksZS5wdXNoKE1lKSxlLnB1c2goSCk7bGV0IFQ9SWUobik7SShuKSxULm11dGFibGUmJmUucHVzaChzdCxmZSx1ZSksZS5wdXNoKGsub3Bjb2RlLGsuYWxpZ24say5vZmZzZXQpLF89Xys0fDA7YnJlYWt9Y2FzZSBkZTp7UigpLEkocCksZS5wdXNoKGksWXQpLGUucHVzaChNZSksZS5wdXNoKEgpLGUucHVzaChsZSxnKSxlLnB1c2goRixnKSxlLnB1c2goRixnKSxlLnB1c2goaSxZdCksZS5wdXNoKEgpLEkobiksZS5wdXNoKEJlLGZlLHVlKSxlLnB1c2goQmUsZmUsdWUpLF89Xys0fDA7YnJlYWt9fXJldHVybiBffSx1PSh0LG4pPT57bGV0e3ZhbHVlOm8sdHJhaWw6cH09dCx7bmFtZTpffT1vO21lPSEwO2xldCBiPUZlLmdldChfKSx7ZGF0YTpSfT1iLGo9TihSLm5hbWUsUi5wYXRoKSxVPXMuZ2V0KGopLHtpbmRpdmlzaWJsZXM6eH09VSx7bWFwVHJhaWw6ZWV9PXgsaWU9cC5qb2luKFwiLlwiKSxqZT1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHApKSxaZT1lZS5nZXQoaWUpLHthZGRyZXNzOmt9PVplLFQ9VTtmb3IoO2plLmxlbmd0aD4wOyl7bGV0IEc9amUuc2hpZnQoKTtpZihqZS5sZW5ndGg+MCl7bGV0IFo9VC5tZW1iZXJzLmdldChHKSxNPU4oWi5uYW1lLFoucGF0aCk7VD1zLmdldChNKTtjb250aW51ZX1UPVQubWVtYmVycy5nZXQoRyl9bGV0IEs9TihULm5hbWUsVC5wYXRoKSxCPXMuZ2V0KEspO3N3aXRjaChCLnR5cGUpe2Nhc2UgSGU6e2xldHtsaW5rOkd9PUIse3N0b3JlOlp9PUcsTT1DZS5nZXQoXyk7ZS5wdXNoKHR0LC4uLmwoTSkpLGUucHVzaChpLC4uLmwoaykpLGUucHVzaChIKSxJKG4pLGUucHVzaChaLm9wY29kZSxaLmFsaWduLFoub2Zmc2V0KTticmVha319fSxQPSh0LG4pPT57bGV0e2xpbms6b309dDttZT0hMDtsZXQgcD0wLHtuYW1lOl8scGF0aDpiLGxheW91dDpSfT1JZShvKSxqPU4oXyxiKSxVPXMuZ2V0KGopO2lmKF89PT1xfHxSPT09cSl7SShvKSxlLnB1c2goX2UpLGUucHVzaChsZSxnKTtsZXQgeD1DZS5nZXQocWUobykpO0kobiksZS5wdXNoKEN0LHgrMnwwKSxlLnB1c2goQ3QseCsxfDApLGUucHVzaChDdCx4KSxlLnB1c2goRixnKSxlLnB1c2goZXQsTG4pLE9lKFwiZGVhbGxvY1wiKX1lbHNlIGlmKF89PT1yZSl7SShvKSxlLnB1c2goX2UpLGUucHVzaChsZSxnKTtsZXQgeD1DZS5nZXQocWUobykpO0kobiksZS5wdXNoKEN0LHgrMXwwKSxlLnB1c2goQ3QseCksZS5wdXNoKEYsZyksZS5wdXNoKGV0LExuKSxPZShcImRlYWxsb2NcIik7cmV0dXJufXN3aXRjaChVLnR5cGUpe2Nhc2UgSGU6e0kobyksSShuKTtsZXR7bGluazp4fT1VLHtzdG9yZTplZX09eDtlLnB1c2goZWUub3Bjb2RlLGVlLmFsaWduLGVlLm9mZnNldCkscD1wKzF8MDticmVha31jYXNlIGRlOntsZXQgeD0wLGVlPShHLFosTT1cIlwiKT0+e2xldCBOZT1NP2Ake019LiR7Ry5uYW1lfWA6Ry5uYW1lLFg9Wi5nZXQoTmUpO2lmKFgpe2xldHtkYXRhOlF9PVgsVWU9TihRLm5hbWUsUS5wYXRoKSxPPXMuZ2V0KFVlKSx7c3RvcmU6YX09Ty5saW5rO0kobyksZS5wdXNoKF9lKSxlLnB1c2goaSwuLi5sKFguYWRkcmVzcykpLGUucHVzaChIKSxJKEcudmFsdWUpLGUucHVzaChhLm9wY29kZSxhLmFsaWduLGEub2Zmc2V0KX1lbHNlIGlmKEcudmFsdWUmJkcudmFsdWUubGl0ZXJhbClmb3IobGV0IFEgb2YgRy52YWx1ZS5saXRlcmFsKWVlKFEsWixOZSl9O2lmKG4udHlwZT09PUplKXtsZXR7bmFtZTpHfT1uO2lmKHg9Q2UuZ2V0KEcpLHQubGluay5uYW1lLnN0YXJ0c1dpdGgoZHMpKXtsZXQgWj1DZS5nZXQodC5saW5rLm5hbWUpLHtuYW1lOk0scGF0aDpOZX09RmUuZ2V0KEcpLFg9TihNLE5lKSxRPXMuZ2V0KFgpLHtpbmRpdmlzaWJsZXM6VWV9PVEse21hcFRyYWlsOk99PVVlO2ZvcihsZXQgYSBvZiBPKXtsZXR7ZGF0YTp6fT1hLEU9Tih6Lm5hbWUsei5wYXRoKSxDPXMuZ2V0KEUpLHtsb2FkOmYsc3RvcmU6U309Qy5saW5rO2UucHVzaChpLC4uLmwoWikpLGUucHVzaChpLC4uLmwoYS5hZGRyZXNzKSksZS5wdXNoKEgpLGUucHVzaChpLC4uLmwoeCkpLGUucHVzaChpLC4uLmwoYS5hZGRyZXNzKSksZS5wdXNoKEgpLGUucHVzaChmLm9wY29kZSxmLmFsaWduLGYub2Zmc2V0KSxlLnB1c2goUy5vcGNvZGUsUy5hbGlnbixTLm9mZnNldCl9cmV0dXJufXJldHVybiBJKG8pLGUucHVzaChfZSksZS5wdXNoKHR0LC4uLmwoeCkpLGUucHVzaChCZSxmZSx1ZSksSShvKSxlLnB1c2goX2UpLGUucHVzaChpLC4uLmwoVHQpKSxlLnB1c2goSCksZS5wdXNoKHR0LC4uLmwoeCsxfDApKSxlLnB1c2goQmUsZmUsdWUpLHA9cCsyfDAscH1sZXR7bGl0ZXJhbDppZSxuYW1lOmplLHBhdGg6WmV9PW4saz1OKGplLFplKSxUPXMuZ2V0KGspLHtpbmRpdmlzaWJsZXM6S309VCx7bWFwVHJhaWw6Qn09Sztmb3IobGV0IEcgb2YgaWUpZWUoRyxCKX19cmV0dXJuIHB9LFk9KHQsbik9PntsZXR7dHlwZTpvLGxpbms6cH09bixfPTAsYj1lZT0+e2xldCBpZT1BcnJheS5mcm9tKGVlLm1lbWJlcnMudmFsdWVzKCkpLnJlZHVjZSgoSyxCKT0+Qj9LKzE6SywwKTt1dCgpO2xldHtpbmRpdmlzaWJsZXM6amV9PWVlLHttYXBUcmFpbDpaZX09amUsaz0oSyxCKT0+e2xldHtzdG9yZTpHLGxvYWQ6Wn09Sy5saW5rLHthZGRyZXNzOk19PVplLmdldChCKTtlLnB1c2goaSwuLi5sKEcuc2l6ZSkpLCQoKSxJKHApLGUucHVzaChfZSksZS5wdXNoKGksLi4ubChNKSksZS5wdXNoKEgpLGUucHVzaChaLm9wY29kZSxaLmFsaWduLFoub2Zmc2V0KSxlLnB1c2goRy5vcGNvZGUsRy5hbGlnbixHLm9mZnNldCl9LFQ9KEssQik9PntlLnB1c2goaSwuLi5sKF90KSksJCgpLGUucHVzaChsZSxMZSk7Zm9yKGxldFtaLE1db2YgSy5tZW1iZXJzKXtpZighTSljb250aW51ZTtsZXQgTmU9TihNLm5hbWUsTS5wYXRoKSxYPXMuZ2V0KE5lKTtpZihYLnR5cGU9PT1kZSl7WWUoKSxUKFgsYCR7Qn0uJHtafWApO2NvbnRpbnVlfWxldCBRPWAke0J9LiR7Wn1gO2soWCxRKX1lLnB1c2goRixMZSksZS5wdXNoKEYsTGUpLGUucHVzaChpLC4uLmwoX3QpKSxlLnB1c2goSCksZS5wdXNoKEJlLGZlLHVlKTtsZXQgRz1BcnJheS5mcm9tKEsubWVtYmVycy52YWx1ZXMoKSkucmVkdWNlKChaLE0pPT5NP1orMTpaLDApO2UucHVzaChGLExlKSxlLnB1c2goaSwuLi5sKFR0KSksZS5wdXNoKEgpLGUucHVzaChpLC4uLmwoRykpLGUucHVzaChCZSxmZSx1ZSksbnQoKX07Zm9yKGxldFtLLEJdb2YgZWUubWVtYmVycyl7aWYoIUIpY29udGludWU7bGV0IEc9TihCLm5hbWUsQi5wYXRoKSxaPXMuZ2V0KEcpO2lmKFoudHlwZT09PWRlKXtUKFosSyk7Y29udGludWV9ayhaLEspfWUucHVzaChGLGcpLGUucHVzaChpLC4uLmwoaWUpKX0se25hbWU6UixwYXRoOmp9PUllKHB8fG4pLFU9TihSLGopLHg9cy5nZXQoVSk7c3dpdGNoKHgudHlwZSl7Y2FzZSBIZTpjYXNlIGRlOntpZih0LnR5cGU9PT1KZSlyZXR1cm4gYih4KSxYdCh0KSxfO2JyZWFrfX1yZXR1cm4gX30sSj0odCxuLG8pPT57bGV0IHA9cy5nZXQodCksXz1SPT57c3dpdGNoKFIudHlwZSl7Y2FzZSBKZTp7bGV0e25hbWU6an09UixVPUNlLmdldChqKTtlLnB1c2godHQsVSk7YnJlYWt9Y2FzZSB2ZTp7bGV0e2xpdGVyYWw6an09UixVPXAudHlwZT09PUhlP2o6cC5ldmFsdWF0ZShqKSx4PWwoVSk7ZS5wdXNoKGksLi4ueCk7YnJlYWt9fX0sYj0oKT0+e3N3aXRjaChwLnR5cGUpe2Nhc2UgYXQ6Y2FzZSBIZTp7ZS5wdXNoKFhvKSxlLnB1c2gobnMsMCk7YnJlYWt9fX07c3dpdGNoKHAudHlwZSl7Y2FzZSBhdDp7SShuKSxlLnB1c2goX2UpLGUucHVzaChfZSksSShvKSxlLnB1c2goX2UpLGUucHVzaChfZSksYigpO2JyZWFrfWNhc2UgSGU6e0kobiksSShvKSxiKCk7YnJlYWt9fX0sdz1bXSxXPXQ9PntsZXQgbj17dHlwZTpWbyxzdGF0ZW1lbnQ6dH07dy51bnNoaWZ0KG4pfSx5ZT0oKT0+e2xldCB0PXt0eXBlOkhvfTt3LnVuc2hpZnQodCl9O3cudW5zaGlmdCh7dHlwZTp6dH0pO2xldCB6ZT0odCxuKT0+e2lmKHQubWVtYmVycylmb3IobGV0W28scF1vZiB0Lm1lbWJlcnMuZW50cmllcygpKXtsZXQgXz1OKHA/Lm5hbWUscD8ucGF0aCksYj1zLmdldChfKTtpZihiJiZiLnR5cGU9PT1kZSl7bGV0IFI9emUoYixfLG4pO1ImJmhlLnB1c2goUil9fXJldHVybiB0Lm1lbWJlcnMmJnQubWVtYmVycy5oYXModm8pP246bnVsbH0saGU9W107VnQuZm9yRWFjaCh0PT57bGV0IG49Tih0LmRhdGEubmFtZSx0LmRhdGEucGF0aCksbz1zLmdldChuKTtpZihvJiZvLnR5cGU9PT1kZSl7bGV0IHA9emUobyxuKTtwJiZoZS5wdXNoKHApfX0pO2xldCB4ZT1oZS5tYXAodD0+KHt0eXBlOkRvLGV4cHJlc3Npb246e3R5cGU6THQsbmFtZTp2byxwYXRoOnQsaW5wdXRzOltdfX0pKTtmb3IobGV0IHQgb2YgeGUpVyh0KTt2YXIgRWU9eHMubGVuZ3RoLTF8MDtmb3IobGV0IHQ9RWU7dD49MDt0PXQtMXwwKXtsZXQgbj14c1t0XTtXKG4pfWxldCB3ZT10PT57bGV0e3RhcmdldDpuLHNvdXJjZTpvfT10O2lmKEQub3B0aW1pemF0aW9uKXtpZihvLnR5cGU9PT12ZSYmby5wYXRoPT09UWUpe2xldCBiPXFlKG4pO2ImJkR0LnNldChiLHt0YXJnZXQ6bixzb3VyY2U6b30pfW8udHlwZSE9PXZlJiZEdC5nZXQobi5uYW1lfHxcIlwiKSYmRHQuZGVsZXRlKG4ubmFtZSl9aWYobi50eXBlPT09Rm8pe1AobixvKTtyZXR1cm59aWYobi50eXBlPT09VXApe3kobixvKTtyZXR1cm59aWYobi50eXBlPT09UHQpe3UobixvKTtyZXR1cm59bGV0IHAsXz1JZShvKTtpZihfJiYocD1zLmdldChOKF8ubmFtZSxfLnBhdGgpKSkscCYmcC50eXBlPT09ZGUmJl8udHlwZSE9PXZlKXtsZXQgYj1vO2lmKG8udHlwZT09PVZzKXtJKG8ubGluayksWHQobik7cmV0dXJufWI9e3R5cGU6XCJ2YWx1ZV9jb3B5XCIsbGluazpvfSxZKG4sYik7cmV0dXJufUkobyxlcyksWHQobil9LEdlPXQ9PntsZXR7c3RhdGVtZW50czpufT10O2UucHVzaChqdCxYZSksZS5wdXNoKEd0LFhlKTtsZXQgbz17dHlwZTp6dCxsYXlvdXQ6YnN9O3cudW5zaGlmdChvKSx3LnVuc2hpZnQobyksdy51bnNoaWZ0KHt0eXBlOndvfSk7dmFyIHA9bi5sZW5ndGgtMXwwO2ZvcihsZXQgXz1wO18+PTA7Xz1fLTF8MCl7bGV0IGI9bltfXTtXKGIpfX0scnM9dD0+e2xldHtzdGF0ZW1lbnRzOm4sY29uZGl0aW9uOm99PXQ7ZS5wdXNoKGp0LFhlKSxlLnB1c2goR3QsWGUpO2xldCBwPXt0eXBlOnp0LGxheW91dDpic307dy51bnNoaWZ0KHApLHcudW5zaGlmdChwKSx3LnVuc2hpZnQoe3R5cGU6Q24sY29uZGl0aW9uOm99KTt2YXIgXz1uLmxlbmd0aC0xfDA7Zm9yKGxldCBiPV87Yj49MDtiPWItMXwwKXtsZXQgUj1uW2JdO1coUil9fSx2dD10PT57bGV0e3N0YXRlbWVudHM6bixjb2xsZWN0aW9uOm8saW5kZXg6cCxpdGVyYXRvcjpffT10O2UucHVzaChpLDApLHA/ZS5wdXNoKEN0LENlLmdldChwKSk6ZS5wdXNoKGxlLGcpLGUucHVzaChqdCxYZSksZS5wdXNoKEd0LFhlKTtsZXQgYj17dHlwZTp6dCxsYXlvdXQ6YnN9O3cudW5zaGlmdChiKSx3LnVuc2hpZnQoYiksdy51bnNoaWZ0KHt0eXBlOktvLGluZGV4OnB9KTt2YXIgUj1uLmxlbmd0aC0xfDA7Zm9yKGxldCBqPVI7aj49MDtqPWotMXwwKXtsZXQgVT1uW2pdO1coVSl9dy51bnNoaWZ0KHt0eXBlOkJvLGNvbGxlY3Rpb246byxpdGVyYXRvcjpfLGluZGV4OnB9KX0sRGU9dD0+e2xldHtzdGF0ZW1lbnRzOm59PXQ7dC5pbml0aWFsaXplciYmd2UodC5pbml0aWFsaXplciksZS5wdXNoKGp0LFhlKSxlLnB1c2goR3QsWGUpO2xldCBvPXt0eXBlOnp0LGxheW91dDpic307dy51bnNoaWZ0KG8pLHcudW5zaGlmdChvKTtsZXQgcD17dHlwZTpMdCxuYW1lOnQubW9kaWZpZXI9PT1rbz9cIjw9XCI6dC5tb2RpZmllcj09PUxvP1wiPFwiOnQubW9kaWZpZXI9PT12cD9cIj49XCI6dC5tb2RpZmllcj09PU1wP1wiPlwiOlwiXCIscGF0aDpRZSxpbnB1dHM6W3QudmFyaWFibGUsdC5saW1pdF19O3cudW5zaGlmdCh7dHlwZTpDbixjb25kaXRpb246cH0pO2xldCBfPXt0eXBlOkx0LG5hbWU6dC5tb2RpZmllcj09PWtvfHx0Lm1vZGlmaWVyPT09TG8/XCIrXCI6XCItXCIscGF0aDpRZSxpbnB1dHM6W3QudmFyaWFibGUsdC5zdGVwXX0sYj17dHlwZTpSbyxzb3VyY2U6Xyx0YXJnZXQ6dC52YXJpYWJsZX07VyhiKTt2YXIgUj1uLmxlbmd0aC0xfDA7Zm9yKGxldCBqPVI7aj49MDtqPWotMXwwKXtsZXQgVT1uW2pdO1coVSl9fSxxcz10PT57ZS5wdXNoKHNzLDIpfSxpcz10PT57bGV0e2JyYW5jaGVzOm59PXQ7dy51bnNoaWZ0KHt0eXBlOnp0fSk7Zm9yKGxldCBvPW4ubGVuZ3RoLTE7bz49MDtvLS0pe2xldCBwPW5bb107c3dpdGNoKHAudHlwZSl7Y2FzZSBQbzp7bGV0e3N0YXRlbWVudHM6X309cCxiPV8ubGVuZ3RoO2ZvcihsZXQgaj1iLTE7aj49MDtqLS0pe2xldCBVPV9bal07VyhVKX1sZXQgUj1fLmZpbmQoaj0+ai50eXBlPT09WXMpO3cudW5zaGlmdCh7dHlwZTpMcyxzdG9wOlJ9KSxJKHAudmFsdWVzWzBdKTticmVha31jYXNlIHpvOntsZXR7c3RhdGVtZW50czpffT1wLGI9Xy5sZW5ndGg7Zm9yKGxldCBSPWItMTtSPj0wO1ItLSl7bGV0IGo9X1tSXTtXKGopfXcudW5zaGlmdCh7dHlwZTpqbn0pO2JyZWFrfX19fSxXdD0odCxuKT0+e3cudW5zaGlmdCh7dHlwZTp6dH0pO2xldCBvPW5bMF07aWYobi5sZW5ndGg+PTIpe2lmKG5bMV0udHlwZT09PVBvKVd0KHQsbi5zbGljZSgxKSk7ZWxzZSBpZihuWzFdLnR5cGU9PT16byl7bGV0e3N0YXRlbWVudHM6eH09blsxXSxlZT14Lmxlbmd0aDtmb3IobGV0IGllPWVlLTE7aWU+PTA7aWUtLSlXKHhbaWVdKX19bGV0e3N0YXRlbWVudHM6cH09bzt3LnVuc2hpZnQoe3R5cGU6am59KTtsZXQgXz1wLmxlbmd0aDtmb3IobGV0IHg9Xy0xO3g+PTA7eC0tKVcocFt4XSk7bGV0IGI9cC5maW5kKHg9PngudHlwZT09PVlzKSxSPU9iamVjdC5mcmVlemUoe3R5cGU6THMsc3RvcDpifSk7dy51bnNoaWZ0KFIpO2xldCBVPU9iamVjdC5mcmVlemUoe3R5cGU6Wm8sZnVuY3Rpb246KCk9PntsZXR7bmFtZTp4LHBhdGg6ZWV9PUllKHQpO3MuZ2V0KE4oeCxlZSkpLnR5cGU9PT1hdD8oSSh0KSxlLnB1c2goX2UpLGUucHVzaChfZSksSShvLnZhbHVlKSxlLnB1c2goX2UpLGUucHVzaChfZSksZS5wdXNoKGdzKSk6KEkodCksSShvLnZhbHVlKSxlLnB1c2goZ3MpKX19KTt3LnVuc2hpZnQoVSl9LCRzPXQ9PntsZXR7dmFsdWU6bixtYXRjaGVzOm99PXQ7V3QobixvKX0sSXM9dD0+e2xldCBuPXQse2JyYW5jaGVzOm8sdmFsdWVzOnB9PW47aWYoby5sZW5ndGg+MCYmcC5sZW5ndGg9PT0wKXJldHVybiBpcyh0KTtlLnB1c2goanQsWGUpO2xldCBiPXt0eXBlOnp0fTt3LnVuc2hpZnQoYik7bGV0IFI9W107Zm9yKGxldCBVIG9mIHApc3dpdGNoKFUudHlwZSl7Y2FzZSBKZTp7bGV0e25hbWU6eH09VSxlZT1GZS5nZXQoeCkse2RhdGE6aWV9PWVlLHtuYW1lOmplLHBhdGg6WmV9PWllLGs9TihqZSxaZSk7Ui5wdXNoKGspO2JyZWFrfX12YXIgaj1vLmxlbmd0aC0xfDA7Zm9yKGxldCBVPWo7VT49MDtVPVUtMXwwKXtsZXQgeD1vW1VdLGVlPXt0eXBlOllvLGJyYW5jaDp4LGNvbmRpdGlvbjpuLGNvbW1vbktleXM6Un07dy51bnNoaWZ0KGVlKX19LEFzPXQ9PntsZXR7ZXhwcmVzc2lvbjpufT10O3ZhciBwPUkobil8MDtmb3IobGV0IF89MDtfPHA7Xz1fKzF8MCllLnB1c2goX2UpfSxpdD10PT57bGV0e3ZhbHVlOm59PXQ7SShuKSxlLnB1c2goZXQsTG4pLE9lKFwiZGVhbGxvY1wiKSxlLnB1c2goaSwwKSxYdChuKX0sSnM9dD0+e2xldHt2YWx1ZXM6bn09dDtmb3IobGV0IG8gb2YgbilJKG8pO2UucHVzaChKcCl9LFFzPSgpPT57ZS5wdXNoKHNsKX0scW49dD0+e2UucHVzaChIdCl9LGQ9dD0+e2UucHVzaCgxMiwwKX0sQT10PT57ZS5wdXNoKFFwKX0sVj10PT57dC5zdG9wPyhlLnB1c2gocW8pLGUucHVzaChwdCkpOihlLnB1c2gocW8pLGUucHVzaChYZSkpfSxTZT10PT57bGV0e2JyYW5jaDpuLGNvbW1vbktleXM6byxjb25kaXRpb246cH09dCx7dmFsdWVzOl99PW4se3ZhbHVlczpifT1wO3ZhciBSPW8ubGVuZ3RofDA7Zm9yKGxldCB4PTA7eDxSO3g9eCsxfDApe2xldCBlZT1vW3hdLGllPV9beF0samU9Ylt4XTtKKGVlLGllLGplKX1sZXR7c3RhdGVtZW50czpqfT1uO3ZhciBVPWoubGVuZ3RoLTF8MDtmb3IobGV0IHg9VTt4Pj0wO3g9eC0xfDApe2xldCBlZT1qW3hdO1coZWUpfX0sc2U9dD0+e2xldHtjb25kaXRpb246bn09dDtJKG4pO2xldCBvPUllKG4pO2lmKG8/Lm11dGFibGUpe2xldCBwPU4oby5uYW1lLG8ucGF0aCksXz1zLmdldChwKSx7bG9hZDpifT1fLmxpbms7ZS5wdXNoKGIub3Bjb2RlLGIuYWxpZ24sYi5vZmZzZXQpfWUucHVzaChpLDApLGUucHVzaChncyksZS5wdXNoKG5zLDEpLGUucHVzaChzcywwKX0sQWU9dD0+e2xldHtjb2xsZWN0aW9uOm4saXRlcmF0b3I6byxpbmRleDpwfT10O0kobiksZS5wdXNoKF9lKSxtZT0hMDtsZXQgXz1DZS5nZXQocCk7cD9lLnB1c2godHQsXyk6ZS5wdXNoKEYsZyksZS5wdXNoKGdzKSxlLnB1c2gobnMsMSksZS5wdXNoKF9lKTtsZXQgYj1PYmplY3QuZnJlZXplKHt0eXBlOndzLGFycmF5Om4saW5kZXg6e3R5cGU6SmUsbmFtZTpwfX0pLFI9T2JqZWN0LmZyZWV6ZSh7dHlwZTpKZSxuYW1lOm99KSxqPU9iamVjdC5mcmVlemUoe3R5cGU6Um8sdGFyZ2V0OlIsc291cmNlOmJ9KTtXKGopfSx0ZT10PT57bGV0e2luZGV4Om59PXQsbz1DZS5nZXQobik7bj9lLnB1c2godHQsbyk6ZS5wdXNoKEYsZyksZS5wdXNoKGksMSksZS5wdXNoKEgpLG4/ZS5wdXNoKEN0LG8pOmUucHVzaChsZSxnKSxlLnB1c2goc3MsMCl9LHJ0PXQ9PntsZXR7c3RhdGVtZW50Om59PXQ7c3dpdGNoKG4udHlwZSl7Y2FzZVwiYXNzaWduXCI6e3dlKG4pO2JyZWFrfWNhc2UgTHM6e0lzKG4pO2JyZWFrfWNhc2UgR3A6eyRzKG4pO2JyZWFrfWNhc2UgYnM6e0dlKG4pO2JyZWFrfWNhc2Uga3A6e3JzKG4pO2JyZWFrfWNhc2UgTHA6e3Z0KG4pO2JyZWFrfWNhc2UgVnA6e0RlKG4pO2JyZWFrfWNhc2UgWXA6e3FzKG4pO2JyZWFrfWNhc2UgRG86e0FzKG4pO2JyZWFrfWNhc2Ugd3A6e2l0KG4pO2JyZWFrfWNhc2UgWXM6e0pzKG4pO2JyZWFrfWNhc2UgWHA6e1FzKCk7YnJlYWt9ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoYGNhbiBub3QgaGFuZGxlIHN0YXRlbWVudCB0eXBlICR7bi50eXBlfWApfX07Zm9yKDt3Lmxlbmd0aD4wOyl7bGV0IHQ9dy5zaGlmdCgpO3N3aXRjaCh0LnR5cGUpe2Nhc2UgenQ6e3FuKHQpO2JyZWFrfWNhc2Ugd286e2QodCk7YnJlYWt9Y2FzZSBqbjp7QSh0KTticmVha31jYXNlIExzOntWKHQpO2JyZWFrfWNhc2UgWW86e1NlKHQpO2JyZWFrfWNhc2UgVm86e3J0KHQpO2JyZWFrfWNhc2UgQ246e3NlKHQpO2JyZWFrfWNhc2UgQm86e0FlKHQpO2JyZWFrfWNhc2UgS286e3RlKHQpO2JyZWFrfWNhc2UgSG86e2UucHVzaChqdCxYZSk7YnJlYWt9Y2FzZSBabzp7dC5mdW5jdGlvbigpO2JyZWFrfWRlZmF1bHQ6YnJlYWt9fXJldHVybnt0b3RhbE9jdGV0czplLG5hdGl2ZUltcG9ydHM6cGUsbG9hZHM6bWV9fXZhcntFTlVNX01FTU9SWV9TSVpFOmdsLEVOVU1fU1RBQ0tfU0laRTpzYyxBUlJBWV9NRU1PUllfU0laRTp5bCxBUlJBWV9TVEFDS19TSVpFOnduLFNUUklOR19NRU1PUllfU0laRTp4bCxTVFJJTkdfU1RBQ0tfU0laRTpWbixPQkpFQ1RfTUVNT1JZX1NJWkU6WHUsT0JKRUNUX1NUQUNLX1NJWkU6bmMsTkFUSVZFX01FTU9SWV9TSVpFOld1LE5BVElWRV9TVEFDS19TSVpFOm9jLE5BVElWRV9TSVpFOnF1LFNURVA6JHUsRE9VQkxFX1NURVA6SWwsVFJJUFBMRV9TVEVQOkp1fT1SdC5TaXplcyx7SEVYX0VOQ09ERTp2bixMRUIxMjhfRU5DT0RFOk50fT1KdCx7VFlQRVNfQVNTSUdOOk1uLFRZUEVTX0FSUkFZOnd0LFRZUEVTX0RBVEE6QnMsVFlQRVNfR0VORVJJQ1M6QWwsVFlQRVNfRU5VTUVSQVRJT046WnQsVFlQRVNfRVhQUkVTU0lPTjpObCxUWVBFU19MSU5LOktzLFRZUEVTX0xPQ0FMOm9zLFRZUEVTX09CSkVDVDpGdCxUWVBFU19QUk9DRURVUkU6Qm4sVFlQRVNfUkVUVVJOOmNjLFRZUEVTX1NFTEVDVDpSbCxUWVBFU19BUlJBWV9BQ0NFU1M6YWMsVFlQRVNfQVJSQVlfQVNTSUdOTUVOVDpyYyxUWVBFU19NRU1CRVI6aWMsVFlQRVNfU1RPUkU6S24sVFlQRVNfTElURVJBTDpwYyxUWVBFU19MSU5LX1RPOkdzLFRZUEVTX1ZBTFVFX0FUOkhzLFRZUEVTX1NFTEY6bGMsVFlQRVNfTkFUSVZFOmNzLFRZUEVTX1NUUklORzphcyxUWVBFU19DT05ESVRJT046U2wsVFlQRVNfQlJBTkNIX01BVENIOnVjLFRZUEVTX1dISUxFOlBsLFRZUEVTX1dIRU46emwsVFlQRVNfRk9SOmpsLFRZUEVTX0ZPUkVBQ0g6Q2wsVFlQRVNfU0laRTpmYyxUWVBFU19EUk9QOkZsLFRZUEVTX0NPTkNBVDpEbCxUWVBFU19VTlJFQUNIQUJMRTpVbH09TnMsR249XCJcIixXZT0oYyxzKT0+YCR7c30uJHtjfWAsa2w9Yz0+W1wiPlwiLFwiPFwiLFwiPj1cIixcIjw9XCIsXCIhPVwiLFwiPT1cIl0uaW5jbHVkZXMoYyksTGw9Yz0+W1wiRlA2NFwiLFwiSTY0XCIsXCJVNjRcIixcIkZQMzJcIixcIkkzMlwiLFwiVTMyXCIsXCJJMTZcIixcIlUxNlwiLFwiSThcIixcIlU4XCIsXCJCb29sXCJdLmluY2x1ZGVzKGMpLEhuPTQ4LFlsPU9iamVjdC5mcmVlemUoWzAsMTI3XSksd2w9T2JqZWN0LmZyZWV6ZSh7fSksVmw9T2JqZWN0LmZyZWV6ZShbMTI3XSksaGM9MDt2YXIgdmw9Mjt2YXIgTWw9MTAsQmw9NyxLbD0zLEdsPTIsSGw9MSxabD02LE90PTk2LGd0PTEyNyxabj1PYmplY3QuZnJlZXplKFs3LDEwNSwxMDksMTEyLDExMSwxMTQsMTE2LDExNV0pLFhsPU9iamVjdC5mcmVlemUoWzYsMTA5LDEwMSwxMDksMTExLDExNCwxMjFdKSxXbD0wO3ZhciBxbD02NSxidD1uZXcgVWludDhBcnJheSg4KSwkbD1PYmplY3QuZnJlZXplKFswLDk3LDExNSwxMDldKSxKbD1PYmplY3QuZnJlZXplKFsxLDAsMCwwXSksUWw9KGMscyk9PntzPXM/P3dsO2xldCByPXt9LHtkYXRhOmgsY29kZTpEfT1jLGNlPUQuZmlsdGVyKHk9PiF5LmRlc2NyaXB0aW9uLmdlbmVyaWNzfHx5LmRlc2NyaXB0aW9uLmdlbmVyaWNzLmxlbmd0aD09PTApLGU9bmV3IE1hcCxwZT1uZXcgTWFwLG1lPXk9PntsZXQgdT0wO2ZvcihsZXQgUCBvZiB5KXtsZXR7ZGF0YTpZfT1QO3N3aXRjaChZLnR5cGUpe2Nhc2VcIk1heWJlXCI6Y2FzZSBCczp7bGV0e25hbWU6SixwYXRoOnd9PVksVz1XZShKLHcpLHllPWUuZ2V0KFcpO2lmKCF5ZSljb25zb2xlLmVycm9yKFwiTm8gc2hhcGUgZm91bmQgZm9yIGtleTpcIixXKTtlbHNlIHN3aXRjaCh5ZS50eXBlKXtjYXNlIGNzOmlmKEo9PT1hcyl7dT11K1ZufDA7YnJlYWt9Y2FzZSBadDp7dT11K3NjfDA7YnJlYWt9Y2FzZSBGdDp7dT11K25jfDA7YnJlYWt9fWJyZWFrfWNhc2UgS3M6e2xldCBKPWUuZ2V0KFdlKFkubmFtZSxZLnBhdGgpKTtZLm5hbWU9PT1hcz91PXUrVm58MDpZLm5hbWU9PT13dD91PXUrd258MDpKLnR5cGU9PT1GdD91PXUrbmN8MDp1PXUrb2N8MDticmVha31jYXNlIHd0Ont1PXUrd258MDticmVha319fXJldHVybiB1fSxPZT0oeSx1KT0+e2xldHtsYWJlbHM6UH09dSxZPW5ldyBNYXAsSj1bXTt2YXIgdz1QLmxlbmd0aHwwO2ZvcihsZXQgaGU9MDtoZTx3O2hlPWhlKzF8MCl7bGV0e25hbWU6eGUscHJvcHM6RWV9PVBbaGVdO2lmKEVlLmxlbmd0aD4wKXtsZXQgd2U9e3R5cGU6RnQsbmFtZTp4ZSxwYXRoOnksZGVzY3JpcHRpb246e21lbWJlcnM6RWUsZ2VuZXJpY3M6W119fTtoLnB1c2god2UpLEoucHVzaCh7bmFtZTp4ZSxwcm9wczpFZS5tYXAoR2U9PkdlLm5hbWUpfSl9WS5zZXQoeGUsaGUpfXJldHVybiBPYmplY3QuZnJlZXplKHt0eXBlOlp0LGVuY29kZTpoZT0+e2xldCB4ZT1ZLmdldChoZSk7cmV0dXJuIHR5cGVvZiB4ZT5cInVcIj9WbDpOdCh4ZSl9LGV2YWx1YXRlOmhlPT5ZLmdldChoZSksb3Bjb2RlOnFsLGxhYmVsczpKLGxpbms6T2JqZWN0LmZyZWV6ZSh7bG9hZDpPYmplY3QuZnJlZXplKHtvcGNvZGU6NDAsYWxpZ246MixvZmZzZXQ6MCxzaXplOjR9KSxzdG9yZTpPYmplY3QuZnJlZXplKHtvcGNvZGU6NTQsYWxpZ246MixvZmZzZXQ6MCxzaXplOjR9KX0pfSl9LCQ9eT0+e2xldCB1PVtdLFA9W10sWT0wLEo9KCk9PntsZXQgZD1PYmplY3QuZnJlZXplKHt0eXBlOlwiYmFja1wifSk7dS51bnNoaWZ0KGQpfSx3PWQ9PntsZXQgQT17dHlwZTpCcyxkYXRhOmR9O3UudW5zaGlmdChBKX0sVz1kPT57bGV0IEE9e3R5cGU6XCJuYW1lXCIsbmFtZTpkfTt1LnVuc2hpZnQoQSl9LHllPShkLEEpPT57QSYmKEooKSx3KEEpLFcoZCkpfSx6ZT1kPT5oLmZpbmQoQT0+QS5uYW1lPT09ZCksaGU9KGQsQSk9PkEuZmluZChWPT5WLm5hbWU9PT1kKSx4ZT0oZCx7aW5wdXRzOkF9KT0+QS5maW5kKFY9PlYubmFtZT09PWQpLEVlPShkLEEpPT57bGV0IFY9ZDtmb3IobGV0IFNlIG9mIEEpe2xldCBzZT1oZShTZSxWLmRlc2NyaXB0aW9uLm1lbWJlcnMpLEFlPXplKHNlLmRhdGEubmFtZSk7aWYoQWUmJkFlLnR5cGU9PT1GdClWPUFlO2Vsc2UgcmV0dXJuIHNlfXJldHVybiBudWxsfSx3ZT0oZCxBKT0+e2xldCBWPWQudHJhaWwsU2U9aGUoVlswXSxBLm1lbWJlcnMpO2lmKCFTZSlyZXR1cm4gbnVsbDtpZihWLmxlbmd0aD09PTEpcmV0dXJuIFNlLmRhdGE7bGV0IHNlPXplKFNlLmRhdGEubmFtZSk7cmV0dXJuIEVlKHNlLFYuc2xpY2UoMSkpLmRhdGF9LEdlPShkLEEsVixTZSk9PntpZih4ZShBLFYuZGVzY3JpcHRpb24pKXJldHVybjtWLmRlc2NyaXB0aW9uLnNlbGYucHVzaChkKTtsZXQgc2U9T2JqZWN0LnNlYWwoe25hbWU6QSxkYXRhOnsuLi53ZSh7dHJhaWw6ZC50cmFpbHx8ZC52YWx1ZT8udHJhaWx8fGQubGluaz8udHJhaWx8fFtdfSxTZSl9fSk7ZC50eXBlIT09R3MmJihzZS5kYXRhLnR5cGU9S3MpLFYuZGVzY3JpcHRpb24uaW5wdXRzLnB1c2goc2UpfSxycz0oZCxBLFYpPT57bGV0IFNlPWQuaW5wdXRzLm1hcChBZT0+RGUoQWUsQSxWKSksc2U9dHlwZW9mIGQubmFtZT09XCJvYmplY3RcIiYmZC5uYW1lWzBdPT09aWM/ZC5uYW1lLnNsaWNlKDEpLmpvaW4oXCJfXCIpOmQubmFtZTtyZXR1cm57Li4uZCxuYW1lOnNlLGlucHV0czpTZX19LHZ0PShkLEEsVik9PntpZighKGQudmFsdWUubGluaz09PWxjfHxkLnZhbHVlLnZhbHVlPT09bGMpKXJldHVybiBkO2xldCBTZT1gJHtkLnR5cGV9XyR7ZC50cmFpbC5qb2luKFwiX1wiKX1gO2lmKEdlKGQsU2UsQSxWKSxkLnZhbHVlLnZhbHVlKXJldHVybnt0eXBlOkdzLHZhbHVlOlNlfTtpZihkLnZhbHVlLmxpbmspcmV0dXJue3R5cGU6SHMsbGluazpTZX19LERlPShkLEEsVixTZT1cIlwiKT0+e3N3aXRjaChkLnR5cGUpe2Nhc2Ugb3M6Y2FzZSBwYzpyZXR1cm4gZDtjYXNlIGljOntsZXQgc2U9YCR7ZC50eXBlfV8ke2QudHJhaWwuam9pbihcIl9cIil9YDtyZXR1cm4gR2UoZCxzZSxBLFYpLFNlPT09XCJ0YXJnZXRcIj97dHlwZTpLbixsaW5rOnt0eXBlOm9zLG5hbWU6c2V9fTp7dHlwZTpIcyxsaW5rOnt0eXBlOm9zLG5hbWU6c2V9fX1jYXNlIEdzOntpZihkLnZhbHVlLnR5cGU9PT1wYylyZXR1cm4gZC52YWx1ZTt7bGV0IHNlPWAke2QudmFsdWUudHlwZX1fJHtkLnZhbHVlLnRyYWlsLmpvaW4oXCJfXCIpfWA7cmV0dXJuIEdlKGQsc2UsQSxWKSx7dHlwZTpHcyx2YWx1ZTp7dHlwZTpvcyxuYW1lOnNlfX19fWNhc2UgSHM6e2xldCBzZT1gJHtkLmxpbmsudHlwZX1fJHtkLmxpbmsudHJhaWwuam9pbihcIl9cIil9YDtyZXR1cm4gR2UoZCxzZSxBLFYpLHt0eXBlOkhzLGxpbms6e3R5cGU6b3MsbmFtZTpzZX19fWNhc2UgS246e2xldCBzZT1gJHtkLmxpbmsudHlwZX1fJHtkLmxpbmsudHJhaWwuam9pbihcIl9cIil9YDtyZXR1cm4gR2UoZCxzZSxBLFYpLHt0eXBlOktuLGxpbms6e3R5cGU6b3MsbmFtZTpzZX19fWNhc2UgUmw6cmV0dXJuIHZ0KGQsQSxWKTtjYXNlIE5sOnJldHVybiBycyhkLEEsVik7Y2FzZSBhYzp7bGV0IHNlPURlKGQuYXJyYXksQSxWKSxBZT1EZShkLmluZGV4LEEsVik7cmV0dXJuIE9iamVjdC5mcmVlemUoe3R5cGU6YWMsaW5kZXg6QWUsYXJyYXk6c2V9KX1jYXNlIHJjOntsZXQgc2U9RGUoZC5hcnJheSxBLFYpLEFlPURlKGQuaW5kZXgsQSxWKTtyZXR1cm4gT2JqZWN0LmZyZWV6ZSh7dHlwZTpyYyxpbmRleDpBZSxhcnJheTpzZX0pfWNhc2UgZmM6e2xldCBzZT1EZShkLnZhbHVlLEEsVik7cmV0dXJuIE9iamVjdC5mcmVlemUoe3R5cGU6ZmMsdmFsdWU6c2V9KX1jYXNlIERsOntsZXQgc2U9ZC52YWx1ZXMubWFwKEFlPT5EZShBZSxBLFYpKTtyZXR1cm4gT2JqZWN0LmZyZWV6ZSh7Li4uZCx2YWx1ZXM6c2V9KX1kZWZhdWx0OnRocm93IEVycm9yKGBVbmhhbmRsZWQgdHlwZShjaGVja09iamVjdFZhbHVlcyk6ICR7ZC50eXBlfWApfX0scXM9KGQsQSk9PntsZXQgVj1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGQpKTtWLmRlc2NyaXB0aW9uLnNlbGY9W107bGV0IFNlPUFlPT57QWUudHlwZT09PU1uPyhBZS50YXJnZXQ9RGUoQWUudGFyZ2V0LFYsQSxcInRhcmdldFwiKSxBZS5zb3VyY2U9RGUoQWUuc291cmNlLFYsQSkpOkFlLnR5cGU9PT1jYyYmKEFlLnZhbHVlcz1BZS52YWx1ZXMubWFwKHRlPT5EZSh0ZSxWLEEpKSl9LHNlPUFlPT57QWUuZm9yRWFjaCh0ZT0+e2lmKHRlLnR5cGU9PT1Nbnx8dGUudHlwZT09PWNjKVNlKHRlKTtlbHNlIGlmKHRlLnR5cGU9PT1TbCl0ZS5icmFuY2hlcy5mb3JFYWNoKHJ0PT57c2UocnQuc3RhdGVtZW50cykscnQudHlwZT09PXVjJiYocnQudmFsdWVzPXJ0LnZhbHVlcy5tYXAodD0+RGUodCxWLEEpKSl9KTtlbHNlIGlmKHRlLnR5cGU9PT1QbCl0ZS5jb25kaXRpb249RGUodGUuY29uZGl0aW9uLFYsQSksc2UodGUuc3RhdGVtZW50cyk7ZWxzZSBpZih0ZS50eXBlPT09emwpdGUudmFsdWU9RGUodGUudmFsdWUsVixBKSx0ZS5tYXRjaGVzLmZvckVhY2gocnQ9PntydC50eXBlPT09dWMmJihydC52YWx1ZT1EZShydC52YWx1ZSxWLEEpKSxzZShydC5zdGF0ZW1lbnRzKX0pO2Vsc2UgaWYodGUudHlwZT09PWpsKXRlLmxpbWl0PURlKHRlLmxpbWl0LFYsQSksdGUudmFyaWFibGU9RGUodGUudmFyaWFibGUsVixBKSx0ZS5pbml0aWFsaXplci50eXBlPT09TW4mJih0ZS5pbml0aWFsaXplci50YXJnZXQ9RGUodGUuaW5pdGlhbGl6ZXIudGFyZ2V0LFYsQSksdGUuaW5pdGlhbGl6ZXIuc291cmNlPURlKHRlLmluaXRpYWxpemVyLnNvdXJjZSxWLEEpKSx0ZS5zdGVwPURlKHRlLnN0ZXAsVixBKSxzZSh0ZS5zdGF0ZW1lbnRzKTtlbHNlIGlmKHRlLnR5cGU9PT1DbCl0ZS5jb2xsZWN0aW9uPURlKHRlLmNvbGxlY3Rpb24sVixBKSxzZSh0ZS5zdGF0ZW1lbnRzKTtlbHNlIGlmKHRlLnR5cGU9PT1GbCl0ZS5leHByZXNzaW9uPURlKHRlLmV4cHJlc3Npb24sVixBKTtlbHNlIGlmKHRlLnR5cGUhPT1VbCl0aHJvdyBuZXcgRXJyb3IoXCJ1bmhhbmRsZWQgc3RhdGVtZW50IHR5cGU6IFwiLHRlLnR5cGUpfSl9O3NlKFYuZGVzY3JpcHRpb24uc3RhdGVtZW50cyksY2UucHVzaChWKX0se21lbWJlcnM6aXN9PXksV3Q9bmV3IE1hcDtmb3IobGV0IGQgb2YgaXMpe2xldHtuYW1lOkEsZGF0YTpWLHZhbHVlOlNlfT1kO1d0LnNldChBLFYpLFNlJiZXdC5zZXQoQSx7Li4uVix2YWx1ZTpTZX0pfXZhciAkcz1pcy5sZW5ndGgtMXwwO2ZvcihsZXQgZD0kcztkPj0wO2Q9ZC0xfDApe2xldCBBPWlzW2RdLHtuYW1lOlYsZGF0YTpTZX09QTtpZihBLnR5cGUmJkEudHlwZT09PUJuKXtxcyhBLHkpO2NvbnRpbnVlfXllKFYsU2UpfWxldCBJcz1uZXcgTWFwLEFzPW5ldyBNYXAsaXQ9MDtmb3IoO3UubGVuZ3RoPjA7KXtsZXQgZD11LnNoaWZ0KCk7c3dpdGNoKGQudHlwZSl7Y2FzZVwiYmFja1wiOntQLnBvcCgpO2JyZWFrfWNhc2UgQnM6e2xldHtkYXRhOkF9PWQsVj0oKT0+e2xldCBydD1QLmpvaW4oXCIuXCIpLHQ9V2UoQS5uYW1lLEEucGF0aCksbj1lLmdldCh0KSx7bGluazpvfT1uLHA9T2JqZWN0LmZyZWV6ZSh7ZGF0YTpBLGluZGV4Oml0LGFkZHJlc3M6WSx0cmFpbDpydH0pLF89ZS5nZXQoV2UoQS5uYW1lLEEucGF0aCkpO0EubmFtZT09PWFzP1krPXhsOkEudHlwZT09PXd0fHxBLmxheW91dD09PXd0P1krPXlsOl8udHlwZT09PVp0P1krPWdsOlkrPW8/LmxvYWQuc2l6ZXx8SWwsSXMuc2V0KHJ0LHApLEFzLnNldChpdCxwKSxBLm5hbWU9PT1hcz9pdD1pdCtWbnwwOkEudHlwZT09PXd0fHxBLmxheW91dD09PXd0P2l0PWl0K3dufDA6Xy50eXBlPT09WnQ/aXQ9aXQrc2N8MDppdD1pdCtvY3wwfTtpZihBLnR5cGU9PT1Lcyl7VigpO2JyZWFrfWxldHtuYW1lOlNlLHBhdGg6c2V9PUEsQWU9V2UoU2Usc2UpLHRlPWUuZ2V0KEFlKTtpZighdGUpdGhyb3cgbmV3IEVycm9yKFwiU2hhcGUgbm90IGZvdW5kOiBcIixBZSk7c3dpdGNoKHRlLnR5cGUpe2Nhc2UgY3M6e1YoKTticmVha31jYXNlIFp0OntWKCk7YnJlYWt9Y2FzZSBGdDp7VigpO2JyZWFrfX1icmVha31jYXNlXCJuYW1lXCI6e2xldHtuYW1lOkF9PWQ7UC5wdXNoKEEpO2JyZWFrfX19bGV0IEpzPWl0fDAsUXM9T2JqZWN0LmZyZWV6ZSh7bWFwVHJhaWw6SXMsbWFwSW5kZXg6QXN9KTtyZXR1cm57dHlwZTpGdCxsZW5ndGg6SnMsbWVtYmVyczpXdCxpbmRpdmlzaWJsZXM6UXN9fSxSZT17fTtmb3IobGV0IHkgb2YgaCl7bGV0e3BhdGg6dX09eTtzd2l0Y2goeS50eXBlKXtjYXNlIGNzOntsZXR7bmFtZTpQLHBhdGg6WX09eSxKPVdlKFAsWSk7aWYoT2JqZWN0Lmhhc093bihrdCxKKSl7bGV0IHc9a3RbSl07ZS5zZXQoSix3KTtjb250aW51ZX1icmVha31jYXNlXCJpbXBvcnRcIjp7aWYoT2JqZWN0Lmhhc093bihrdCx1KSl7bGV0IFA9a3RbdV07ZS5zZXQodSxQKTtjb250aW51ZX1icmVha31jYXNlIEFsOntsZXR7bmFtZTpQLHBhdGg6WX09eSxKPVdlKFAsWSksdz1rdFtcIkZsb2dyYW0uRlAzMlwiXTtlLnNldChKLHcpO2JyZWFrfWNhc2UgWnQ6e2xldHtuYW1lOlAscGF0aDpZLGRlc2NyaXB0aW9uOkp9PXksdz1XZShQLFkpLFc9T2UodyxKKTtlLnNldCh3LFcpO2JyZWFrfWNhc2UgRnQ6e2xldHtuYW1lOlAscGF0aDpZLGRlc2NyaXB0aW9uOkp9PXkse2dlbmVyaWNzOnd9PUosVz1XZShQLFkpO2lmKCF3fHx3Lmxlbmd0aD09PTApe2xldCB5ZT0kKEopO2Uuc2V0KFcseWUpfWJyZWFrfX19ci5zdHJ1Y3R1cmVzPVJlO2xldCBsdD0wLHV0PSh5LHUpPT57bGV0IFA9cGUuZ2V0KHkpO2lmKHR5cGVvZiBQPlwidVwiKXtwZS5zZXQoeSxbdV0pO3JldHVybn0oUC5sZW5ndGg9PTB8fFAubGVuZ3RoPjAmJlBbMF0uYm9keSE9PXUuYm9keSkmJnBlLnNldCh5LFt1LC4uLlBdKX0sWWU9eT0+e2xldHtuYW1lOnUscGF0aDpQfT15LFk9V2UodSxQKTtzd2l0Y2goUD09PVwiRmxvZ3JhbVwiJiYoTGwodSk/WT1XZSh5LmRlc2NyaXB0aW9uLmlucHV0c1swXT8uZGF0YT8ubmFtZT8udG9Mb3dlckNhc2UoKStcIi5cIitjdCh1KSxQKTp5LmRlc2NyaXB0aW9uLm91dHB1dHMmJnkuZGVzY3JpcHRpb24ub3V0cHV0cy5sZW5ndGg+PTEmJiFrbCh5Lm5hbWUpP3kuZGVzY3JpcHRpb24ub3V0cHV0c1swXT8uZGF0YT8ubmFtZSYmKFk9V2UoeS5kZXNjcmlwdGlvbi5vdXRwdXRzWzBdPy5kYXRhPy5uYW1lPy50b0xvd2VyQ2FzZSgpK1wiLlwiK2N0KHUseS5kZXNjcmlwdGlvbi5pbnB1dHM/Lmxlbmd0aCksUCkpOihmcy5pbmNsdWRlcyh5LmRlc2NyaXB0aW9uLmlucHV0c1sxXT8uZGF0YT8ubmFtZSkmJihZPVdlKHkuZGVzY3JpcHRpb24uaW5wdXRzWzFdPy5kYXRhPy5uYW1lK1wiLlwiK2N0KHUpLFApLEduPXkuZGVzY3JpcHRpb24uaW5wdXRzWzFdPy5kYXRhPy5uYW1lKSxHbiYmKFk9V2UoR24udG9Mb3dlckNhc2UoKStcIi5cIitjdCh1KSxQKSkpKSx5LnR5cGUpe2Nhc2UgY3M6e2lmKE9iamVjdC5oYXNPd24oT3MsWSkpe2xldCBKPU9zW1ldO3V0KFksSik7cmV0dXJufWJyZWFrfWNhc2UgQm46e2xldHtkZXNjcmlwdGlvbjpKfT15LHtpbnB1dHM6dyxvdXRwdXRzOld9PUoseWU9V2UodSxQKSx6ZT17dHlwZTpcImFydGlmaWNpYWxcIixpbmRleDpcImFydGlmaWNpYWxcIitsdCxwcm9jZWR1cmU6eSxsZW5ndGhzOk9iamVjdC5mcmVlemUoe2lucHV0czptZSh3KSxvdXRwdXRzOm1lKFcpfSl9O3V0KHllLHplKTticmVha319bHQ9bHQrMXwwfSxudD1bXSxkdD1bXTtmb3IobGV0IHkgb2YgY2Upe2lmKHkuZGVzY3JpcHRpb24uZ2VuZXJpY3M/Lmxlbmd0aD4wKWNvbnRpbnVlO2xldHtkZXNjcmlwdGlvbjp1fT15LHtpbnB1dHM6UCxvdXRwdXRzOll9PXUsSj1bLi4uUCwuLi5ZXTtpZighKHkudHlwZT09PWNzJiZKLnNvbWUodz0+IWZzLmluY2x1ZGVzKHcuZGF0YS5uYW1lKSkpKXN3aXRjaChZZSh5KSx5LnR5cGUpe2Nhc2VcImltcG9ydFwiOntsZXR7cGF0aDp3fT15O2lmKE9iamVjdC5oYXNPd24oT3MsdykpY29udGludWU7bnQucHVzaCh5KTticmVha31jYXNlIEJuOntkdC5wdXNoKHkpO2JyZWFrfX19bGV0IGZ0PXk9PntsZXQgdT0wLFA9W107Zm9yKGxldCBZIG9mIHkpe2xldCBKPSgpPT57UC5wdXNoKGd0KSx1PXUrMXwwLFAucHVzaChndCksdT11KzF8MCxQLnB1c2goZ3QpLHU9dSsxfDB9LHc9d2U9PntsZXR7aWRlbnRpdHk6R2V9PXdlO1AucHVzaChHZSksdT11KzF8MH0sVz0oKT0+e1AucHVzaChndCksdT11KzF8MH0seWU9KCk9PntQLnB1c2goZ3QpLHU9dSsxfDAsUC5wdXNoKGd0KSx1PXUrMXwwLFAucHVzaChndCksdT11KzF8MH0semU9KCk9PntQLnB1c2goZ3QpLHU9dSsxfDAsUC5wdXNoKGd0KSx1PXUrMXwwfSxoZT0oKT0+e1AucHVzaChndCksdT11KzF8MCxQLnB1c2goZ3QpLHU9dSsxfDB9LHtuYW1lOnhlLGRhdGE6RWV9PVk7c3dpdGNoKEVlLnR5cGUpe2Nhc2VcIlwiOmNhc2UgQnM6e2xldHtuYW1lOndlLHBhdGg6R2V9PUVlLHJzPVdlKHdlLEdlKSx2dD1lLmdldChycyk7aWYoIXZ0KXcoa3RbXCJGbG9ncmFtLkZQMzJcIl0pO2Vsc2Ugc3dpdGNoKHZ0LnR5cGUpe2Nhc2UgY3M6e3dlPT09YXM/aGUoKTp3KHZ0KTticmVha31jYXNlIFp0OntKKCk7YnJlYWt9Y2FzZSBGdDp7emUoKTticmVha319YnJlYWt9Y2FzZSBLczp7bGV0IHdlPWUuZ2V0KFdlKEVlLm5hbWUsRWUucGF0aCkpO0VlLm5hbWU9PT13dD95ZSgpOkVlLm5hbWU9PT1hcz9oZSgpOndlLnR5cGU9PT1GdD96ZSgpOlcoKTticmVha31jYXNlIHd0Ont5ZSgpO2JyZWFrfX19cmV0dXJuW3UsUF19LHl0PSh5LHUpPT57bGV0IFA9dS5sZW5ndGh8MCxZPU50KFApO3UudW5zaGlmdCh5LC4uLlkpfSxacz15PT57bGV0IHU9W10sUD1bLi4ubnQsLi4uZHRdLFk9bmV3IE1hcChbW1wiYWxsb2NcIixbT3QsMSwxMjcsMSwxMjddXSxbXCJkZWFsbG9jXCIsW090LDEsMTI3LDBdXSxbXCJtZXJnZVwiLFtPdCwwLDBdXSxbXCJzYXZlXCIsW090LDIsMTI3LDEyNywwXV0sW1widW5kb1wiLFtPdCwwLDIsMTI3LDEyN11dLFtcInVuZG9QZW51bHRpbWF0ZVwiLFtPdCwwLDIsMTI3LDEyN11dLFtcImRyYXdcIixbT3QsMSwxMjcsMF1dLFtcImRyYXdJNjRcIixbT3QsMSwxMjYsMF1dLFtcImRyYXdGUDMyXCIsW090LDEsMTI1LDBdXSxbXCJkcmF3RlA2NFwiLFtPdCwxLDEyNCwwXV0sW1wibm93XCIsW090LDAsMSwxMjZdXV0pO2ZvcihsZXQgVyBvZiB5KWlmKFkuaGFzKFcpKXUucHVzaCguLi5ZLmdldChXKSk7ZWxzZSB0aHJvdyBuZXcgRXJyb3IoXCJQcm9jZWR1cmUgbm90IGZvdW5kOlwiLFcpO2ZvcihsZXQgVyBvZiBQKXtsZXR7ZGVzY3JpcHRpb246eWV9PVcse2lucHV0czp6ZSxvdXRwdXRzOmhlfT15ZSxbeGUsRWVdPWZ0KHplKSxbd2UsR2VdPWZ0KGhlKTt1LnB1c2goT3QseGUsLi4uRWUsd2UsLi4uR2UpfWxldCBKPVAubGVuZ3RofDAsdz1OdChKK3kuc2l6ZSk7cmV0dXJuIHUudW5zaGlmdCguLi53KSx5dChIbCx1KSx1fSxYcz15PT57bGV0IHU9W107cmV0dXJuIHkmJnkuc2l6ZT4wJiYodS5wdXNoKDIpLHUucHVzaCgxMjcsMSksdS5wdXNoKDY1LDAsMTEpLHUucHVzaCgxMjcsMSksdS5wdXNoKDY1LDAsMTEpLHl0KFpsLHUpKSx1fSxWdD0wLHhzPSh5LHUpPT57bGV0IFA9W10sWT0wLEo9e307aWYocy5tZW1vcnkpe2xldCB5ZT14ZT0+e2xldCBFZT1bLi4ueGVdLm1hcCh3ZT0+d2UuY2hhckNvZGVBdCgwKSk7cmV0dXJuW0VlLmxlbmd0aCwuLi5FZV19LHplPVtdOyh1fHx5LnNpemU+MCkmJihKLm1lbW9yeT17cGF0aDpcIm1lbW9yeVwiLGRlc2NyaXB0aW9uOntpbnB1dHM6W10sb3V0cHV0czpbXX19KTtmb3IobGV0IHhlIG9mIHkpemUucHVzaCh5ZSh4ZSkpLEpbeGVdPXtwYXRoOnhlLGRlc2NyaXB0aW9uOntpbnB1dHM6W10sb3V0cHV0czpbXX19O2xldCBoZT1BcnJheS5mcm9tKHkpO2ZvcihsZXQgeGUgb2YgeSlidC5maWxsKEhuKSx2bihZLGJ0KSxQLnB1c2goLi4uWm4sLi4uemVbaGUuaW5kZXhPZih4ZSldLGhjLGhlLmluZGV4T2YoeGUpKSxZPVkrMXwwfWZvcihsZXQgeWUgb2YgbnQpe2J0LmZpbGwoSG4pLHZuKFksYnQpO2xldCB6ZT1TdHJpbmcuZnJvbUNvZGVQb2ludCguLi5idCk7Slt6ZV09e3BhdGg6eWUucGF0aCxkZXNjcmlwdGlvbjp5ZS5kZXNjcmlwdGlvbn07bGV0IGhlPVl8MDtQLnB1c2goLi4uWm4sYnQubGVuZ3RofDAsLi4uYnQsaGMsaGUpLFk9WSsxfDB9VnQ9WXwwLCh1fHx5LnNpemU+MCkmJihQLnB1c2goLi4uWm4sLi4uWGwsdmwsLi4uWWwpLFk9WSsxfDApO2xldCB3PVl8MCxXPU50KHcpO3JldHVybiBQLnVuc2hpZnQoLi4uVykseXQoR2wsUCksci5pbXBvcnRzPUosUH0sQ2U9KCk9PntsZXQgeT1bXTt2YXIgdT1kdC5sZW5ndGh8MDtmb3IobGV0IEo9MDtKPHU7Sj1KKzF8MCl7bGV0IHc9SnwwLFc9VnQrd3wwLHllPU50KFcpO3kucHVzaCguLi55ZSl9bGV0IFA9ZHQubGVuZ3RofDAsWT1OdChQKTtyZXR1cm4geS51bnNoaWZ0KC4uLlkpLHl0KEtsLHkpLHl9LEZlPSgpPT57bGV0IHk9W10sdT0wLFA9e307dmFyIFk9ZHQubGVuZ3RofDA7Zm9yKGxldCBXPTA7VzxZO1c9VysxfDApe2xldCB5ZT1XK1Z0fDAsemU9TnQoeWUpO2J0LmZpbGwoSG4pLHZuKHUsYnQpO2xldHtuYW1lOmhlLHBhdGg6eGUsZGVzY3JpcHRpb246RWV9PWR0W1ddO0VlPXtpbnB1dHM6RWUuaW5wdXRzLG91dHB1dHM6RWUub3V0cHV0c307bGV0IHdlPVN0cmluZy5mcm9tQ29kZVBvaW50KC4uLmJ0KTtQW3dlXT17bmFtZTpoZSxwYXRoOnhlLGRlc2NyaXB0aW9uOkVlfSx5LnB1c2goYnQubGVuZ3RofDAsLi4uYnQsV2wsLi4uemUpLHU9dSsxfDB9bGV0IEo9dXwwLHc9TnQoSik7cmV0dXJuIHkudW5zaGlmdCguLi53KSx5dChCbCx5KSxyLnByb2NlZHVyZXM9UCx5fSxEdD0oKT0+e2xldCB5PVtdLHU9bmV3IFNldCxQPSExO2ZvcihsZXQgVyBvZiBkdCl7bGV0e3RvdGFsT2N0ZXRzOnllLG5hdGl2ZUltcG9ydHM6emUsbG9hZHM6aGV9PU1zKFcsZSxwZSxjZSxzKTt1PW5ldyBTZXQoWy4uLnUsLi4uemVdKSxoZSYmIVAmJihQPWhlKTtsZXQgeGU9eWUubGVuZ3RofDAsRWU9TnQoeGUpO3kucHVzaCguLi5FZSwuLi55ZSl9bGV0IFk9ZHQubGVuZ3RofDAsSj1OdChZKTtyZXR1cm4geS51bnNoaWZ0KC4uLkopLHl0KE1sLHkpLHk9KChXLHllLHplKT0+e2xldCBoZT1BcnJheS5mcm9tKHplKSx4ZT1cImFydGlmaWNpYWxcIjtyZXR1cm4gVy5tYXAoRWU9PntpZih0eXBlb2YgRWU9PVwic3RyaW5nXCIpe2lmKEVlLnN0YXJ0c1dpdGgoeGUpKXtsZXQgd2U9RWUuc2xpY2UoeGUubGVuZ3RoKSxHZT1wYXJzZUludCh3ZSwxMCk7aWYoIWlzTmFOKEdlKSlyZXR1cm4gR2UreWV9aWYoaGUuaW5jbHVkZXMoRWUpKXJldHVybiBoZS5pbmRleE9mKEVlKX1yZXR1cm4gRWV9KX0pKHksdS5zaXplLHUpLHt0b3RhbE9jdGV0czp5LGFsbEltcG9ydHM6dSxsb2FkczpQfX0se3RvdGFsT2N0ZXRzOmdlLGFsbEltcG9ydHM6S2UsbG9hZHM6WG59PUR0KCksV3M9WnMoS2UpLHFlPXhzKEtlLFhuKSxJZT1DZSgpLFduPVhzKEtlKSxJPUZlKCksWHQ9bmV3IFVpbnQ4QXJyYXkoWy4uLiRsLC4uLkpsLC4uLldzLC4uLnFlLC4uLkllLC4uLlduLC4uLkksLi4uZ2VdKTtyZXR1cm5bcixYdF19LGV1PU9iamVjdC5mcmVlemUoe2NvbXBpbGU6UWx9KSxRdT1ldTtleHBvcnR7UXUgYXMgZGVmYXVsdH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@munezero/floparser/Compilers/SimplerWASM/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@munezero/floparser/SimpleParser/index.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@munezero/floparser/SimpleParser/index.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Rm)\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nvar cf=Object.create;var Oa=Object.defineProperty;var uf=Object.getOwnPropertyDescriptor;var lf=Object.getOwnPropertyNames;var ff=Object.getPrototypeOf,Ef=Object.prototype.hasOwnProperty;var hn=(k,S)=>()=>(S||k((S={exports:{}}).exports,S),S.exports);var _f=(k,S,D,W)=>{if(S&&typeof S==\"object\"||typeof S==\"function\")for(let X of lf(S))!Ef.call(k,X)&&X!==D&&Oa(k,X,{get:()=>S[X],enumerable:!(W=uf(S,X))||W.enumerable});return k};var Ta=(k,S,D)=>(D=k!=null?cf(ff(k)):{},_f(S||!k||!k.__esModule?Oa(D,\"default\",{value:k,enumerable:!0}):D,k));var Ia=hn((Aa,da)=>{(function(k){var S=Object.hasOwnProperty,D=Array.isArray?Array.isArray:function(A){return Object.prototype.toString.call(A)===\"[object Array]\"},W=10,X=typeof process==\"object\"&&typeof process.nextTick==\"function\",ae=typeof Symbol==\"function\",Ee=typeof Reflect==\"object\",be=typeof setImmediate==\"function\",ve=be?setImmediate:setTimeout,he=ae?Ee&&typeof Reflect.ownKeys==\"function\"?Reflect.ownKeys:function(p){var A=Object.getOwnPropertyNames(p);return A.push.apply(A,Object.getOwnPropertySymbols(p)),A}:Object.keys;function Oe(){this._events={},this._conf&&Le.call(this,this._conf)}function Le(p){p&&(this._conf=p,p.delimiter&&(this.delimiter=p.delimiter),p.maxListeners!==k&&(this._maxListeners=p.maxListeners),p.wildcard&&(this.wildcard=p.wildcard),p.newListener&&(this._newListener=p.newListener),p.removeListener&&(this._removeListener=p.removeListener),p.verboseMemoryLeak&&(this.verboseMemoryLeak=p.verboseMemoryLeak),p.ignoreErrors&&(this.ignoreErrors=p.ignoreErrors),this.wildcard&&(this.listenerTree={}))}function Re(p,A){var P=\"(node) warning: possible EventEmitter memory leak detected. \"+p+\" listeners added. Use emitter.setMaxListeners() to increase limit.\";if(this.verboseMemoryLeak&&(P+=\" Event name: \"+A+\".\"),typeof process<\"u\"&&process.emitWarning){var L=new Error(P);L.name=\"MaxListenersExceededWarning\",L.emitter=this,L.count=p,process.emitWarning(L)}else console.error(P),console.trace&&console.trace()}var Ze=function(p,A,P){var L=arguments.length;switch(L){case 0:return[];case 1:return[p];case 2:return[p,A];case 3:return[p,A,P];default:for(var v=new Array(L);L--;)v[L]=arguments[L];return v}};function Rt(p,A){for(var P={},L,v=p.length,C=A?A.length:0,g=0;g<v;g++)L=p[g],P[L]=g<C?A[g]:k;return P}function ye(p,A,P){this._emitter=p,this._target=A,this._listeners={},this._listenersCount=0;var L,v;if((P.on||P.off)&&(L=P.on,v=P.off),A.addEventListener?(L=A.addEventListener,v=A.removeEventListener):A.addListener?(L=A.addListener,v=A.removeListener):A.on&&(L=A.on,v=A.off),!L&&!v)throw Error(\"target does not implement any known event API\");if(typeof L!=\"function\")throw TypeError(\"on method must be a function\");if(typeof v!=\"function\")throw TypeError(\"off method must be a function\");this._on=L,this._off=v;var C=p._observers;C?C.push(this):p._observers=[this]}Object.assign(ye.prototype,{subscribe:function(p,A,P){var L=this,v=this._target,C=this._emitter,g=this._listeners,K=function(){var G=Ze.apply(null,arguments),_={data:G,name:A,original:p};if(P){var J=P.call(v,_);J!==!1&&C.emit.apply(C,[_.name].concat(G));return}C.emit.apply(C,[A].concat(G))};if(g[p])throw Error(\"Event '\"+p+\"' is already listening\");this._listenersCount++,C._newListener&&C._removeListener&&!L._onNewListener?(this._onNewListener=function(G){G===A&&g[p]===null&&(g[p]=K,L._on.call(v,p,K))},C.on(\"newListener\",this._onNewListener),this._onRemoveListener=function(G){G===A&&!C.hasListeners(G)&&g[p]&&(g[p]=null,L._off.call(v,p,K))},g[p]=null,C.on(\"removeListener\",this._onRemoveListener)):(g[p]=K,L._on.call(v,p,K))},unsubscribe:function(p){var A=this,P=this._listeners,L=this._emitter,v,C,g=this._off,K=this._target,G;if(p&&typeof p!=\"string\")throw TypeError(\"event must be a string\");function _(){A._onNewListener&&(L.off(\"newListener\",A._onNewListener),L.off(\"removeListener\",A._onRemoveListener),A._onNewListener=null,A._onRemoveListener=null);var J=V.call(L,A);L._observers.splice(J,1)}if(p){if(v=P[p],!v)return;g.call(K,p,v),delete P[p],--this._listenersCount||_()}else{for(C=he(P),G=C.length;G-- >0;)p=C[G],g.call(K,p,P[p]);this._listeners={},this._listenersCount=0,_()}}});function Nt(p,A,P,L){var v=Object.assign({},A);if(!p)return v;if(typeof p!=\"object\")throw TypeError(\"options must be an object\");var C=Object.keys(p),g=C.length,K,G,_;function J(Pe){throw Error('Invalid \"'+K+'\" option value'+(Pe?\". Reason: \"+Pe:\"\"))}for(var de=0;de<g;de++){if(K=C[de],!L&&!S.call(A,K))throw Error('Unknown \"'+K+'\" option');G=p[K],G!==k&&(_=P[K],v[K]=_?_(G,J):G)}return v}function ut(p,A){return(typeof p!=\"function\"||!p.hasOwnProperty(\"prototype\"))&&A(\"value must be a constructor\"),p}function kt(p){var A=\"value must be type of \"+p.join(\"|\"),P=p.length,L=p[0],v=p[1];return P===1?function(C,g){if(typeof C===L)return C;g(A)}:P===2?function(C,g){var K=typeof C;if(K===L||K===v)return C;g(A)}:function(C,g){for(var K=typeof C,G=P;G-- >0;)if(K===p[G])return C;g(A)}}var ue=kt([\"function\"]),jt=kt([\"object\",\"function\"]);function Ve(p,A,P){var L,v,C=0,g,K=new p(function(G,_,J){P=Nt(P,{timeout:0,overload:!1},{timeout:function(De,U){return De*=1,(typeof De!=\"number\"||De<0||!Number.isFinite(De))&&U(\"timeout must be a positive number\"),De}}),L=!P.overload&&typeof p.prototype.cancel==\"function\"&&typeof J==\"function\";function de(){v&&(v=null),C&&(clearTimeout(C),C=0)}var Pe=function(De){de(),G(De)},ke=function(De){de(),_(De)};L?A(Pe,ke,J):(v=[function(De){ke(De||Error(\"canceled\"))}],A(Pe,ke,function(De){if(g)throw Error(\"Unable to subscribe on cancel event asynchronously\");if(typeof De!=\"function\")throw TypeError(\"onCancel callback must be a function\");v.push(De)}),g=!0),P.timeout>0&&(C=setTimeout(function(){var De=Error(\"timeout\");De.code=\"ETIMEDOUT\",C=0,K.cancel(De),_(De)},P.timeout))});return L||(K.cancel=function(G){if(v){for(var _=v.length,J=1;J<_;J++)v[J](G);v[0](G),v=null}}),K}function V(p){var A=this._observers;if(!A)return-1;for(var P=A.length,L=0;L<P;L++)if(A[L]._target===p)return L;return-1}function B(p,A,P,L,v){if(!P)return null;if(L===0){var C=typeof A;if(C===\"string\"){var g,K,G=0,_=0,J=this.delimiter,de=J.length;if((K=A.indexOf(J))!==-1){g=new Array(5);do g[G++]=A.slice(_,K),_=K+de;while((K=A.indexOf(J,_))!==-1);g[G++]=A.slice(_),A=g,v=G}else A=[A],v=1}else C===\"object\"?v=A.length:(A=[A],v=1)}var Pe=null,ke,De,U,u,a,Yt=A[L],Wt=A[L+1],Ke,T;if(L===v)P._listeners&&(typeof P._listeners==\"function\"?(p&&p.push(P._listeners),Pe=[P]):(p&&p.push.apply(p,P._listeners),Pe=[P]));else if(Yt===\"*\"){for(Ke=he(P),K=Ke.length;K-- >0;)ke=Ke[K],ke!==\"_listeners\"&&(T=B(p,A,P[ke],L+1,v),T&&(Pe?Pe.push.apply(Pe,T):Pe=T));return Pe}else if(Yt===\"**\"){for(a=L+1===v||L+2===v&&Wt===\"*\",a&&P._listeners&&(Pe=B(p,A,P,v,v)),Ke=he(P),K=Ke.length;K-- >0;)ke=Ke[K],ke!==\"_listeners\"&&(ke===\"*\"||ke===\"**\"?(P[ke]._listeners&&!a&&(T=B(p,A,P[ke],v,v),T&&(Pe?Pe.push.apply(Pe,T):Pe=T)),T=B(p,A,P[ke],L,v)):ke===Wt?T=B(p,A,P[ke],L+2,v):T=B(p,A,P[ke],L,v),T&&(Pe?Pe.push.apply(Pe,T):Pe=T));return Pe}else P[Yt]&&(Pe=B(p,A,P[Yt],L+1,v));if(De=P[\"*\"],De&&B(p,A,De,L+1,v),U=P[\"**\"],U)if(L<v)for(U._listeners&&B(p,A,U,v,v),Ke=he(U),K=Ke.length;K-- >0;)ke=Ke[K],ke!==\"_listeners\"&&(ke===Wt?B(p,A,U[ke],L+2,v):ke===Yt?B(p,A,U[ke],L+1,v):(u={},u[ke]=U[ke],B(p,A,{\"**\":u},L+1,v)));else U._listeners?B(p,A,U,v,v):U[\"*\"]&&U[\"*\"]._listeners&&B(p,A,U[\"*\"],v,v);return Pe}function M(p,A,P){var L=0,v=0,C,g=this.delimiter,K=g.length,G;if(typeof p==\"string\")if((C=p.indexOf(g))!==-1){G=new Array(5);do G[L++]=p.slice(v,C),v=C+K;while((C=p.indexOf(g,v))!==-1);G[L++]=p.slice(v)}else G=[p],L=1;else G=p,L=p.length;if(L>1){for(C=0;C+1<L;C++)if(G[C]===\"**\"&&G[C+1]===\"**\")return}var _=this.listenerTree,J;for(C=0;C<L;C++)if(J=G[C],_=_[J]||(_[J]={}),C===L-1)return _._listeners?(typeof _._listeners==\"function\"&&(_._listeners=[_._listeners]),P?_._listeners.unshift(A):_._listeners.push(A),!_._listeners.warned&&this._maxListeners>0&&_._listeners.length>this._maxListeners&&(_._listeners.warned=!0,Re.call(this,_._listeners.length,J))):_._listeners=A,!0;return!0}function z(p,A,P,L){for(var v=he(p),C=v.length,g,K,G,_=p._listeners,J;C-- >0;)K=v[C],g=p[K],K===\"_listeners\"?G=P:G=P?P.concat(K):[K],J=L||typeof K==\"symbol\",_&&A.push(J?G:G.join(this.delimiter)),typeof g==\"object\"&&z.call(this,g,A,G,J);return A}function q(p){for(var A=he(p),P=A.length,L,v,C;P-- >0;)v=A[P],L=p[v],L&&(C=!0,v!==\"_listeners\"&&!q(L)&&delete p[v]);return C}function Te(p,A,P){this.emitter=p,this.event=A,this.listener=P}Te.prototype.off=function(){return this.emitter.off(this.event,this.listener),this};function _e(p,A,P){if(P===!0)v=!0;else if(P===!1)L=!0;else{if(!P||typeof P!=\"object\")throw TypeError(\"options should be an object or true\");var L=P.async,v=P.promisify,C=P.nextTick,g=P.objectify}if(L||C||v){var K=A,G=A._origin||A;if(C&&!X)throw Error(\"process.nextTick is not supported\");v===k&&(v=A.constructor.name===\"AsyncFunction\"),A=function(){var _=arguments,J=this,de=this.event;return v?C?Promise.resolve():new Promise(function(Pe){ve(Pe)}).then(function(){return J.event=de,K.apply(J,_)}):(C?process.nextTick:ve)(function(){J.event=de,K.apply(J,_)})},A._async=!0,A._origin=G}return[A,g?new Te(this,p,A):this]}function ne(p){this._events={},this._newListener=!1,this._removeListener=!1,this.verboseMemoryLeak=!1,Le.call(this,p)}ne.EventEmitter2=ne,ne.prototype.listenTo=function(p,A,P){if(typeof p!=\"object\")throw TypeError(\"target musts be an object\");var L=this;P=Nt(P,{on:k,off:k,reducers:k},{on:ue,off:ue,reducers:jt});function v(C){if(typeof C!=\"object\")throw TypeError(\"events must be an object\");var g=P.reducers,K=V.call(L,p),G;K===-1?G=new ye(L,p,P):G=L._observers[K];for(var _=he(C),J=_.length,de,Pe=typeof g==\"function\",ke=0;ke<J;ke++)de=_[ke],G.subscribe(de,C[de]||de,Pe?g:g&&g[de])}return D(A)?v(Rt(A)):v(typeof A==\"string\"?Rt(A.split(/\\s+/)):A),this},ne.prototype.stopListeningTo=function(p,A){var P=this._observers;if(!P)return!1;var L=P.length,v,C=!1;if(p&&typeof p!=\"object\")throw TypeError(\"target should be an object\");for(;L-- >0;)v=P[L],(!p||v._target===p)&&(v.unsubscribe(A),C=!0);return C},ne.prototype.delimiter=\".\",ne.prototype.setMaxListeners=function(p){p!==k&&(this._maxListeners=p,this._conf||(this._conf={}),this._conf.maxListeners=p)},ne.prototype.getMaxListeners=function(){return this._maxListeners},ne.prototype.event=\"\",ne.prototype.once=function(p,A,P){return this._once(p,A,!1,P)},ne.prototype.prependOnceListener=function(p,A,P){return this._once(p,A,!0,P)},ne.prototype._once=function(p,A,P,L){return this._many(p,1,A,P,L)},ne.prototype.many=function(p,A,P,L){return this._many(p,A,P,!1,L)},ne.prototype.prependMany=function(p,A,P,L){return this._many(p,A,P,!0,L)},ne.prototype._many=function(p,A,P,L,v){var C=this;if(typeof P!=\"function\")throw new Error(\"many only accepts instances of Function\");function g(){return--A===0&&C.off(p,g),P.apply(this,arguments)}return g._origin=P,this._on(p,g,L,v)},ne.prototype.emit=function(){if(!this._events&&!this._all)return!1;this._events||Oe.call(this);var p=arguments[0],A,P=this.wildcard,L,v,C,g,K;if(p===\"newListener\"&&!this._newListener&&!this._events.newListener)return!1;if(P&&(A=p,p!==\"newListener\"&&p!==\"removeListener\"&&typeof p==\"object\")){if(v=p.length,ae){for(C=0;C<v;C++)if(typeof p[C]==\"symbol\"){K=!0;break}}K||(p=p.join(this.delimiter))}var G=arguments.length,_;if(this._all&&this._all.length)for(_=this._all.slice(),C=0,v=_.length;C<v;C++)switch(this.event=p,G){case 1:_[C].call(this,p);break;case 2:_[C].call(this,p,arguments[1]);break;case 3:_[C].call(this,p,arguments[1],arguments[2]);break;default:_[C].apply(this,arguments)}if(P)_=[],B.call(this,_,A,this.listenerTree,0,v);else if(_=this._events[p],typeof _==\"function\"){switch(this.event=p,G){case 1:_.call(this);break;case 2:_.call(this,arguments[1]);break;case 3:_.call(this,arguments[1],arguments[2]);break;default:for(L=new Array(G-1),g=1;g<G;g++)L[g-1]=arguments[g];_.apply(this,L)}return!0}else _&&(_=_.slice());if(_&&_.length){if(G>3)for(L=new Array(G-1),g=1;g<G;g++)L[g-1]=arguments[g];for(C=0,v=_.length;C<v;C++)switch(this.event=p,G){case 1:_[C].call(this);break;case 2:_[C].call(this,arguments[1]);break;case 3:_[C].call(this,arguments[1],arguments[2]);break;default:_[C].apply(this,L)}return!0}else if(!this.ignoreErrors&&!this._all&&p===\"error\")throw arguments[1]instanceof Error?arguments[1]:new Error(\"Uncaught, unspecified 'error' event.\");return!!this._all},ne.prototype.emitAsync=function(){if(!this._events&&!this._all)return!1;this._events||Oe.call(this);var p=arguments[0],A=this.wildcard,P,L,v,C,g,K;if(p===\"newListener\"&&!this._newListener&&!this._events.newListener)return Promise.resolve([!1]);if(A&&(P=p,p!==\"newListener\"&&p!==\"removeListener\"&&typeof p==\"object\")){if(C=p.length,ae){for(g=0;g<C;g++)if(typeof p[g]==\"symbol\"){L=!0;break}}L||(p=p.join(this.delimiter))}var G=[],_=arguments.length,J;if(this._all)for(g=0,C=this._all.length;g<C;g++)switch(this.event=p,_){case 1:G.push(this._all[g].call(this,p));break;case 2:G.push(this._all[g].call(this,p,arguments[1]));break;case 3:G.push(this._all[g].call(this,p,arguments[1],arguments[2]));break;default:G.push(this._all[g].apply(this,arguments))}if(A?(J=[],B.call(this,J,P,this.listenerTree,0)):J=this._events[p],typeof J==\"function\")switch(this.event=p,_){case 1:G.push(J.call(this));break;case 2:G.push(J.call(this,arguments[1]));break;case 3:G.push(J.call(this,arguments[1],arguments[2]));break;default:for(v=new Array(_-1),K=1;K<_;K++)v[K-1]=arguments[K];G.push(J.apply(this,v))}else if(J&&J.length){if(J=J.slice(),_>3)for(v=new Array(_-1),K=1;K<_;K++)v[K-1]=arguments[K];for(g=0,C=J.length;g<C;g++)switch(this.event=p,_){case 1:G.push(J[g].call(this));break;case 2:G.push(J[g].call(this,arguments[1]));break;case 3:G.push(J[g].call(this,arguments[1],arguments[2]));break;default:G.push(J[g].apply(this,v))}}else if(!this.ignoreErrors&&!this._all&&p===\"error\")return arguments[1]instanceof Error?Promise.reject(arguments[1]):Promise.reject(\"Uncaught, unspecified 'error' event.\");return Promise.all(G)},ne.prototype.on=function(p,A,P){return this._on(p,A,!1,P)},ne.prototype.prependListener=function(p,A,P){return this._on(p,A,!0,P)},ne.prototype.onAny=function(p){return this._onAny(p,!1)},ne.prototype.prependAny=function(p){return this._onAny(p,!0)},ne.prototype.addListener=ne.prototype.on,ne.prototype._onAny=function(p,A){if(typeof p!=\"function\")throw new Error(\"onAny only accepts instances of Function\");return this._all||(this._all=[]),A?this._all.unshift(p):this._all.push(p),this},ne.prototype._on=function(p,A,P,L){if(typeof p==\"function\")return this._onAny(p,A),this;if(typeof A!=\"function\")throw new Error(\"on only accepts instances of Function\");this._events||Oe.call(this);var v=this,C;return L!==k&&(C=_e.call(this,p,A,L),A=C[0],v=C[1]),this._newListener&&this.emit(\"newListener\",p,A),this.wildcard?(M.call(this,p,A,P),v):(this._events[p]?(typeof this._events[p]==\"function\"&&(this._events[p]=[this._events[p]]),P?this._events[p].unshift(A):this._events[p].push(A),!this._events[p].warned&&this._maxListeners>0&&this._events[p].length>this._maxListeners&&(this._events[p].warned=!0,Re.call(this,this._events[p].length,p))):this._events[p]=A,v)},ne.prototype.off=function(p,A){if(typeof A!=\"function\")throw new Error(\"removeListener only takes instances of Function\");var P,L=[];if(this.wildcard){var v=typeof p==\"string\"?p.split(this.delimiter):p.slice();if(L=B.call(this,null,v,this.listenerTree,0),!L)return this}else{if(!this._events[p])return this;P=this._events[p],L.push({_listeners:P})}for(var C=0;C<L.length;C++){var g=L[C];if(P=g._listeners,D(P)){for(var K=-1,G=0,_=P.length;G<_;G++)if(P[G]===A||P[G].listener&&P[G].listener===A||P[G]._origin&&P[G]._origin===A){K=G;break}if(K<0)continue;return this.wildcard?g._listeners.splice(K,1):this._events[p].splice(K,1),P.length===0&&(this.wildcard?delete g._listeners:delete this._events[p]),this._removeListener&&this.emit(\"removeListener\",p,A),this}else(P===A||P.listener&&P.listener===A||P._origin&&P._origin===A)&&(this.wildcard?delete g._listeners:delete this._events[p],this._removeListener&&this.emit(\"removeListener\",p,A))}return this.listenerTree&&q(this.listenerTree),this},ne.prototype.offAny=function(p){var A=0,P=0,L;if(p&&this._all&&this._all.length>0){for(L=this._all,A=0,P=L.length;A<P;A++)if(p===L[A])return L.splice(A,1),this._removeListener&&this.emit(\"removeListenerAny\",p),this}else{if(L=this._all,this._removeListener)for(A=0,P=L.length;A<P;A++)this.emit(\"removeListenerAny\",L[A]);this._all=[]}return this},ne.prototype.removeListener=ne.prototype.off,ne.prototype.removeAllListeners=function(p){if(p===k)return!this._events||Oe.call(this),this;if(this.wildcard){var A=B.call(this,null,p,this.listenerTree,0),P,L;if(!A)return this;for(L=0;L<A.length;L++)P=A[L],P._listeners=null;this.listenerTree&&q(this.listenerTree)}else this._events&&(this._events[p]=null);return this},ne.prototype.listeners=function(p){var A=this._events,P,L,v,C,g;if(p===k){if(this.wildcard)throw Error(\"event name required for wildcard emitter\");if(!A)return[];for(P=he(A),C=P.length,v=[];C-- >0;)L=A[P[C]],typeof L==\"function\"?v.push(L):v.push.apply(v,L);return v}else{if(this.wildcard){if(g=this.listenerTree,!g)return[];var K=[],G=typeof p==\"string\"?p.split(this.delimiter):p.slice();return B.call(this,K,G,g,0),K}return A?(L=A[p],L?typeof L==\"function\"?[L]:L:[]):[]}},ne.prototype.eventNames=function(p){var A=this._events;return this.wildcard?z.call(this,this.listenerTree,[],null,p):A?he(A):[]},ne.prototype.listenerCount=function(p){return this.listeners(p).length},ne.prototype.hasListeners=function(p){if(this.wildcard){var A=[],P=typeof p==\"string\"?p.split(this.delimiter):p.slice();return B.call(this,A,P,this.listenerTree,0),A.length>0}var L=this._events,v=this._all;return!!(v&&v.length||L&&(p===k?he(L).length:L[p]))},ne.prototype.listenersAny=function(){return this._all?this._all:[]},ne.prototype.waitFor=function(p,A){var P=this,L=typeof A;return L===\"number\"?A={timeout:A}:L===\"function\"&&(A={filter:A}),A=Nt(A,{timeout:0,filter:k,handleError:!1,Promise,overload:!1},{filter:ue,Promise:ut}),Ve(A.Promise,function(v,C,g){function K(){var G=A.filter;if(!(G&&!G.apply(P,arguments)))if(P.off(p,K),A.handleError){var _=arguments[0];_?C(_):v(Ze.apply(null,arguments).slice(1))}else v(Ze.apply(null,arguments))}g(function(){P.off(p,K)}),P._on(p,K,!1)},{timeout:A.timeout,overload:A.overload})};function Ge(p,A,P){P=Nt(P,{Promise,timeout:0,overload:!1},{Promise:ut});var L=P.Promise;return Ve(L,function(v,C,g){var K;if(typeof p.addEventListener==\"function\"){K=function(){v(Ze.apply(null,arguments))},g(function(){p.removeEventListener(A,K)}),p.addEventListener(A,K,{once:!0});return}var G=function(){_&&p.removeListener(\"error\",_),v(Ze.apply(null,arguments))},_;A!==\"error\"&&(_=function(J){p.removeListener(A,G),C(J)},p.once(\"error\",_)),g(function(){_&&p.removeListener(\"error\",_),p.removeListener(A,G)}),p.once(A,G)},{timeout:P.timeout,overload:P.overload})}var bt=ne.prototype;if(Object.defineProperties(ne,{defaultMaxListeners:{get:function(){return bt._maxListeners},set:function(p){if(typeof p!=\"number\"||p<0||Number.isNaN(p))throw TypeError(\"n must be a non-negative number\");bt._maxListeners=p},enumerable:!0},once:{value:Ge,writable:!0,configurable:!0}}),Object.defineProperties(bt,{_maxListeners:{value:W,writable:!0,configurable:!0},_observers:{value:null,writable:!0,configurable:!0}}),typeof define==\"function\"&&define.amd)define(function(){return ne});else if(typeof Aa==\"object\")da.exports=ne;else{var _t=new Function(\"\",\"return this\")();_t.EventEmitter2=ne}})()});var Sa=hn((qp,Na)=>{Na.exports=Ia()});var Pa=hn((Pn,ha)=>{(function(k,S){var D=S(k);if(typeof define==\"function\"&&define.amd)define(\"DeepDiff\",function(){return D});else if(typeof Pn==\"object\"||typeof navigator==\"object\"&&navigator.product.match(/ReactNative/i))ha.exports=D;else{var W=k.DeepDiff;D.noConflict=function(){return k.DeepDiff===D&&(k.DeepDiff=W),D},k.DeepDiff=D}})(Pn,function(k){var S=[\"N\",\"E\",\"A\",\"D\"];function D(V,B){V.super_=B,V.prototype=Object.create(B.prototype,{constructor:{value:V,enumerable:!1,writable:!0,configurable:!0}})}function W(V,B){Object.defineProperty(this,\"kind\",{value:V,enumerable:!0}),B&&B.length&&Object.defineProperty(this,\"path\",{value:B,enumerable:!0})}function X(V,B,M){X.super_.call(this,\"E\",V),Object.defineProperty(this,\"lhs\",{value:B,enumerable:!0}),Object.defineProperty(this,\"rhs\",{value:M,enumerable:!0})}D(X,W);function ae(V,B){ae.super_.call(this,\"N\",V),Object.defineProperty(this,\"rhs\",{value:B,enumerable:!0})}D(ae,W);function Ee(V,B){Ee.super_.call(this,\"D\",V),Object.defineProperty(this,\"lhs\",{value:B,enumerable:!0})}D(Ee,W);function be(V,B,M){be.super_.call(this,\"A\",V),Object.defineProperty(this,\"index\",{value:B,enumerable:!0}),Object.defineProperty(this,\"item\",{value:M,enumerable:!0})}D(be,W);function ve(V,B,M){var z=V.slice((M||B)+1||V.length);return V.length=B<0?V.length+B:B,V.push.apply(V,z),V}function he(V){var B=typeof V;return B!==\"object\"?B:V===Math?\"math\":V===null?\"null\":Array.isArray(V)?\"array\":Object.prototype.toString.call(V)===\"[object Date]\"?\"date\":typeof V.toString==\"function\"&&/^\\/.*\\//.test(V.toString())?\"regexp\":\"object\"}function Oe(V){var B=0;if(V.length===0)return B;for(var M=0;M<V.length;M++){var z=V.charCodeAt(M);B=(B<<5)-B+z,B=B&B}return B}function Le(V){var B=0,M=he(V);if(M===\"array\"){V.forEach(function(ne){B+=Le(ne)});var z=\"[type: array, hash: \"+B+\"]\";return B+Oe(z)}if(M===\"object\"){for(var q in V)if(V.hasOwnProperty(q)){var Te=\"[ type: object, key: \"+q+\", value hash: \"+Le(V[q])+\"]\";B+=Oe(Te)}return B}var _e=\"[ type: \"+M+\" ; value: \"+V+\"]\";return B+Oe(_e)}function Re(V,B,M,z,q,Te,_e,ne){M=M||[],q=q||[],_e=_e||[];var Ge=q.slice(0);if(typeof Te<\"u\"&&Te!==null){if(z){if(typeof z==\"function\"&&z(Ge,Te))return;if(typeof z==\"object\"){if(z.prefilter&&z.prefilter(Ge,Te))return;if(z.normalize){var bt=z.normalize(Ge,Te,V,B);bt&&(V=bt[0],B=bt[1])}}}Ge.push(Te)}he(V)===\"regexp\"&&he(B)===\"regexp\"&&(V=V.toString(),B=B.toString());var _t=typeof V,p=typeof B,A,P,L,v,C=_t!==\"undefined\"||_e&&_e.length>0&&_e[_e.length-1].lhs&&Object.getOwnPropertyDescriptor(_e[_e.length-1].lhs,Te),g=p!==\"undefined\"||_e&&_e.length>0&&_e[_e.length-1].rhs&&Object.getOwnPropertyDescriptor(_e[_e.length-1].rhs,Te);if(!C&&g)M.push(new ae(Ge,B));else if(!g&&C)M.push(new Ee(Ge,V));else if(he(V)!==he(B))M.push(new X(Ge,V,B));else if(he(V)===\"date\"&&V-B!==0)M.push(new X(Ge,V,B));else if(_t===\"object\"&&V!==null&&B!==null){for(A=_e.length-1;A>-1;--A)if(_e[A].lhs===V){v=!0;break}if(v)V!==B&&M.push(new X(Ge,V,B));else{if(_e.push({lhs:V,rhs:B}),Array.isArray(V)){for(ne&&(V.sort(function(_,J){return Le(_)-Le(J)}),B.sort(function(_,J){return Le(_)-Le(J)})),A=B.length-1,P=V.length-1;A>P;)M.push(new be(Ge,A,new ae(void 0,B[A--])));for(;P>A;)M.push(new be(Ge,P,new Ee(void 0,V[P--])));for(;A>=0;--A)Re(V[A],B[A],M,z,Ge,A,_e,ne)}else{var K=Object.keys(V),G=Object.keys(B);for(A=0;A<K.length;++A)L=K[A],v=G.indexOf(L),v>=0?(Re(V[L],B[L],M,z,Ge,L,_e,ne),G[v]=null):Re(V[L],void 0,M,z,Ge,L,_e,ne);for(A=0;A<G.length;++A)L=G[A],L&&Re(void 0,B[L],M,z,Ge,L,_e,ne)}_e.length=_e.length-1}}else V!==B&&(_t===\"number\"&&isNaN(V)&&isNaN(B)||M.push(new X(Ge,V,B)))}function Ze(V,B,M,z,q){var Te=[];if(Re(V,B,Te,z,null,null,null,q),M)for(var _e=0;_e<Te.length;++_e)M(Te[_e]);return Te}function Rt(V,B,M,z,q,Te,_e){return Re(V,B,M,z,q,Te,_e,!0)}function ye(V,B,M,z){var q=z?function(_e){_e&&z.push(_e)}:void 0,Te=Ze(V,B,q,M);return z||(Te.length?Te:void 0)}function Nt(V,B,M,z){var q=z?function(_e){_e&&z.push(_e)}:void 0,Te=Ze(V,B,q,M,!0);return z||(Te.length?Te:void 0)}function ut(V,B,M){if(M.path&&M.path.length){var z=V[B],q,Te=M.path.length-1;for(q=0;q<Te;q++)z=z[M.path[q]];switch(M.kind){case\"A\":ut(z[M.path[q]],M.index,M.item);break;case\"D\":delete z[M.path[q]];break;case\"E\":case\"N\":z[M.path[q]]=M.rhs;break}}else switch(M.kind){case\"A\":ut(V[B],M.index,M.item);break;case\"D\":V=ve(V,B);break;case\"E\":case\"N\":V[B]=M.rhs;break}return V}function kt(V,B,M){if(typeof M>\"u\"&&B&&~S.indexOf(B.kind)&&(M=B),V&&M&&M.kind){for(var z=V,q=-1,Te=M.path?M.path.length-1:0;++q<Te;)typeof z[M.path[q]]>\"u\"&&(z[M.path[q]]=typeof M.path[q+1]<\"u\"&&typeof M.path[q+1]==\"number\"?[]:{}),z=z[M.path[q]];switch(M.kind){case\"A\":M.path&&typeof z[M.path[q]]>\"u\"&&(z[M.path[q]]=[]),ut(M.path?z[M.path[q]]:z,M.index,M.item);break;case\"D\":delete z[M.path[q]];break;case\"E\":case\"N\":z[M.path[q]]=M.rhs;break}}}function ue(V,B,M){if(M.path&&M.path.length){var z=V[B],q,Te=M.path.length-1;for(q=0;q<Te;q++)z=z[M.path[q]];switch(M.kind){case\"A\":ue(z[M.path[q]],M.index,M.item);break;case\"D\":z[M.path[q]]=M.lhs;break;case\"E\":z[M.path[q]]=M.lhs;break;case\"N\":delete z[M.path[q]];break}}else switch(M.kind){case\"A\":ue(V[B],M.index,M.item);break;case\"D\":V[B]=M.lhs;break;case\"E\":V[B]=M.lhs;break;case\"N\":V=ve(V,B);break}return V}function jt(V,B,M){if(V&&B&&M&&M.kind){var z=V,q,Te;for(Te=M.path.length-1,q=0;q<Te;q++)typeof z[M.path[q]]>\"u\"&&(z[M.path[q]]={}),z=z[M.path[q]];switch(M.kind){case\"A\":ue(z[M.path[q]],M.index,M.item);break;case\"D\":z[M.path[q]]=M.lhs;break;case\"E\":z[M.path[q]]=M.lhs;break;case\"N\":delete z[M.path[q]];break}}}function Ve(V,B,M){if(V&&B){var z=function(q){(!M||M(V,B,q))&&kt(V,B,q)};Ze(V,B,z)}}return Object.defineProperties(ye,{diff:{value:ye,enumerable:!0},orderIndependentDiff:{value:Nt,enumerable:!0},observableDiff:{value:Ze,enumerable:!0},orderIndependentObservableDiff:{value:Rt,enumerable:!0},orderIndepHash:{value:Le,enumerable:!0},applyDiff:{value:Ve,enumerable:!0},applyChange:{value:kt,enumerable:!0},revertChange:{value:jt,enumerable:!0},isConflict:{value:function(){return typeof $conflict<\"u\"},enumerable:!0}}),ye.DeepDiff=ye,k&&(k.DeepDiff=ye),ye})});var fl=Ta(Sa(),1),El=Ta(Pa(),1);var pf=\"as\",mf=\"=\",bf=\"break\",Of=\"else\",Tf=\"enum\",Af=\"export\",df=\"if\",If=\"import\",Nf=\"->\",Sf=\"is\",hf=\"loop\",Pf=\"mut\",Lf=\"native\",Rf=\"object\",kf=\"fn\",Cf=\"return\",vf=\"self\",yf=\"template\",Uf=Object.freeze({ALIAS:pf,ASSIGN:mf,BREAK:bf,ELSE:Of,ENUMERATION:Tf,EXPORT:Af,IF:df,IMPORT:If,INTO:Nf,IS:Sf,LOOP:hf,MUTABLE:Pf,NATIVE:Lf,OBJECT:Rf,PROCEDURE:kf,RETURN:Cf,SELF:vf,TEMPLATE:yf}),La=Uf;var Bf=\"assign\",Df=\"arity_match\",Mf=\"arity_status\",Ff=\"array_assignment\",jf=\"branch-match\",Yf=\"branch-default\",wf=\"condition\",gf=\"loop\",Vf=\"data\",Gf=\"generics\",$f=\"enumeration\",Kf=\"expression\",Hf=\"instance\",zf=\"Link\",Xf=\"local\",Wf=\"object\",Jf=\"procedure\",Zf=\"return\",qf=\"compare\",Qf=\"select\",xf=\"member\",eE=\"store\",tE=\"break\",sE=\"literal\",nE=\"array_access\",oE=\"valueLink\",aE=\"linkValue\",rE=\"self\",cE=\"procedure-call\",uE=\"Maybe\",iE=\"native\",lE=\"move\",fE=\"String\",EE=\"Array\",_E=\"import\",pE=\"library\",mE=\"constructor\",bE=\"destructor\",OE=\"free\",TE=\"block-end\",AE=\"default-block\",dE=\"continue\",IE=\"branch\",NE=\"statement\",SE=\"draw\",hE=\"now\",PE=\"size\",LE=\"concatenation\",RE=\"foreach\",kE=\"while\",CE=\"when\",vE=\"while-condition\",yE=\"foreach-condition\",UE=\"foreach-end\",BE=\"for\",DE=\"up_to\",ME=\"down_to\",FE=\"almost_up_to\",jE=\"almost_down_to\",YE=\"I32\",wE=\"U32\",gE=\"FP32\",VE=\"I16\",GE=\"U16\",$E=\"U8\",KE=\"I8\",HE=\"FP64\",zE=\"U64\",XE=\"I64\",WE=\"Char\",JE=\"block-start\",ZE=\"function-call\",qE=\"Bool\",QE=Object.freeze({TYPES_ASSIGN:Bf,TYPES_ARRAY:EE,TYPES_ARITY_MATCH:Df,TYPES_ARITY_STATUS:Mf,TYPES_ARRAY_ASSIGNMENT:Ff,TYPES_BRANCH_MATCH:jf,TYPES_BRANCH_DEFAULT:Yf,TYPES_CONDITION:wf,TYPES_LOOP:gf,TYPES_FOREACH_END:UE,TYPES_WHILE_CONDITION:vE,TYPES_FOREACH_CONDITION:yE,TYPES_DATA:Vf,TYPES_COMPARE:qf,TYPES_GENERICS:Gf,TYPES_ENUMERATION:$f,TYPES_EXPRESSION:Kf,TYPES_INSTANCE:Hf,TYPES_LINK:zf,TYPES_IMPORT:_E,TYPES_LOCAL:Xf,TYPES_OBJECT:Wf,TYPES_PROCEDURE:Jf,TYPES_RETURN:Zf,TYPES_SELECT:Qf,TYPES_MEMBER:xf,TYPES_STORE:eE,TYPES_BREAK:tE,TYPES_LITERAL:sE,TYPES_ARRAY_ACCESS:nE,TYPES_LINK_TO:oE,TYPES_VALUE_AT:aE,TYPES_SELF:rE,TYPES_LIBRARY:pE,TYPES_DROP:cE,TYPES_MAYBE:uE,TYPES_NATIVE:iE,TYPES_MOVE:lE,TYPES_STRING:fE,TYPES_CONSTRUCTOR:mE,TYPES_FREE:OE,TYPES_DEFAULT_BLOCK:AE,TYPES_BLOCK_END:TE,TYPES_CONTINUE:dE,TYPES_BRANCH:IE,TYPES_STATEMENT:NE,TYPES_DESTRUCTOR:bE,TYPES_DRAW:SE,TYPES_NOW:hE,TYPES_SIZE:PE,TYPES_CONCAT:LE,TYPES_FOREACH:RE,TYPES_WHILE:kE,TYPES_WHEN:CE,TYPES_FOR:BE,TYPES_UP_TO:DE,TYPES_DOWN_TO:ME,TYPES_ALMOST_UP_TO:FE,TYPES_ALMOST_DOWN_TO:jE,TYPES_I32:YE,TYPES_FP32:gE,TYPES_FP64:HE,TYPES_U32:wE,TYPES_I64:XE,TYPES_U64:zE,TYPES_I16:VE,TYPES_U16:GE,TYPES_I8:KE,TYPES_U8:$E,TYPES_CHAR:WE,TYPES_BOOL:qE,TYPES_BLOCK_BEGIN:JE,TYPES_FUNCTION_CALL:ZE}),Ln=QE;var xE=Object.freeze({COLON:58,COMMA:44,DIGIT_ZERO:48,DIGIT_NINE:57,DOT:46,HASHTAG:35,HORIZONTAL_TAB:9,HYPHEN_MINUS:45,LEFT_CURLY_BRACKET:123,LEFT_PARENTHESIS:40,LEFT_SQUARE_BRACKET:91,LINE_BREAK:10,NULL:0,PLUS_SIGN:43,RIGHT_CURLY_BRACKET:125,RIGHT_PARENTHESIS:41,RIGHT_SQUARE_BRACKET:93,SEMICOLON:59,SPACE:32,E_SIGN:101}),Ra=xE;var e_=\"assignment\",t_=\"Flogram\",s_=Object.freeze({K_ASSIGNMENT:e_,K_FLOGRAM:t_}),ka=s_;var n_=Object.freeze([[43],[45],[42],[47],[37],[110,111,116],[60],[62],[94],[111,114],[33],[61,61],[60,61],[62,61],[33,61],[120,111,114],[97,110,100]]),o_=n_,Ca=o_;var a_=Object.freeze({INT_ARRAY_START:9999991,FLOAT_ARRAY_START:9999981,STRING_START:8888891,CHAR_START:8888881,NAT_ON_HORIZON:7777791,BIG_NAT_ON_HORIZON:7777591,FLOAT_ON_HORIZON:7777771,BIG_FLOAT_ON_HORIZON:7777731,END_OF_LINE:66666661}),va=a_;var r_=Object.freeze({ENUM_MEMORY_SIZE:12,ENUM_STACK_SIZE:3,ARRAY_MEMORY_SIZE:12,ARRAY_STACK_SIZE:3,ARRAY_DEFAULT_CAPACITY:4,STRING_MEMORY_SIZE:8,STRING_STACK_SIZE:2,OBJECT_MEMORY_SIZE:8,OBJECT_STACK_SIZE:2,NATIVE_MEMORY_SIZE:4,NATIVE_STACK_SIZE:1,NATIVE_SIZE:4,STEP:4,DOUBLE_STEP:8,TRIPPLE_STEP:12}),ya=r_;var c_=Object.freeze([]),u_=Object.freeze({}),it=\"\",i_=\"\t\",l_=`\n`,f_=\"UTF-8\",Ua=Ln,E_=Object.freeze({EMPTY_ARRAY:c_,EMPTY_OBJECT:u_,EMPTY_STRING:it,HORIZONTAL_TAB:i_,LINE_BREAK:l_,UNICODE_TEXT:f_,Codes:Ra,Keys:La,Types:Ln,Keywords:ka,Operators:Ca,DrawStates:va,Sizes:ya}),qt=E_;function I(k,S=[],D=\"\"){let W=S.map((ae,Ee)=>({name:`operand${Ee+1}`,data:{type:\"data\",name:ae,path:\"Flogram\"}})),X={type:\"native\",name:k,path:\"Flogram\",description:{inputs:W,outputs:D&&S.length<=0?null:[{name:\"result\",data:{type:\"data\",name:D||(S.length>0?S[0]:\"\"),path:\"Flogram\"}}]}};return Object.freeze(X)}var __=Object.freeze({\"+\":[I(\"+\",[\"FP64\",\"FP64\"]),I(\"+\",[\"U64\",\"U64\"]),I(\"+\",[\"I64\",\"I64\"]),I(\"+\",[\"FP32\",\"FP32\"]),I(\"+\",[\"U32\",\"U32\"]),I(\"+\",[\"I32\",\"I32\"]),I(\"+\",[\"U16\",\"U16\"]),I(\"+\",[\"I16\",\"I16\"]),I(\"+\",[\"U8\",\"U8\"]),I(\"+\",[\"I8\",\"I8\"]),I(\"+\",[\"any\",\"any\"])],\"-\":[I(\"-\",[\"FP64\",\"FP64\"]),I(\"-\",[\"U64\",\"U64\"]),I(\"-\",[\"I64\",\"I64\"]),I(\"-\",[\"FP32\",\"FP32\"]),I(\"-\",[\"U32\",\"U32\"]),I(\"-\",[\"I32\",\"I32\"]),I(\"-\",[\"U16\",\"U16\"]),I(\"-\",[\"I16\",\"I16\"]),I(\"-\",[\"U8\",\"U8\"]),I(\"-\",[\"I8\",\"I8\"]),I(\"-\",[\"any\",\"any\"]),I(\"-\",[\"FP64\"]),I(\"-\",[\"I64\"]),I(\"-\",[\"FP32\"]),I(\"-\",[\"I32\"]),I(\"-\",[\"I16\"]),I(\"-\",[\"I8\"]),I(\"-\",[\"any\"])],\"*\":[I(\"*\",[\"FP64\",\"FP64\"]),I(\"*\",[\"U64\",\"U64\"]),I(\"*\",[\"I64\",\"I64\"]),I(\"*\",[\"FP32\",\"FP32\"]),I(\"*\",[\"U32\",\"U32\"]),I(\"*\",[\"I32\",\"I32\"]),I(\"*\",[\"U16\",\"U16\"]),I(\"*\",[\"I16\",\"I16\"]),I(\"*\",[\"U8\",\"U8\"]),I(\"*\",[\"I8\",\"I8\"]),I(\"*\",[\"any\",\"any\"])],\"/\":[I(\"/\",[\"FP64\",\"FP64\"]),I(\"/\",[\"U64\",\"U64\"]),I(\"/\",[\"I64\",\"I64\"]),I(\"/\",[\"FP32\",\"FP32\"]),I(\"/\",[\"U32\",\"U32\"]),I(\"/\",[\"I32\",\"I32\"]),I(\"/\",[\"U16\",\"U16\"]),I(\"/\",[\"I16\",\"I16\"]),I(\"/\",[\"U8\",\"U8\"]),I(\"/\",[\"I8\",\"I8\"]),I(\"/\",[\"any\",\"any\"])],\"%\":[I(\"%\",[\"I64\",\"I64\"]),I(\"%\",[\"U64\",\"U64\"]),I(\"%\",[\"I32\",\"I32\"]),I(\"%\",[\"U32\",\"U32\"]),I(\"%\",[\"I16\",\"I16\"]),I(\"%\",[\"U16\",\"U16\"]),I(\"%\",[\"I8\",\"I8\"]),I(\"%\",[\"U8\",\"U8\"]),I(\"%\",[\"any\",\"any\"])],\"!=\":[I(\"!=\",[\"FP64\",\"FP64\"],\"Bool\"),I(\"!=\",[\"U64\",\"U64\"],\"Bool\"),I(\"!=\",[\"I64\",\"I64\"],\"Bool\"),I(\"!=\",[\"FP32\",\"FP32\"],\"Bool\"),I(\"!=\",[\"U32\",\"U32\"],\"Bool\"),I(\"!=\",[\"I32\",\"I32\"],\"Bool\"),I(\"!=\",[\"U16\",\"U16\"],\"Bool\"),I(\"!=\",[\"I16\",\"I16\"],\"Bool\"),I(\"!=\",[\"U8\",\"U8\"],\"Bool\"),I(\"!=\",[\"I8\",\"I8\"],\"Bool\"),I(\"==\",[\"Char\",\"Char\"],\"Bool\"),I(\"!=\",[\"Bool\",\"Bool\"],\"Bool\"),I(\"!=\",[\"any\",\"any\"],\"any\")],\"==\":[I(\"==\",[\"FP64\",\"FP64\"],\"Bool\"),I(\"==\",[\"U64\",\"U64\"],\"Bool\"),I(\"==\",[\"I64\",\"I64\"],\"Bool\"),I(\"==\",[\"FP32\",\"FP32\"],\"Bool\"),I(\"==\",[\"U32\",\"U32\"],\"Bool\"),I(\"==\",[\"I32\",\"I32\"],\"Bool\"),I(\"==\",[\"U16\",\"U16\"],\"Bool\"),I(\"==\",[\"I16\",\"I16\"],\"Bool\"),I(\"==\",[\"U8\",\"U8\"],\"Bool\"),I(\"==\",[\"I8\",\"I8\"],\"Bool\"),I(\"==\",[\"Char\",\"Char\"],\"Bool\"),I(\"==\",[\"Bool\",\"Bool\"],\"Bool\"),I(\"==\",[\"any\",\"any\"],\"any\")],\">\":[I(\">\",[\"FP64\",\"FP64\"],\"Bool\"),I(\">\",[\"U64\",\"U64\"],\"Bool\"),I(\">\",[\"I64\",\"I64\"],\"Bool\"),I(\">\",[\"FP32\",\"FP32\"],\"Bool\"),I(\">\",[\"U32\",\"U32\"],\"Bool\"),I(\">\",[\"I32\",\"I32\"],\"Bool\"),I(\">\",[\"U16\",\"U16\"],\"Bool\"),I(\">\",[\"I16\",\"I16\"],\"Bool\"),I(\">\",[\"U8\",\"U8\"],\"Bool\"),I(\">\",[\"I8\",\"I8\"],\"Bool\"),I(\">\",[\"Char\",\"Char\"],\"Bool\"),I(\">\",[\"any\",\"any\"],\"any\")],\"<\":[I(\"<\",[\"FP64\",\"FP64\"],\"Bool\"),I(\"<\",[\"U64\",\"U64\"],\"Bool\"),I(\"<\",[\"I64\",\"I64\"],\"Bool\"),I(\"<\",[\"FP32\",\"FP32\"],\"Bool\"),I(\"<\",[\"U32\",\"U32\"],\"Bool\"),I(\"<\",[\"I32\",\"I32\"],\"Bool\"),I(\"<\",[\"U16\",\"U16\"],\"Bool\"),I(\"<\",[\"I16\",\"I16\"],\"Bool\"),I(\"<\",[\"U8\",\"U8\"],\"Bool\"),I(\"<\",[\"I8\",\"I8\"],\"Bool\"),I(\"<\",[\"Char\",\"Char\"],\"Bool\"),I(\"<\",[\"any\",\"any\"],\"any\")],\">=\":[I(\">=\",[\"FP64\",\"FP64\"],\"Bool\"),I(\">=\",[\"U64\",\"U64\"],\"Bool\"),I(\">=\",[\"I64\",\"I64\"],\"Bool\"),I(\">=\",[\"FP32\",\"FP32\"],\"Bool\"),I(\">=\",[\"U32\",\"U32\"],\"Bool\"),I(\">=\",[\"I32\",\"I32\"],\"Bool\"),I(\">=\",[\"U16\",\"U16\"],\"Bool\"),I(\">=\",[\"I16\",\"I16\"],\"Bool\"),I(\">=\",[\"U8\",\"U8\"],\"Bool\"),I(\">=\",[\"I8\",\"I8\"],\"Bool\"),I(\">=\",[\"Char\",\"Char\"],\"Bool\"),I(\">=\",[\"any\",\"any\"],\"any\")],\"<=\":[I(\"<=\",[\"FP64\",\"FP64\"],\"Bool\"),I(\"<=\",[\"U64\",\"U64\"],\"Bool\"),I(\"<=\",[\"I64\",\"I64\"],\"Bool\"),I(\"<=\",[\"FP32\",\"FP32\"],\"Bool\"),I(\"<=\",[\"U32\",\"U32\"],\"Bool\"),I(\"<=\",[\"I32\",\"I32\"],\"Bool\"),I(\"<=\",[\"U16\",\"U16\"],\"Bool\"),I(\"<=\",[\"I16\",\"I16\"],\"Bool\"),I(\"<=\",[\"U8\",\"U8\"],\"Bool\"),I(\"<=\",[\"I8\",\"I8\"],\"Bool\"),I(\"<=\",[\"Char\",\"Char\"],\"Bool\"),I(\"<=\",[\"any\",\"any\"],\"any\")],and:[I(\"and\",[\"Bool\",\"Bool\"],\"Bool\"),I(\"and\",[\"any\",\"any\"],\"any\")],xor:[I(\"xor\",[\"Bool\",\"Bool\"],\"Bool\"),I(\"xor\",[\"any\",\"any\"],\"any\")],or:[I(\"or\",[\"Bool\",\"Bool\"],\"Bool\"),I(\"or\",[\"any\",\"any\"],\"any\")],not:[I(\"not\",[\"Bool\"],\"Bool\"),I(\"not\",[\"any\"],\"any\")],I32:[I(\"I32\",[\"FP64\"],\"I32\"),I(\"I32\",[\"U64\"],\"I32\"),I(\"I32\",[\"I64\"],\"I32\"),I(\"I32\",[\"FP32\"],\"I32\"),I(\"I32\",[\"U32\"],\"I32\"),I(\"I32\",[\"U16\"],\"I32\"),I(\"I32\",[\"I16\"],\"I32\"),I(\"I32\",[\"U8\"],\"I32\"),I(\"I32\",[\"I8\"],\"I32\"),I(\"I32\",[\"Char\"],\"I32\"),I(\"I32\",[\"any\"],\"any\")],U32:[I(\"U32\",[\"FP64\"],\"U32\"),I(\"U32\",[\"U64\"],\"U32\"),I(\"U32\",[\"I64\"],\"U32\"),I(\"U32\",[\"FP32\"],\"U32\"),I(\"U32\",[\"I32\"],\"U32\"),I(\"U32\",[\"U16\"],\"U32\"),I(\"U32\",[\"I16\"],\"U32\"),I(\"U32\",[\"U8\"],\"U32\"),I(\"U32\",[\"I8\"],\"U32\"),I(\"U32\",[\"Char\"],\"U32\"),I(\"U32\",[\"any\"],\"any\")],I64:[I(\"I64\",[\"FP64\"],\"I64\"),I(\"I64\",[\"U64\"],\"I64\"),I(\"I64\",[\"FP32\"],\"I64\"),I(\"I64\",[\"U32\"],\"I64\"),I(\"I64\",[\"I32\"],\"I64\"),I(\"I64\",[\"U16\"],\"I64\"),I(\"I64\",[\"I16\"],\"I64\"),I(\"I64\",[\"U8\"],\"I64\"),I(\"I64\",[\"I8\"],\"I64\"),I(\"I64\",[\"Char\"],\"I64\"),I(\"I64\",[\"any\"],\"any\")],U64:[I(\"U64\",[\"FP64\"],\"U64\"),I(\"U64\",[\"I64\"],\"U64\"),I(\"U64\",[\"FP32\"],\"U64\"),I(\"U64\",[\"U32\"],\"U64\"),I(\"U64\",[\"I32\"],\"U64\"),I(\"U64\",[\"U16\"],\"U64\"),I(\"U64\",[\"I16\"],\"U64\"),I(\"U64\",[\"U8\"],\"U64\"),I(\"U64\",[\"I8\"],\"U64\"),I(\"U64\",[\"Char\"],\"U64\"),I(\"U64\",[\"any\"],\"any\")],FP32:[I(\"FP32\",[\"FP64\"],\"FP32\"),I(\"FP32\",[\"U64\"],\"FP32\"),I(\"FP32\",[\"I64\"],\"FP32\"),I(\"FP32\",[\"U32\"],\"FP32\"),I(\"FP32\",[\"I32\"],\"FP32\"),I(\"FP32\",[\"U16\"],\"FP32\"),I(\"FP32\",[\"I16\"],\"FP32\"),I(\"FP32\",[\"U8\"],\"FP32\"),I(\"FP32\",[\"I8\"],\"FP32\"),I(\"FP32\",[\"any\"],\"any\")],FP64:[I(\"FP64\",[\"U64\"],\"FP64\"),I(\"FP64\",[\"I64\"],\"FP64\"),I(\"FP64\",[\"FP32\"],\"FP64\"),I(\"FP64\",[\"U32\"],\"FP64\"),I(\"FP64\",[\"I32\"],\"FP64\"),I(\"FP64\",[\"U16\"],\"FP64\"),I(\"FP64\",[\"I16\"],\"FP64\"),I(\"FP64\",[\"U8\"],\"FP64\"),I(\"FP64\",[\"I8\"],\"FP64\"),I(\"FP64\",[\"any\"],\"any\"),I(\"FP64\",[\"any\"],\"any\")]}),Gt=__;var Ba=Object.freeze([\"+\",\"-\",\"*\",\"/\",\"%\",\">\",\">=\",\"<\",\"<=\",\"!=\",\"&\",\"|\",\"^\",\"not\",\"I32\",\"U32\",\"I64\",\"U64\",\"FP64\",\"FP32\"]);var p_=Object.freeze([\"FP64\",\"U64\",\"I64\",\"FP32\",\"U32\",\"I32\",\"U16\",\"I16\",\"U8\",\"I8\",\"Bool\",\"Char\",\"Array\",\"String\",\"Link\",\"Maybe\"]),Qt=[\"U8\",\"U16\",\"U32\"],Es=[...Qt,\"I8\",\"I16\",\"I32\"],m_=[\"I64\",\"U64\"],Rn=[...Es,...m_],b_=[\"FP32\",\"FP64\"],_s=[...Rn,...b_],ht=p_;var{EMPTY_STRING:O_,UNICODE_TEXT:yn}=qt;var T_=48,A_=57,d_=46,Da=45,Ma=43,I_=65,N_=90,S_=\"e\".charCodeAt(0),h_=\"E\".charCodeAt(0),P_=-1,L_=1,Fa=new TextDecoder(yn),R_=new TextEncoder,k_=qt.Operators,C_=(k,S,D=0,W=k.length|0,X=0,ae=S.length|0)=>{for(X=X|0,D=D|0,ae=ae|0,W=W|0;;){let Ee=D>=W,be=X>=ae;if(Ee||be)break;let he=k[D],Oe=S[X];if(D=D+1|0,X=X+1|0,he<Oe)return P_;if(he>Oe)return L_}return 0},Un=(k,S,D=0,W=k.length|0,X=0,ae=S.length|0)=>{for(X=X|0,D=D|0,ae=ae|0,W=W|0;;){let Ee=X>=ae,be=D>=W;if(Ee||be)break;S[X]=k[D],X=X+1|0,D=D+1|0}},Bs=(k,S,D=0,W=k.length|0,X=0,ae=S.length|0)=>{D=D|0,X=X|0,W=W|0,ae=ae|0;let Ee=W-D|0,be=ae-X|0;if(Ee!==be)return!1;for(;;){let ve=D>=W,he=X>=ae;if(ve||he)break;let Le=k[D],Re=S[X];if(D=D+1|0,X=X+1|0,Le!==Re)return!1}return!0},v_=k=>{k=k>>>0;let S=0,D=0;for(;D=(D<<1|1)>>>0,!(D>k);)S=S+1|0;return S},wa=Object.freeze([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]),vn=(k,S,D,W)=>{for(k=k>>>0,W=W??S.length|0,D=D|0,W=W|0;k>0&&W>D;)W=W-1|0,S[W]=wa[k&15],k=k>>>4},Ds=(k,S,D,W)=>{let X=D|0,ae=D+W|0;if(W===0)return!1;let Ee=!1,be=!1,ve=!1,he=Oe=>Oe===Ma||Oe===Da;for(;X<ae;){let Oe=S[X];X=X+1|0;let Le=T_<=Oe&&Oe<=A_,Re=Ma===Oe||Oe===Da,Ze=d_===Oe,Rt=Y_===Oe,ye=Oe===S_||Oe===h_;if(Le){ve=!0;continue}else if(Re){if((X===D+1||Ee&&!be)&&!ve)continue}else if((Rt||Ze)&&!Ee&&!be||ye&&!Ee)ye&&(Ee=!0,X<ae&&he(S[X])&&(X=X+1|0,be=!0));else return!1}return ve&&(!Ee||Ee&&be)},y_={I8:[...Es],U8:[...Qt],I16:[...Es],U16:[...Qt],I32:[...Es],U32:[...Qt],I64:[...Rn],U64:[...Qt],FP32:_s,FP64:_s},Ms=(k,S)=>!_s.includes(k)||!_s.includes(S)?!1:y_[k].includes(S),Bn=k=>{let S=k>=I_,D=k<=N_;return S&&D},Fs=128,js=127,ga=-1,xt=64,Dn=k=>{k=k|0;let S=[];for(;;){let D=k&js;k=k>>7;let W=k===0,X=(D&xt)===0,ae=W&&X,Ee=k===-1,be=(D&xt)!==0;if(ae||Ee&&be){S.push(D);break}D=D|Fs,S.push(D)}return S},U_=k=>{let S=[],D=!0;for(;D;){let W=k&js;k>>=7,k===0&&!(W&xt)||k===-1&&W&xt?D=!1:W|=Fs,S.push(W)}return S},Va=(k,S)=>{S=S|0;let D=0,W=0;for(;;){let X=k[S]|0;S=S+1|0;let ae=(X&js)<<W;if(W=W+7|0,D=D|ae,(X&Fs)===0){let be=(X&xt)!==0,ve=W<32;if(be&&ve){let Oe=ga<<W;D=D|Oe}break}}return D},B_=(k,S)=>{S=S|0;let D=0,W=0;for(;;){let X=k[S]|0;S=S+1|0;let ae=(X&js)<<W;if(W=W+7|0,D=D|ae,!(X&Fs)){if(X&xt){let Ee=ga<<W;D=D|Ee}break}}return D},f=k=>{try{return Fa.decode(k)}catch{return Fa.decode(new Uint8Array([k]))}},fe=k=>R_.encode(k),D_=(k=O_)=>{let S=k.length|0,D=Dn(S),W=Buffer.from(k,yn);return Object.freeze([...D,...W])},M_=(k,S)=>{S=S|0;let D=Va(k,S),W=Dn(D).length;return S=S+W|0,k.subarray(S,S+D|0).toString(yn)},F_=58,j_=46,Y_=95,ps=32,kn=48,w_=67,gt=new Uint8Array(w_),ja=gt.subarray(0,8),Us=gt.subarray(10,49),Ya=gt.subarray(51,68),Cn=16,g_=2;gt[8]=F_;gt[9]=ps;gt[49]=ps;gt[50]=ps;var V_=(k,S)=>{S=S??console.log;let D=32,W=126,X=k.length|0,ae=0;for(;X>0;){ja.fill(kn),vn(ae,ja),Us.fill(ps),Ya.fill(ps);let Ee=X>=Cn?Cn:X;X=X-Cn|0;let be=0,ve=0;for(let Oe=1;Oe<=Ee;Oe=Oe+1|0){let Le=k[ae]&255;Us[be+0|0]=kn,Us[be+1|0]=kn,vn(Le,Us,be,be+2|0);let Re=j_;D<=Le&&Le<=W&&(Re=Le),Ya[ve]=Re,ae=ae+1|0,be=be+2|0,ve=ve+1|0,Oe%g_===0&&(be=be+1|0)}let he=String.fromCodePoint(...gt);S(he)}},G_=function*(k,S){let D=k.length|0,W=S.length|0,X=0;for(;X<D&&X<W;){let ae=k[X],Ee=S[X];yield[ae,Ee],X=X+1|0}},$_=function*(k,S,D){let W=k.length|0,X=S.length|0,ae=D.length|0,Ee=0;for(;Ee<W&&Ee<X&&Ee<ae;){let be=k[Ee],ve=S[Ee],he=D[Ee];yield[be,ve,he],Ee=Ee+1|0}},Mn=k=>{for(let S of k_)if(Bs(k,S))return!0;return!1},dm=Object.freeze({ARRAY_COMPARE:C_,ARRAY_COPY:Un,ARRAY_EQUAL:Bs,BIT_DEPTH:v_,HEX_DIGITS:wa,HEX_ENCODE:vn,IS_NUMBER:Ds,IS_UPPERCASE:Bn,IS_VALID_AUTO_CAST:Ms,LEB128_DECODE:Va,LEB128_DECODE_SIGNED:B_,LEB128_ENCODE:Dn,LEB128_ENCODE_SIGNED:U_,UTF8_DECODE:f,UTF8_ENCODE:fe,WASM_STRING_ENCODE:D_,WASM_STRING_DECODE:M_,XXD_DUMP_HEX:V_,ZIP2:G_,ZIP3:$_,IS_OPERATOR:Mn});var{TYPES_ASSIGN:yt,TYPES_ARITY_MATCH:Fn,TYPES_ARITY_STATUS:Ga,TYPES_ARRAY:Fe,TYPES_ARRAY_ASSIGNMENT:$a,TYPES_BRANCH_MATCH:ms,TYPES_BRANCH_DEFAULT:bs,TYPES_CONDITION:jn,TYPES_LOOP:Ka,TYPES_DATA:Ce,TYPES_GENERICS:Ut,TYPES_ENUMERATION:Bt,TYPES_EXPRESSION:$t,TYPES_IMPORT:K_,TYPES_LIBRARY:H_,TYPES_LINK:Yn,TYPES_LOCAL:xe,TYPES_OBJECT:Me,TYPES_PROCEDURE:lt,TYPES_RETURN:pt,TYPES_SELECT:dt,TYPES_MEMBER:Dt,TYPES_NATIVE:z_,TYPES_STORE:wn,TYPES_BREAK:X_,TYPES_LITERAL:Ie,TYPES_ARRAY_ACCESS:Ys,TYPES_LINK_TO:Mt,TYPES_VALUE_AT:It,TYPES_SELF:ft,TYPES_DROP:Ha,TYPES_MAYBE:ws,TYPES_MOVE:gn,TYPES_STRING:tt,TYPES_CONSTRUCTOR:gs,TYPES_DESTRUCTOR:za,TYPES_SIZE:Vn,TYPES_FREE:W_,TYPES_DRAW:J_,TYPES_NOW:Vs,TYPES_CONCAT:es,TYPES_FOREACH:Xa,TYPES_WHILE:Wa,TYPES_WHEN:Ja,TYPES_FOR:Za,TYPES_UP_TO:na,TYPES_DOWN_TO:oa,TYPES_ALMOST_UP_TO:aa,TYPES_ALMOST_DOWN_TO:ra,TYPES_I32:Je,TYPES_U32:Z_,TYPES_FP32:_l,TYPES_FP64:ca,TYPES_I64:ks,TYPES_U64:q_,TYPES_I16:Q_,TYPES_U16:x_,TYPES_I8:ep,TYPES_U8:tp,TYPES_CHAR:Os,TYPES_BOOL:Kt,TYPES_UNREACHABLE:ts}=Ua,{ARRAY_DEFAULT_CAPACITY:sp}=qt.Sizes,Z=Bs,Gs=fe(\"=\"),np=fe(\"enum\"),op=fe(\"loop\"),ap=fe(\"break\"),rp=fe(\"if\"),$s=fe(\"else\"),Ts=fe(\"is\"),Ks=fe(\"->\"),ss=fe(`\n`),Gn=fe(\"object\"),Ht=fe(\"pass\"),qa=fe(\"fn\"),cp=fe(\"return\"),Qa=fe(\"size\"),xa=fe(\"at\"),er=fe(Fe),zt=fe(\"Link!!\"),ns=fe(\"Link\"),Hs=fe(\"LinkSmart\"),Xt=fe(\"mut\"),tr=fe(\"self\"),sr=fe(\"nocopy\"),up=fe(\"move\"),nr=fe(\"size\"),ip=fe(\"import\"),lp=fe(\"export\"),$n=fe(\"Maybe\"),Kn=fe(\"NONE\"),or=fe(\"SOME\"),ar=fe(\"free\"),fp=fe(\"free!!\"),Ep=fe(\"foreach\"),_p=fe(\"for\"),pp=fe(\"while\"),rr=fe(\"in\"),mp=fe(\"at\"),cr=fe(\"by\"),ur=fe(\"capacity\"),bp=fe(\"when\"),ce=58,et=61,Be=44,st=46,$e=123,pe=40,ee=10,Op=35,ze=125,le=41,He=91,Ft=93,On=39,ls=34,ua=8216,ia=8217,pl=[226,128,156],ml=8221,Tp=64,Hn=47,Ap=92,dp=[On,ls,ua,ia,pl,ml],zn=[On,ua],Xn=[On,ia],Ip=[On,ua,ia],Wn=[ls,pl],Jn=[ls,ml],Zn=1,ir=2,qn=3,is=\"done\",we=\"fail\",Np={EVENT_DONE:is,EVENT_FAIL:we},bl=1,Ol=2,Tl=3,Al=4,dl=5,Il=6,Nl=7,Sl=8,hl=9,Pl=10,Ll=11,Rl=12,Sp=13,hp=14,kl=15,Cl=16,Pp=17,vl=18,yl=19,Ul=99,Xe={FAIL_UNRESOLVED_NAME:(k,S)=>`NameError: '${k}' is undefined on line ${S}. Verify the spelling and scope of your variables to ensure '${k}' is declared in the accessible scope.`,FAIL_UNEXPECTED_TOKEN:(k,S,D,W)=>`Unexpected token '${S}' at position ${D} on line ${W}. Looking for ${k}, found ${S}. Please check the syntax.`,FAIL_INDENTATION_MISMATCH:k=>`IndentationError: Unexpected indentation on line ${k}. Ensure this line's indentation matches the surrounding code block's expected indentation level.`,FAIL_INDENTATION_NO_INCREASE:k=>`IndentationError: Line ${k} expects increased indentation. This typically occurs after block-defining statements (e.g., functions, loops, conditionals) but no indentation was detected. Ensure the subsequent line is properly indented.`,FAIL_DUPLICATE_DATA:(k,S)=>`NameError: Variable '${k}' already defined on line ${S}. Choose a unique name for each variable to avoid conflicts.`,FAIL_DUPLICATE_OBJECT_MEMBER:(k,S)=>`Error: Duplicate member '${k}' found in '${S}'. Ensure each member name within an object is unique.`,FAIL_INVALID_IDENTIFIER:k=>`SyntaxError: '${k}' is an invalid identifier. Identifiers should start with a letter or underscore and can contain letters, numbers, and underscores. Examples: myVariable, _count, item1.`,FAIL_RETURN_LENGTH_MISMATCH:(k,S,D)=>`ReturnValueError: Function '${D}' expected ${k} return value(s), got ${S} instead. Verify that the return statement matches the expected number of values.`,FAIL_UNRESOLVED_OBJECT_MEMBER:(k,S)=>`ReferenceError: '${k}' is not a member of '${S}'. Verify that '${k}' exists and is correctly spelled in '${S}'. Check for typos or ensure the member is defined within the object.`,FAIL_UNKNOWN_PROCEDURE_NAME:k=>`UndefinedProcedureError: '${k}' is undefined. Ensure the procedure is defined in the scope before it is called.`,FAIL_IMMUTABLE_ASSIGNMENT:k=>`ImmutableVariableError: Cannot assign to '${k}', which is immutable. Verify that mutable variables are used for reassignments.`,FAIL_RESERVED_KEYWORD_USAGE:k=>`SyntaxError: '${k}' is a reserved keyword and cannot be used as an identifier. Please select an alternative name.`,FAIL_INPUT_TYPE_MISMATCH:(k,S)=>`TypeError: Line ${k} - Type mismatch in parameters. Nature functions require all parameters to have the same type. Provided types: ${S}.`,FAIL_UNSUPPORTED_TYPE:k=>`TypeError: Unsupported type '${k}'. Ensure '${k}' is defined in this context or use a type native to Flogram. Check documentation for supported types.`,FAIL_UNALLOWED_COPY:k=>`CopyError: '${k}' is uncopyable. Copy operations are prohibited for objects defined as uncopyable. Please check your object's definition.`,FAIL_ASSIGNMENT_TYPE_MISMATCH:(k,S)=>`TypeError: Incompatible types. Cannot assign '${S}' to '${k}'. Ensure that the assigned value matches the expected type.`,FAIL_INVALID_VARIABLE_TYPE:(k,S,D)=>`TypeError: Variable '${k}' is of type '${D}', but expected type '${S}'. Ensure the variable is assigned a value of the correct type.`,FAIL_INVALID_EXPRESSION_TYPE_COMBINATION:(k,S)=>`TypeError: Unable to find expression matching: ${k} for ${S}`,FAIL_INVALID_INPUT_LENGTH:(k,S,D)=>`Procedure '${D}' was provided with invalid number 0f inputs. '${D}' expects ${k} input(s) but was rather provided with ${S} input(s). Please make sure you are passing the right number of inputs to the procedure.`},Lp=Object.freeze({FAIL_UNRESOLVED_NAME:bl,FAIL_UNEXPECTED_TOKEN:Ol,FAIL_INDENTATION_MISMATCH:Tl,FAIL_INDENTATION_NO_INCREASE:Al,FAIL_DUPLICATE_DATA:dl,FAIL_DUPLICATE_OBJECT_MEMBER:Il,FAIL_INVALID_IDENTIFIER:Nl,FAIL_RETURN_LENGTH_MISMATCH:Sl,FAIL_UNRESOLVED_OBJECT_MEMBER:hl,FAIL_UNKNOWN_PROCEDURE_NAME:Pl,FAIL_IMMUTABLE_ASSIGNMENT:Ll,FAIL_RESERVED_KEYWORD_USAGE:Rl,FAIL_ASSIGNMENT_TYPE_MISMATCH:Cl,FAIL_INVALID_VARIABLE_TYPE:Pp,FAIL_UNALLOWED_COPY:kl,FAIL_INVALID_EXPRESSION_TYPE_COMBINATION:vl,FAIL_INVALID_INPUT_LENGTH:yl,FAIL_CUSTOM:Ul}),Rp=new Set([\"fn\",\"object\",\"pass\",\"enum\",\"size\"]),lr=new Set([\"==\",\"!=\",\">\",\">=\",\"<\",\"<=\",\"not\",\"and\",\"or\"]),fr=[na,oa,aa,ra],zs=[Je,Z_,_l,ca,ks,q_,Q_,x_,ep,tp],rt=(k,S,D,W)=>{if(W===1){let ye=S[D],Nt=ye&191,ut=ye&223,kt=ut^93,ue=ut^91,jt=ye&254,V=ye&254^40,M=ye&253^44,q=ye&254^58;return Nt===0||(kt===0||ue===0)||V===0||M===0||q===0||ye===ee}return!1},Qn=(k,S,D,W)=>{let X=S.subarray(D,D+W|0),ae=f(X);return Rp.has(ae)||ht.includes(ae)},kp=512,la=1,Bl=2,Tn=3,fa=4,Dl=5,Ml=6,Fl=7,jl=8,Yl=9,Cp=10,vp=11,yp=12,Up=13,Bp=14,Dp=15,Mp=16,Fp=17,jp=18,nt=Object.freeze([la]),os=Object.freeze([Bl]),Pt=Object.freeze([Tn]),Er=Object.freeze([Tn,fa]),_r=Object.freeze([Dl]),Yp=Object.freeze([la,Ml]),wp=Object.freeze([Fl]),We=Object.freeze([fa,jl]),ot=Object.freeze([Yl]),pr=Object.freeze([Cp]),As=Object.freeze([vp]),gp=Object.freeze([Tn,Yl]),ds=Object.freeze([yp]),as=Object.freeze([Up]),xn=Object.freeze([Bp]),mr=Object.freeze([Dp]),br=Object.freeze([Mp]),eo=Object.freeze([Fp]),Is=Object.freeze([jp]),Vp=Object.freeze({REASON_COLON_OPENS_SCOPE:la,REASON_LINE_BREAK_BEFORE_OPEN_SCOPE:Bl,REASON_CLOSING_LINE_BREAK:Tn,REASON_SEQUENCE_SEPARATOR_COMMA:fa,REASON_INTO_BETWEEN_INPUTS_OUTPUTS:Dl,REASON_IS_OPENS_CONDITION_BRANCH_MATCH:Ml,REASON_OPEN_STATEMENT_WITH_KEYWORD:Fl,REASON_RIGHT_PARENTHESIS_CLOSES_LIST:jl}),Ne=1,Or=2,Ns=3,Tr=4,to=5,Ar=6,Ye=7,mt=8,ge=9,Ss=10,rs=11,dr=12,Ir=13,hs=1,Nr=2,Se=3,so=4,Sr=5,hr=6,Pr=7,Lr=1,Rr=2,kr=3,Cr=4,vr=5,no=6,yr=7,Ur=8,Br=9,oo=10,Dr=11,Mr=12,ao=13,ro=14,Ps=1,Fr=2,Xs=3,jr=4,co=5,Yr=6,wr=7,Ls=1,gr=2,Ws=3,Vr=4,Gr=6,$r=1,Kr=2,Hr=3,zr=4,Xr=5,Wr=6,uo=7,Jr=8,Zr=9,Js=10,qr=11,Qr=12,xr=13,ec=14,tc=15,sc=16,nc=17,oc=1,ac=2,rc=1,cc=2,Gp=3;var uc=7,io=8,ic=9,Zs=1,qs=2,Qs=3,xs=4,cs=5,en=6,tn=7,us=8,sn=9,nn=10,on=11,Lt=1,lc=2,fc=3,lo=4,Ec=5,_c=6,pc=7,fo=8,mc=9,bc=10,Oc=11,Tc=12,Ac=13,Eo=14,_o=15,dc=16,Ic=17,Nc=18,Sc=19,hc=20,Pc=21,po=22,Lc=23,mo=24,bo=25,Rc=26,kc=27,Oo=28,Cc=29,vc=30,Rs=31,an=32,yc=33,To=34,Uc=35,Bc=36,Dc=37,Mc=38,Fc=39,jc=40,Yc=41,Ao=42,wc=43,gc=44,Vc=45,Gc=46,Io=47,$c=48,Kc=49,No=50,So=51,Hc=52,zc=53,Xc=54,Wc=55,Jc=56,Zc=57,qc=58,Qc=59,xc=60,eu=61,tu=62,su=63,nu=64,ho=65,ou=66,au=67,ru=68,Po=69,cu=70,uu=71,iu=72,lu=73,fu=74,Eu=75,_u=76,pu=77,mu=78,Lo=79,bu=80,Ou=81,Tu=82,Au=83,Ro=84,du=85,Iu=86,Nu=87,Su=88,hu=89,Pu=90,Lu=91,Ru=92,ku=93,Cu=94,ko=95,vu=96,Co=97,yu=98,Uu=99,Bu=100,ct=1,Du=2,Mu=3,Fu=4,vo=5,ju=6,rn=1,Yu=2,wu=3,gu=4,yo=5,Et=6,Vu=7,Uo=8,cn=9,un=10,ln=11,Gu=12,$u=13,Bo=14,Do=15,Mo=16,Ku=17,Hu=18,zu=19,Fo=20,jo=21,Xu=22,Yo=23,Wu=24,Ju=25,Zu=26,wo=27,qu=28,Qu=29,go=30,Vo=31,Go=32,xu=33,$o=34,ei=35,ti=36,si=37,Ko=38,Ho=39,ni=40,oi=41,ai=42,ri=43,ci=44,zo=45,Xo=46,ui=47,fn=48,ii=49,li=50,fi=51,Ei=52,_i=53,pi=54,mi=55,bi=56,Oi=57,Ti=58,Ai=59,di=60,Ii=61,Ni=62,Si=63,Wo=64,hi=65,Jo=66,Pi=67,En=68,Zo=69,qo=70,Li=71,Ri=72,ki=73,Ci=74,vi=75,yi=76,Ui=77,Bi=78,Di=79,Mi=80,Fi=81,ji=82,$p=83,Yi=84,Qo=85,wi=86,gi=87,xo=88,Vi=89,Gi=90,$i=91,Ki=92,Hi=93,zi=94,Xi=95,Wi=96,Ji=97,ea=98,Zi=99,ta=100,qi=101,Qi=102,xi=103,el=1;var tl=3;var sl=11,_n=12,nl=13,ol=14,Kp=15,al=16,pn=17,rl=18,cl=19,ul=20,il=21,{K_FLOGRAM:me}=qt.Keywords,Hp=\"0\",mn=\"any\",sa=\"data\",ll=\"code\",bn=k=>[\"TRUE\",\"FALSE\"].includes(k),Vt=!1,wl=k=>{let S=[],D=[],W=[],X={name:\"draw\",type:\"procedure\",description:{inputs:[{name:\"a\",data:{type:\"data\",name:Je,path:me}}],locals:[],outputs:[]}},ae=Object.freeze({data:S,code:D,exports:W});class Ee{constructor(){this.ambiguityArray=new Uint8Array(kp),this.ambiguityQueue=[],this.ambiguityIndex=0}}let be=[],ve=()=>{be.push(new Ee)},he=()=>be.pop(),Oe=(c,o,e,l)=>{let t=be[be.length-1],s=Object.freeze({position:c,length:l});Un(o,t.ambiguityArray,e,e+l|0,t.ambiguityIndex,t.ambiguityIndex+l|0),t.ambiguityQueue.push(s),t.ambiguityIndex=t.ambiguityIndex+l|0},Le=()=>{let c=be[be.length-1];c.ambiguityIndex=0;let{ambiguityArray:o,ambiguityQueue:e}=c;for(;e.length>0;){let l=e.shift(),{length:t,position:s}=l;fs(s,o,c.ambiguityIndex,t),c.ambiguityIndex=c.ambiguityIndex+t|0}he()},Re=c=>{!D.some(e=>{if(e.name===c.name&&e.path===c.path&&e.description.inputs.length===c.description.inputs.length&&e.description.outputs.length===c.description.outputs.length){let l=c.description.inputs.every((s,n)=>{let r=e.description.inputs[n];return s.name===r.name&&s.data.name===r.data.name&&s.data.path===r.data.path}),t=c.description.outputs.every((s,n)=>{let r=e.description.outputs[n];return s.name===r.name&&s.data.name===r.data.name&&s.data.path===r.data.path});return l&&t}return!1})&&D.push(c)},Ze=(c,o,e,l)=>{let{description:t}=c,{members:s}=t,n=s.find(i=>i.name===o[e]),r=S.find(i=>i.name===n.data.name);return r.type===Me&&e<o.length-1?Ze(r,o,e+1,l):n},Rt=c=>{let o=Number(c.replace(\",\",\"\"));return isNaN(o)?\"\":c.includes(\".\")?c.replace(\".\",\"\").length<=7?_l:ca:Number.isInteger(o)?o>=-Math.pow(2,31)&&o<Math.pow(2,31)?Je:o>=-Math.pow(2,63)&&o<Math.pow(2,63)?ks:ca:\"\"},ye=c=>{switch(c.type){case dt:return c.value.name;case wn:case It:return ye(c.link);case Mt:return ye(c.value)}return c.name},Nt=(c,o)=>{let e=Gt[c];if(e){let l=e.find(t=>t.description&&Array.isArray(t.description.inputs)?t.description.inputs.length!==o.length?!1:t.description.inputs.every((s,n)=>s.data.name===o[n].data.name):!1);if(l)return l;b=T|0,O=position-d|0,Ct(c);return}else{b=T|0,O=position-d|0,dn(c);return}},ut=()=>{let c=new Date,o=c.getHours().toString().padStart(2,\"0\"),e=c.getMinutes().toString().padStart(2,\"0\"),l=c.getSeconds().toString().padStart(2,\"0\"),t=c.getMilliseconds().toString().padStart(3,\"0\");return`${o}_${e}_${l}_${t}`},kt=c=>{let o=a.procedure.description.inputs.find(e=>e.name===c)||a.procedure.description.locals.find(e=>e.name===c);if(o){let e=S.find(l=>l.type===Ut&&l.name===o.data.name);if(e)return{data:e}}return o},ue=(c,o=!1)=>{let e;switch(c.type){case dt:{let l=a.stack.get(c.value.name||c.value.link,c.value.value);if(l){let t=S.find(s=>s.name===l.name);if(t.type===Bt){let n=t.description.labels.find(i=>i.props.find(E=>E.name===c.trail[0]));if(!n){b=T|0,O=position-d|0,Ot(c.trail[0],t.name);return}let r=n.props.find(i=>i.name===c.trail[0]);r.data?.type===Me&&0<c.trail.length-1?e={data:Ze(r,c.trail,0+1,o)?.data}:e=r}else{let{description:s}=t,{members:n}=s,r=0,i=n.find(m=>m.name===c.trail[r]),E=S.find(m=>m.name===i.data.name);if(E.type===Me&&r<c.trail.length-1)e={data:Ze(E,c.trail,r+1,o)?.data};else{if(i.data.freed){b=T|0,O=position-d|0,re(`Attempted to use '${c.trail.join(\".\")}', which has been freed. Ensure links are valid before use.`);return}if(o){let m=S.indexOf(t),N=JSON.parse(JSON.stringify(t)),R=t.description.members.indexOf(i);R>=0&&(N.description.members[R].data.freed=!0,S.splice(m,1,N))}e=i}}}break}case It:{e=ue(c.link);break}case gn:case Mt:{e=ue(c.value);break}case es:{e={data:{type:Ce,name:tt,path:me}};break}case Vn:{e={data:{type:Ce,name:Je,path:me}};break}case Ys:{let l=ue(c.array).data;l&&(e={data:{...l,name:l.name===tt&&!l.contains&&l.type!==Fe?Os:l.name}});break}case Dt:{let l=z(0),t=q(l,c.trail,!1);t?t.data.type===Fe?e={data:t.data}:e={data:S.find(n=>n.name===t.data.name&&n.path===t.data.path)}:(b=T|0,O=0,Ot(c.trail[0],l.name??`${ft}(current object in definition)`));break}case $t:{let l=s=>D.find(n=>n.type===lt&&n.name===s.name)?.description.outputs[0],t=(s,n)=>{let r;for(let i=0;n&&i<=s.name.length-2;i++)n=a.stack.get(s.name[i]),n&&(r=S.find(E=>E.type===Me&&E.name===n.name));return r?.description.members?.find(i=>i.name===s.name[s.name.length-1])?.description.outputs[0]};if(c.path!==me){if(typeof c.name===Me&&c.name[0]===Dt){let s=z(0),n=q(s,c.name.slice(1));n&&n.type===lt&&n.description.outputs.length>0?e=n.description.outputs[0]:(b=T|0,O=0,Ot(c.trail[0],s.name??`${ft}(current object in definition)`));break}else if(e=l(c),typeof c.name==\"object\"){let s=a.stack.get(c.name[0]);e=t(c,s);let n=c.name.length;c.name[n-1]===gs&&(e={data:s})}}else if(c.name===Vs)e={data:{type:Ce,name:ks,path:me}};else if(lr.has(c.name))e={data:{type:Ce,name:Kt,path:me}},Ue(e.data.name);else{let s=c.inputs.map(r=>ue(r)),n=D.find(r=>r.description&&Array.isArray(r.description.inputs)?r.description.inputs.length!==s.length||r.name!==c.name||r.path!==c.path?!1:r.description.inputs.every((i,E)=>i.data.name===s[E].data.name):!1);if(n){let{description:r}=n,{outputs:i}=r;e=i[0]}else{b=T|0,O=0,ma(s.map(r=>r.data.name),c.name);return}}break}default:{e=kt(c.name);break}}if(!e)if(Ba.includes(c.name)&&c.type===$t){let l=c.inputs.map(s=>ue(s)),t=Nt(c.name,l);e={data:{name:t.description.outputs[0].data.name,path:t.description.outputs[0].data.path}}}else c.type===Ie&&(e={data:{type:Ie,name:c.name,literal:c.literal,path:c.path}});return e?.data?.name&&Ue(e.data.name),e},jt=(c,o,e,l)=>{for(let t in c.description?.members){let s=[c.description.members[t].data.name,...o.map(n=>n.description.members[t].data.name)];if(s.some(n=>!ht.includes(n))){let n=s.map(r=>S.find(i=>i.name===r));if(n.every(Boolean))return jt(c,n,e,l)}else{let n=e.find(r=>r.description&&Array.isArray(r.description.inputs)?r.description.inputs.length!==s.length?!1:r.description.inputs.every((i,E)=>i.data.name===s[E]):!1);return n?(Re(n),_t.set(l,n),!0):!1}}},Ve=c=>{let o=ue(c);return o&&c.type!==dt&&o.data.path===me&&o.data.type!==Fe&&o.data.mutable?Object.seal({type:It,link:c}):c},V=(c,o)=>{let e=JSON.parse(JSON.stringify(c)),l=c.description.generics.map(s=>s.name);function t(s){for(let n in s)if(s[n]&&typeof s[n]==\"object\")t(s[n]);else if(n===\"name\"&&l.includes(s[n])){let r=l.indexOf(s[n]);s[n]=o[r].name,s.path=o[r].path}else if(n===\"path\"&&s[n].split(\".\").includes(e.name)){let r=s[n].split(\".\"),i=r.indexOf(e.name),E=B(e.name,o);r[i]=E,s[n]=r.join(\".\")}}t(e);for(let s of D){let{description:n}=s,{inputs:r,outputs:i}=n,E=[...r,...i];if(s.type===\"native\"&&E.some(m=>l.includes(m.data.name))){let m=JSON.parse(JSON.stringify(s));t(m),Re(m)}}return e},B=(c,o)=>{let l=o.map(t=>`${t.name}${t.segment?`_${t.segment}`:\"\"}`).join(\"__\");return`${c}___${l}`},M=c=>c.type===Mt&&c.value!==ft||c.type===It&&c.link!==ft,z=c=>{if(c<g.length){let o=g[c];return o.item?.object?o.item.object:z(c+1)}return!1},q=(c,o,e=!0)=>{let l=c.description.members.find(t=>t.name===o[0]);return l?o.length===1?l.type===lt||!e?l:!1:S.find(t=>t.name===l.data.name&&t.path===l.data.path).type!==Me?!1:q(S.find(t=>t.name===l.data.name&&t.path===l.data.path),o.slice(1),e):!1},{path:Te,imports:_e,files:ne,Tokenizer:Ge}=k,bt=new Map,_t=new Map,p=new Map,A=new Map,P=(c,o=\"\")=>{let{name:e,path:l}=c,t=o||e,s=`${l}.${t}`;p.set(s,c);let n=A.get(t)||[];n.push(c),A.set(t,n)},{data:L}=_e;for(let c of L)P(c);let v=[Te],C=new fl.default,g=[],K=[],G=[],_=!1,J=!1,de=!1,Pe=!0,ke=!1,De=!1,U=Ne,u=hs,a=null,Yt=null,Wt=[],Ke=0,T=1,d=0,je=1,Cs=null,b=0,O=0,St=(c,o,e,l)=>{let t=o.subarray(e,e+l|0),s=f(t);return Qn(c,o,e,l)?(b=T|0,O=c-d|0,An(s),!0):rt(c,o,e,l)?(b=T|0,O=c-d|0,qe(s),!0):!1};C.on(is,c=>{for(let o of K)o(c)}),C.on(we,c=>{for(let o of G)o(c)});let Jt=c=>{let o=Object.freeze({type:dl,message:Xe.FAIL_DUPLICATE_DATA(c,b),failureRow:b,failureColumn:O,name:c});J=!0,de=!0,C.emit(we,o)},Ea=(c,o)=>{let e=Object.freeze({type:Il,message:Xe.FAIL_DUPLICATE_OBJECT_MEMBER(c,o),failureRow:b,failureColumn:O,property:c,object:o});J=!0,de=!0,C.emit(we,e)},gl=c=>{let o=je,e=wt(c),l=Object.freeze({type:Tl,message:Xe.FAIL_INDENTATION_MISMATCH(b),failureRow:b,failureColumn:O,expected:o,actual:e});J=!0,de=!0,C.emit(we,l)},_a=c=>{let o=Object.freeze({type:Al,message:Xe.FAIL_INDENTATION_NO_INCREASE(b),failureRow:b,failureColumn:O,indentation:je});J=!0,de=!0,C.emit(we,o)},qe=c=>{let o=Object.freeze({type:Nl,message:Xe.FAIL_INVALID_IDENTIFIER(c),failureRow:b,failureColumn:O,identifier:c});J=!0,de=!0,C.emit(we,o)},Vl=(c,o,e)=>{let l=Object.freeze({type:Sl,message:Xe.FAIL_RETURN_LENGTH_MISMATCH(c,o,e),failureRow:b,failureColumn:O});de=!0,J=!0,C.emit(we,l)},Gl=c=>{let o=Object.freeze({type:Ll,message:Xe.FAIL_IMMUTABLE_ASSIGNMENT(c),failureRow:b,failureColumn:O,variable:c});J=!0,de=!0,C.emit(we,o)},An=c=>{let o=Object.freeze({type:Rl,message:Xe.FAIL_RESERVED_KEYWORD_USAGE(c),failureRow:b,failureColumn:O,keyword:c});J=!0,de=!0,C.emit(we,o)},Y=(c,o,e)=>{let l=Object.freeze({type:Ol,message:Xe.FAIL_UNEXPECTED_TOKEN(c,o,O,b),failureRow:b,failureColumn:O,reasons:e,expected:c,found:o});J=!0,de=!0,C.emit(we,l)},vs=c=>{let o=Object.freeze({type:bl,message:Xe.FAIL_UNRESOLVED_NAME(c,b),failureRow:b,failureColumn:O,name:c});J=!0,de=!0,C.emit(we,o)},Ot=(c,o)=>{let e=Object.freeze({type:hl,message:Xe.FAIL_UNRESOLVED_OBJECT_MEMBER(c,o),failureRow:b,failureColumn:O,name:c});J=!0,de=!0,C.emit(we,e)},dn=c=>{let o=Object.freeze({type:Pl,message:Xe.FAIL_UNKNOWN_PROCEDURE_NAME(c),failureRow:b,failureColumn:O,name:c});J=!0,de=!0,C.emit(we,o)},$l=c=>{let o=Object.freeze({type:kl,message:Xe.FAIL_UNALLOWED_COPY(c),failureRow:b,failureColumn:O,name:c});J=!0,de=!0,C.emit(we,o)},pa=(c,o,e)=>{let l=Object.freeze({type:yl,message:Xe.FAIL_INVALID_INPUT_LENGTH(c,o,e),failureRow:b,failureColumn:O,name:e,expectedLength:o,actualLength:c});J=!0,de=!0,C.emit(we,l)},ma=(c,o)=>{let e=Object.freeze({type:vl,message:Xe.FAIL_INVALID_EXPRESSION_TYPE_COMBINATION(c,o),failureRow:b,failureColumn:O,name:o,types:c});J=!0,de=!0,C.emit(we,e)},ba=(c,o)=>{let e=Object.freeze({type:Cl,message:Xe.FAIL_ASSIGNMENT_TYPE_MISMATCH(c,o),failureRow:b,failureColumn:O});J=!0,de=!0,C.emit(we,e)},re=c=>{let o=Object.freeze({type:Ul,message:c,failureRow:b,failureColumn:O});J=!0,de=!0,C.emit(we,o)},In=c=>{let o=Object.freeze({type:Sp,message:Xe.FAIL_INPUT_TYPE_MISMATCH(b,c),failureRow:b,failureColumn:O,inputs:c});J=!0,de=!0,C.emit(we,o)},Ct=c=>{let o=Object.freeze({type:hp,message:Xe.FAIL_UNSUPPORTED_TYPE(c),failureRow:b,failureColumn:O});J=!0,de=!0,C.emit(we,o)},wt=c=>c-d|0,Nn=c=>{let o=je|0;return wt(c)<o},Sn=(c,o)=>{let e=je|0,l=wt(c);switch(o){case Zn:return l<=e;case ir:return l!==e}throw qn},ys=(c,o=!0)=>{let{name:e,path:l,type:t}=c,s=`${l}.${e}`;if(!bt.has(s)){let n=S.length;l===me?n=S.findIndex(r=>r.path!==me):t===Ut?n=S.findIndex(r=>r.path!==me&&r.type!==Ut):o&&(n=S.findIndex(r=>r.path!==me&&r.type!==Ut)),n===-1||n===S.length?S.push(c):S.splice(n,0,c),bt.set(s,c),p.has(s)||P(c)}},Ue=c=>{let o=A.get(c);if(!o)return null;if(o.length===1){let[e]=o;return ys(e),e}if(o.length>0&&o[0].type===Ut){let[e]=o;return ys(e),e}throw qn},Xp=(c,o)=>{let{description:e}=c,{inputs:l,locals:t}=e,{name:s}=o;for(let n of l)if(n.name===s)return n.data;for(let n of t)if(n.name===s)return n.data;return null},Kl=(c,o,e,l)=>{switch(u){case hs:{let t=o.subarray(e,e+l|0);if(a&&a.export&&(je=wt(c),Cs&&Cs!==je&&(y(),a=null,h(),Cs=null,je=1),Cs=je),Z(t,ip)){h(),U=Ir,u=rc,_=!0;return}if(Z(t,lp)){h(),je=wt(c),a=Object.freeze({export:!0,indentation:je}),u=hr;return}if(Z(t,np)){h(),U=Or,u=Lr,_=!0;return}if(Z(t,Gn)||Z(t,sr)){h(),U=Tr,u=$r,_=!0;return}if(Z(t,Ht)){h(),U=to,u=oc,_=!0;return}if(Z(t,qa)){h(),U=Ar,u=Zs,_=!0;return}if(o[e]===ee)return;b=T|0,O=c-d|0;let s=f(t);Y(\"export/import statement, type, or function definition\",s,os);break}case hr:{if(o[e]===ce){u=hs,h(),u=Pr;return}_=!0,u=hs;break}case Pr:{if(o[e]===ee){u=hs;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=os;Y(f(ee),n,r);break}case Nr:{De=!1;let t=o.subarray(e,e+l|0);if(Z(t,rp)){U=Ye,u=fc,_=!0;return}if(Z(t,$s)){U=Ye,u=Nc,_=!0;return}if(Z(t,op)){U=Ye,u=Dc,_=!0;return}if(Z(t,Ep)){U=Ye,u=eu,_=!0;return}if(Z(t,_p)){U=Ye,u=fu,_=!0;return}if(Z(t,pp)){U=Ye,u=cu,_=!0;return}if(Z(t,bp)){U=Ye,u=Lu,_=!0;return}if(Z(t,ap)){U=Ye,u=Yc;return}if(Z(t,xa)){U=Ye,u=Rc,_=!0;return}if(Z(t,ns)||Z(t,zt)||Z(t,Hs)){b=T|0,O=c-d|0;let r=f(t),i=Is;if(Qn(c,o,e,l)){An(r);return}Y(\"statement declarer\",r,i);return}if(Z(t,Ht)){U=Ye,u=Sc,_=!0;return}if(Z(t,cp)){U=Ye,u=Pc,_=!0;return}if(Z(t,ar)||Z(t,fp)){U=Ye,u=Jc,_=!0;return}if(!St(c,o,e,l)){U=Ye,u=Vc,_=!0;return}b=T|0,O=c-d|0;let s=f(t),n=wp;if(Qn(c,o,e,l)){An(s);return}Y(\"statement declarer\",s,n);break}case Se:{let t=o[e],s=o.subarray(e,e+l|0),n=f(s);if(S.find(i=>i.type===Bt&&i.description.labels.find(E=>E.name===n))){U=ge,u=Go,_=!0;return}if(Bn(t)&&!bn(f(s))){if(S.find(m=>m.name===n&&m.type===Me)){U=ge,u=$u,_=!0;return}if(S.find(m=>m.type===Bt&&m.name===n)){U=ge,u=Go,_=!0;return}}if(Z(s,$n)){U=ge,u=ei,_=!0;return}if(Z(s,tr)){U=ge,u=Zu,_=!0;return}if(Z(s,xa)){U=ge,u=wu,_=!0;return}if(Z(s,ns)){U=ge,u=rn,_=!0;return}if(Z(s,zt)){U=ge,u=rn,_=!0;return}if(Z(s,Hs)){U=ge,u=rn,_=!0;return}if(Z(s,er)){U=ge,u=qo,_=!0;return}if(Z(s,up)){U=ge,u=pi,_=!0;return}if(Z(s,nr)){U=ge,u=Di,_=!0;return}if(t===He){U=ge,u=jo,_=!0;return}if(t===pe){U=ge,u=Vi,_=!0;return}if(Ds(c,o,e,l)||dp.includes(t)||bn(n)){U=ge,u=yo,_=!0;return}u=so,ve(),_=!0;break}case so:{Oe(c,o,e,l),h(),a=o[e],u=Sr;break}case Sr:{Oe(c,o,e,l);let t=a;y();let s=o[e];if(s===pe){U=ge,u=cn,Le();return}if(s===He){U=ge,u=Xu,Le();return}if(s===$e&&!Wn.includes(t)){U=ge,u=cn,Le();return}if(s===st){u=so;return}U=ge,u=yo,Le();break}}},Hl=(c,o,e,l)=>{switch(u){case Lr:{let t=v.join(\".\"),s=Object.seal({labels:[],generics:[]}),n=Object.seal({type:Bt,name:it,path:t,description:s});a=Object.seal({enumeration:n}),u=Rr;break}case Rr:{let{enumeration:t}=a,s=o.subarray(e,e+l|0),n=f(s);if(St(c,o,e,l))return;t.name=n,u=kr;break}case kr:{let t=o[e];if(t===ce){u=Cr;return}if(t===$e){let{enumeration:i}=a,{description:E}=i,{generics:m}=E;h(),a=m,U=Ss,u=Ls,_=!0;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(`${f(ce)} or ${f($e)} for generics`,n,r);break}case Cr:{if(o[e]===ee){u=vr;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=os;Y(f(ee),n,r);break}case vr:{je=wt(c),u=no,_=!0;break}case no:{let{enumeration:t}=a;if(Nn(c)){if(ys(t),y(),a&&a.export){let s=Object.freeze({name:t.name,type:t.type,path:sa});W.push(s);let n=je;y(),je===n&&y(),je<n&&h()}_=!0;return}u=yr,_=!0;break}case yr:{let{enumeration:t}=a,{description:s}=t,{labels:n}=s,r=o.subarray(e,e+l|0),i=f(r);if(St(c,o,e,l))return;let E={name:i,props:[]};n.push(E),u=no,h(),a={label:E},u=Ur;break}case Ur:{let t=o[e];if(_=!0,t===pe){u=Br;return}u=ro;break}case Br:{if(o[e]===pe){u=oo;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case oo:{let t=o.subarray(e,e+l|0),s=f(t);if(rt(c,o,e,l)){b=T|0,O=c-d|0,qe(s);return}let{props:n}=a.label;h();let r=Object.seal({name:s,data:null});n.push(r),a={prop:r},u=Dr;break}case Dr:{if(o[e]===ce){u=Mr,h(),a=Object.seal({data:null}),h(),U=mt,u=ct;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case Mr:{let{data:t}=a;y();let{prop:s}=a;s.data=t,u=ao;let n=o[e];if(n===le){y(),u=ao,_=!0;return}if(n===Be){y(),u=oo;return}b=T|0,O=c-d|0;let r=o.subarray(e,e+l|0),i=f(r),E=We;Y(`${f(le)} or ${f(le)}`,i,E);break}case ao:{if(o[e]===le){u=ro;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=We;Y(f(le),n,r);break}case ro:{if(o[e]===ee){y();return}break}}},zl=(c,o,e,l)=>{switch(u){case Ls:{u=gr,_=!0;break}case gr:{if(o[e]===$e){u=Ws;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f($e),n,r);break}case Ws:{let t=o[e];if(t===ee)return;if(t===ze){y();return}u=Vr,_=!0;break}case Vr:{let t=o.subarray(e,e+l|0),s=f(t);if(St(c,o,e,l))return;h();let n=Object.seal({type:Ut,name:s,path:Te});a=Object.seal({name:s,data:n}),P(a.data,a.name),u=Gr;break}case Gr:{let t=a;y(),a.push(t);let n=o[e];if(n===ze){u=Ws,_=!0;return}if(n===Be){u=Ws;return}b=T|0,O=c-d|0;let r=o.subarray(e,e+l|0),i=f(r),E=We;Y(f(le),i,E);break}}},Xl=(c,o,e,l)=>{switch(u){case Ps:{u=Fr,_=!0;break}case Fr:{if(o[e]===pe){u=Xs;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case Xs:{let t=o[e];if(t===ee)return;if(t===le){y();return}u=jr,_=!0;break}case jr:{let t=o.subarray(e,e+l|0);if(h(),Z(Xt,t)){a=Object.seal({name:null,mutable:!0,data:null}),u=co;return}a=Object.seal({name:null,data:null}),u=co,_=!0;break}case co:{let t=o.subarray(e,e+l|0),s=f(t);if(St(c,o,e,l))return;a.name=s,u=Yr;break}case Yr:{if(o[e]===ce){u=wr,h(),U=mt,u=ct;return}break}case wr:{let t=a;y();let s=a,{mutable:n,...r}=t;s.push(r);let i=o[e];if(i===le){u=Xs,_=!0;return}if(i===Be){u=Xs;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=We;Y(`${f(le)} or ${f(Be)}`,m,N);break}}},Wl=(c,o,e,l)=>{switch(u){case $r:{let t=v.join(\".\"),s=Object.seal({members:[],generics:[]}),n=Object.seal({type:Me,name:it,copy:!0,path:t,description:s});a=Object.seal({mapNameMember:new Map,object:n}),Ue(Je),u=Kr,_=!0;break}case Kr:{let t=o.subarray(e,e+l|0);if(u=Hr,Z(t,sr)){a.object.copy=!1;return}_=!0;break}case Hr:{let t=o.subarray(e,e+l|0);if(Z(t,Gn)){u=zr;return}b=T|0,O=c-d|0;let s=f(t),n=nt;Y(f(Gn),s,n);break}case zr:{let{object:t}=a,s=o.subarray(e,e+l|0),n=f(s);if(St(c,o,e,l))return;let r=Ue(n);if(r&&v.join(\".\")===r.path&&(b=T|0,O=c-d|0,Jt(n)),Z(s,Xt)){b=T|0,O=c-d|0,failReservedKeyword(n);return}t.name=n,ys(t,!1),u=Xr;break}case Xr:{if(o[e]===$e)u=Wr,_=!0;else if(o[e]===ce)u=uo,_=!0;else{let t=o.subarray(e,e+l|0),s=f(t);b=T|0,O=c-d|0,qe(s);return}break}case Wr:{let{object:t}=a,{description:s}=t,{generics:n}=s;u=uo,h(),a=n,U=Ss,u=Ls,_=!0;break}case uo:{if(o[e]===ce){u=Jr;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case Jr:{if(o[e]===ee){u=Zr;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=os;Y(f(ee),n,r);break}case Zr:{if(Sn(c,Zn)){let t=g.length;if(g.length<1||g[t-1].item.indentation>=je){b=T|0,O=c-d|0,_a(c);return}}je=wt(c),u=Js,_=!0;break}case Js:{let{object:t}=a;if(Nn(c)){if(y(),a&&a.export){let s=Object.freeze({name:t.name,type:t.type,path:sa});W.push(s);let n=je;y(),je===n&&y(),je<n&&h()}_=!0;return}if(Sn(c,ir)){b=T|0,O=c-d|0,gl(c);return}u=qr,_=!0;break}case qr:{let{object:t,mapNameMember:s}=a,{description:n}=t,{members:r}=n,i=o.subarray(e,e+l|0),E=f(i);if(u=Qr,Z(i,Xt)){h(),a=Object.freeze({mutable:!0});return}_=!0;break}case Qr:{let t;a.mutable&&(t=a.mutable,y());let{object:s,mapNameMember:n}=a,{description:r}=s,{members:i}=r,E=o.subarray(e,e+l|0),m=f(E);if(Z(qa,E)){u=Js,h(),U=dr,u=Zs,_=!0;return}if(St(c,o,e,l))return;n.has(m)&&(b=T|0,O=c-d|0,Ea(m,s.name));let N={name:m,data:null};t&&(N.mutable=t),i.push(N),n.set(m,N),u=Js,h(),a=Object.seal({member:N}),u=xr;break}case xr:{if(o[e]===ce){u=ec;return}break}case ec:{u=nc,h(),a=Object.seal({data:null}),h(),U=mt,u=ct,_=!0;break}case nc:{let t=o[e],{data:s}=a;y();let{member:n}=a;if(n.data=s,n.mutable&&(n.data={...s,mutable:n.mutable}),t===ee){y();return}if(t===et){u=tc;return}b=T|0,O=c-d|0;let r=o.subarray(e,e+l|0),i=f(r),E=Pt;Y(`${f(ee)} or ${f(et)}`,i,E);break}case tc:{let{stack:t}=a;u=sc,h(),a={stack:new Map,procedure:null,value:null},h(),u=Se,U=Ne,_=!0;break}case sc:{let{value:t}=a;y();let{member:s}=a;s.value=t,y();break}}},Jl=(c,o,e,l)=>{switch(u){case Zs:{let{mapNameMember:t,object:s}=a,{name:n}=s,r=new Map(t),i=`${v.join(\".\")}.${n}`,E=Object.seal({generics:[],inputs:[],locals:[],outputs:[],statements:[]}),m=Object.seal({type:lt,name:it,path:i,description:E});a=Object.seal({procedure:m,stack:r}),u=qs;break}case qs:{let{procedure:t}=a,s=o.subarray(e,e+l|0),n=f(s);if(St(c,o,e,l))return;if(Z(s,Xt)){b=T|0,O=c-d|0,failReservedKeyword(n);return}t.name=n,u=Qs;break}case Qs:{if(o[e]===$e)u=xs,_=!0;else if(o[e]===pe)u=cs,_=!0;else{let t=o.subarray(e,e+l|0),s=f(t);b=T|0,O=c-d|0,qe(s);return}break}case xs:{let{procedure:t}=a,{description:s}=t,{generics:n}=s;u=cs,h(),a=n,U=Ss,u=Ls,_=!0;break}case cs:{let{procedure:t}=a,{description:s}=t,{inputs:n}=s;u=en,h(),a=n,U=Ns,u=Ps,_=!0;break}case en:{let{procedure:t,stack:s}=a,{description:n}=t,{inputs:r}=n;for(let R of r){let{name:F,data:w}=R;s.set(F,w)}r.length>0&&a.procedure.name===za&&(b=T|0,O=c-d|0,re(\"Destructors should not return any values. Your destructor appears to return a number. Please adhere to Flogram's conventions and correct your code.\"));let i=o.subarray(e,e+l|0),E=o[e];if(Z(i,Ks)){u=tn;return}if(E===ce){u=us,_=!0;return}b=T|0,O=c-d|0;let m=f(i),N=_r;Y(`${f(Ks)} or ${f(ce)}`,m,N);break}case tn:{let{procedure:t}=a,{description:s}=t,{outputs:n}=s;u=us,h(),a=n,U=Ns,u=Ps,_=!0;break}case us:{let t=o[e],{outputs:s}=a.procedure.description;if(s.length>0&&a.procedure.name===gs&&(b=T|0,O=c-d|0,re(`Constructors in Flogram should not return any values. Your constructor seems to return ${s.length} outputs. Please correct your code according to Flogram rules.`)),s.length>0&&a.procedure.name===za&&(b=T|0,O=c-d|0,re(`Destructors in Flogram should not return any values. Your destructor seems to return ${s.length} outputs. Please correct your code according to Flogram rules.`)),t===ce){u=sn;return}b=T|0,O=c-d|0;let n=o.subarray(e,e+l|0),r=f(n),i=nt;Y(f(ce),r,i);break}case sn:{if(o[e]===ee){u=nn;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=os;Y(f(ee),n,r);break}case nn:{let{procedure:t,stack:s}=a,{description:n}=t,{statements:r}=n;u=on,h(),a=Object.seal({procedure:t,stack:s,statements:r}),U=Ye,u=Lt,_=!0;break}case on:{let{procedure:t}=a,{name:s}=t;y();let{object:n,mapNameMember:r}=a,{description:i}=n,{members:E}=i;r.has(s)&&(b=T|0,O=c-d|0,Ea(s,n.name));let m=Object.seal({name:t.name,data:{name:t.name,type:t.type,path:t.path}});E.push(t),r.set(s,m),_=!0;break}}},Zl=(c,o,e,l)=>{switch(u){case oc:{let t=o.subarray(e,e+l|0);if(Z(t,Ht)){h(),U=to,u=ac,_=!0;return}break}case ac:{if(o[e]===ee){y();return}break}}},ql=(c,o,e,l)=>{switch(u){case Zs:{let t=new Map,s=v.join(\".\"),n=Object.seal({generics:[],inputs:[],locals:[],outputs:[],statements:[]}),r=Object.seal({type:lt,name:it,path:s,hasArity:!1,description:n});a=Object.seal({procedure:r,stack:t}),u=qs;break}case qs:{let{procedure:t}=a,s=o.subarray(e,e+l|0),n=f(s);if(St(c,o,e,l))return;if(Z(s,Xt)){b=T|0,O=c-d|0,failReservedKeyword(n);return}t.name=n,u=Qs;break}case Qs:{if(o[e]===$e)u=xs,_=!0;else if(o[e]===pe)u=cs,_=!0;else{let t=o.subarray(e,e+l|0),s=f(t);b=T|0,O=c-d|0,qe(s);return}break}case xs:{let{procedure:t}=a,{description:s}=t,{generics:n}=s;u=cs,h(),a=n,U=Ss,u=Ls,_=!0;break}case cs:{let{procedure:t}=a,{description:s}=t,{inputs:n}=s;u=en,h(),a=n,U=Ns,u=Ps,_=!0;break}case en:{let{procedure:t,stack:s}=a,{description:n}=t,{inputs:r}=n;for(let R of r){let{name:F,data:w}=R;s.set(F,w)}let i=o.subarray(e,e+l|0),E=o[e];if(Z(i,Ks)){u=tn;return}if(E===ce){u=us,_=!0;return}b=T|0,O=c-d|0;let m=f(i),N=_r;Y(`${f(Ks)} or ${f(ce)}`,m,N);break}case tn:{let{procedure:t}=a,{description:s}=t,{outputs:n}=s;u=us,h(),a=n,U=Ns,u=Ps,_=!0;break}case us:{let t=o[e],{procedure:s}=a;if(Re(s),t===ce){u=sn;return}b=T|0,O=c-d|0;let n=o.subarray(e,e+l|0),r=f(n),i=nt;Y(f(ce),r,i);break}case sn:{if(o[e]===ee){u=nn;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=os;Y(f(ee),n,r);break}case nn:{let{procedure:t,stack:s}=a,{description:n}=t,{statements:r}=n;u=on,h(),a=Object.seal({procedure:t,stack:s,statements:r}),U=Ye,u=Lt,_=!0;break}case on:{let i=function(E,m=!0){let N=[Wa,Xa,Ka,Za],R=!1;if(E.find(w=>w.type===pt))return!0;for(let w=E.length-1;w>=0;w--){let j=E[w];if(N.includes(j.type)&&j.statements)i(j.statements,!1)&&(R=!0);else if(j.type===Ja){let H=0;for(let Ae of j.matches)i(Ae.statements)&&H++;let{data:$}=ue(j.value),ie=S.find(Ae=>Ae.name===$.name&&Ae.path===$.path);j.matches.find(Ae=>Ae.type===bs)&&H===j.matches.length||ie&&ie.type===Bt&&j.matches.length===ie.description.labels.length?R=!0:H>0&&(b=T|0,O=c-d|0,re(`ReturnError: Procedure \"${t.name}\" has condition-specific returns; it will not return if conditions are not met.`))}else if(j.type===jn)if(j.branches&&j.branches.length>0){let H=E.some($=>$.type===pt);if(m&&!H&&j.branches.length<2)return b=T|0,O=c-d|0,re(`ReturnError: Procedure \"${t.name}\" has condition-specific returns; it will not return if conditions are not met.`),!1;if(!H){for(let $ of j.branches)if(!$.statements||!i($.statements,!1))return b=T|0,O=c-d|0,re(`Procedure ${t.name} does not have a return statement. Please make sure your return values are marked as defined in the procedure definition.`),!1;w!==E.length-1&&E[E.length-1].type!==ts&&(b=T|0,O=c-d|0,re(`Code after return statement will not be executed. Procedure ${t.name} has defined statements after a return statements which makes them unreachable.`))}R=!0}else return console.error(\"Error: Condition does not have branches\"),!1;else j.type===pt&&(w!==E.length-1&&E[E.length-1].type!==ts&&(b=T|0,O=c-d|0,re(`Code after return statement will not be executed. Procedure ${t.name} has defined statements after a return statements which makes them unreachable.`)),R=!0);if(R==!0)break}return m&&!R&&(b=T|0,O=c-d|0,re(`Procedure ${t.name} does not have a return statement. Please make sure your return values are marked as defined in the procedure definition.`)),R},{procedure:t}=a,{description:s}=t,{statements:n,outputs:r}=s;if(t.hasArity){let E=Object.freeze({name:s.locals.find(N=>N.purpose===Fn).name,type:xe}),m=Object.freeze({type:pt,values:[E]});n.push(m)}if(r.length!==0&&i(n),r.length===0&&!n.find(E=>E.type===pt)&&n.push(Object.freeze({type:pt,values:[]})),y(),a&&a.export){let E=Object.freeze({name:t.name,type:t.type,path:ll});W.push(E);let m=je;y(),je===m&&y(),je<m&&h()}_=!0;break}}},Ql=(c,o,e,l)=>{switch(u){case Lt:{if(Sn(c,Zn)){b=T|0,O=c-d|0,_a(c);return}je=wt(c),u=lc,_=!0;break}case lc:{let t=o.subarray(e,e+l|0);if(Nn(c)){y(),_=!0;return}h(),U=Ne,u=Nr,_=!0;break}case Yc:{let{statements:t}=a,s={type:X_};t.push(s),y();break}case cu:{let{procedure:t,stack:s,statements:n}=a,r=Object.seal({type:Wa,condition:null,statements:[]});n.push(r),h(),a=Object.seal({blockWhile:r,procedure:t,stack:s}),u=uu;break}case uu:{let{stack:t,procedure:s}=a;u=iu,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case iu:{if(o[e]===ce){let{value:i}=a;y();let{blockWhile:E}=a;E.condition=i,u=lu;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case lu:{let{blockWhile:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=Po,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case Lu:{let{procedure:t,stack:s,statements:n}=a,r=Object.seal({type:Ja,value:null,matches:[]});n.push(r),h(),a=Object.seal({blockWhen:r,procedure:t,stack:s}),u=Ru;break}case Ru:{let{stack:t,procedure:s}=a;u=ku,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case ku:{if(o[e]===ce){let{value:i}=a;y();let{blockWhen:E}=a;E.value=i,u=Cu;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case Cu:{if(o[e]===ee){u=ko;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=Pt;Y(f(ee),n,r);break}case ko:{let t=o.subarray(e,e+l|0);if(Z(t,Ts)){let{stack:s,procedure:n,blockWhen:r}=a,{matches:i}=r;h();let E=Object.seal({type:ms,value:null,statements:[]});i.push(E),a={procedure:n,stack:s,match:E,blockWhen:r},u=vu,h(),a={stack:s,procedure:n,value:null},h(),u=Se,U=Ne;return}}case vu:{if(o[e]===ce){let{value:i}=a;y();let{match:E,blockWhen:m}=a,N=ue(m.value),R=ue(i);if(R.data.path!=N.data.path||R.data?.name!=N.data?.name){b=T|0,O=c-d|0,re(`TypeError: Type mismatch in when block. When value's ${N.data.name} is being compared against match value's ${R.data.name}. To avoid unexpected behaviours. Use when with I32 or Enums, and if for other type conditions`);return}E.value=i,u=Co;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case Co:{let{match:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=yu,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case Uu:{let{stack:t,procedure:s,blockWhen:n}=a,{matches:r}=n,i=o.subarray(e,e+l|0);if(Z(i,$s)){h();let N=Object.seal({type:bs,statements:[]});r.push(N),a={procedure:s,stack:t,match:N},u=Bu;return}b=T|0,O=c-d|0;let E=f(i),m=[];Y(f($s),E,m);break}case Bu:{if(o[e]==ce){u=Co;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case yu:{y();let t=o.subarray(e,e+l|0);if(Z(t,Ts)){u=ko,_=!0;return}if(Z(t,$s)){u=Uu,_=!0;return}let{blockWhen:s}=a,n=s.matches.every(r=>r.statements.some(i=>i.type===pt||i.type===ts))&&s.matches.some(r=>r.type===bs);y(),n&&a.statements.push(Object.freeze({type:ts})),y(),_=!0;break}case fu:{let{procedure:t,stack:s,statements:n}=a,r=Object.seal({type:Za,limit:null,variable:null,modifier:it,initializer:null,step:null,statements:[]});n.push(r),h(),a=Object.seal({procedure:t,stack:s,blockFor:r}),u=Eu,ve();break}case Eu:{Oe(c,o,e,l);let t=o.subarray(e,e+l|0),s=f(t);if(o[e]===ce){u=_u,Le();return}if(fr.includes(s)){u=Tu,Le();return}if(o[e]===et){b=T|0,O=c-d|0;let n=o.subarray(e,e+l|0);re(\"Unexpected behavior: Existing variables can not be updated in for loop definition. Please update the value before you define the loop or declare a brand new variable.\");return}break}case _u:{let{stack:t,blockFor:s}=a,n=o.subarray(e,e+l|0),r=f(n);if(t.has(r)){b=T|0,O=c-d|0,Jt(r);return}s.variable=Object.freeze({type:xe,name:r}),u=pu;break}case pu:{let t=o.subarray(e,e+l|0),s=f(t);if(o[e]===ce){let{blockFor:i,stack:E}=a,{name:m}=i.variable;if(E.has(m)){b=T|0,O=c-d|0,Jt(m);return}if(o[e+1]===et&&l>1){u=Lo,_=!0;return}u=mu;return}b=T|0,O=c-d|0;let r=pr;Y(`${f(ce)} or ${f([ce,et])}`,s,r);break}case mu:{let{blockFor:t,procedure:s,stack:n}=a,{variable:r}=t,{description:i}=s,{locals:E}=i,m=o.subarray(e,e+l|0),N=f(m);if(rt(c,o,e,l)){b=T|0,O=c-d|0,qe(N);return}let R=Ue(N);if(R){let F=Object.seal({type:Ce,name:R.name,path:R.path}),w;if(r.mutable?w=Object.freeze({name:r.name,data:{...F,mutable:target.mutable}}):w=Object.freeze({name:r.name,data:F}),!zs.includes(r.data.name)){b=T|0,O=c-d|0;let j=o.subarray(e,e+l|0),H=f(j);re(`Error: 'For' loop counter must be a numeric type. The current counter type is '${H}', which is not supported. Please use a numeric type (e.g., integer or floating-point) for the loop counter.`);return}n.set(r.name,r.data),E.push(w),u=Lo;break}}case Lo:{if(o[e]===et||o[e]===ce&&o[e+1|0]===et){u=bu;return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t);Y(et,s,[]);break}case bu:{let{stack:t,procedure:s}=a;u=Ou,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Ou:{let{stack:t,procedure:s,value:n}=a,{description:r}=s,{locals:i}=r;y();let{blockFor:E}=a,{variable:m}=E,{data:N}=ue(n),R=t.get(E.variable.name);if(R){if(R.name!==N.name){if(N.type!==Ie){b=T|0,O=c-d|0,ba(R.name,N.name);return}if(!zs.includes(m.data.name)){b=T|0,O=c-d|0;let F=o.subarray(e,e+l|0),w=f(F);re(`Error: 'For' loop counter must be a numeric type. The current counter type is '${w}', which is not supported. Please use a numeric type (e.g., integer or floating-point) for the loop counter.`);return}}}else t.set(m.name,N),i.push({name:m.name,data:N.type===Ie?{type:Ce,name:N.name,path:N.path}:N});E.initializer=Object.freeze({target:m,type:yt,source:n.type===Ie?{...n,name:R?.name||n.name}:n}),u=Ro,_=!0;break}case Tu:{let{stack:t,procedure:s}=a;u=Au,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Au:{let{value:t}=a;y();let{blockFor:s}=a;s.variable=Ve(t),u=Ro,_=!0;break}case Ro:{let{blockFor:t}=a,s=o.subarray(e,e+l|0),n=f(s);if(fr.includes(n)){t.modifier=n,u=du;return}b=T|0,O=c-d|0;let r=f(s),i=[];Y(`'For' loop modifiers (e.g., ${na}, ${oa}, ${aa}, or ${ra})`,r,i);break}case du:{let{stack:t,procedure:s}=a;u=Iu,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Iu:{let{value:t}=a,{data:s}=ue(t);if(!zs.includes(s.name)){b=T|0,O=c-d|0;let F=o.subarray(e,e+l|0),w=f(F);re(`Error: 'For' loop limit must be a numeric type. The current limit type is '${w}', which is not supported. Please use a numeric type (e.g., integer or floating-point) for the loop limit.`);return}y();let{blockFor:n}=a,{modifier:r}=n;n.limit=Ve(t);let i=(F,w)=>w.find(j=>j.description&&Array.isArray(j.description.inputs)?j.description.inputs.length!==2?!1:j.description.inputs.every((H,$)=>H.data.name===F.name):!1),E={[na]:{stepper:\"+\",conditioner:\"<=\"},[aa]:{stepper:\"+\",conditioner:\"<\"},[oa]:{stepper:\"-\",conditioner:\">=\"},[ra]:{stepper:\"-\",conditioner:\">\"}};if(E.hasOwnProperty(r)){let{stepper:F,conditioner:w}=E[r],j=i(s,Gt[F]),H=i(s,Gt[w]);Re(j),Re(H)}let m=o.subarray(e,e+l|0);if(Z(m,cr)){u=Nu;return}b=T|0,O=c-d|0;let N=f(m),R=[];Y(f(cr),N,R);break}case Nu:{let{procedure:t,stack:s}=a;u=Su,h(),a={stack:s,procedure:t,value:null},h(),u=Se,U=Ne,_=!0;break}case Su:{if(o[e]===ce){let{value:i}=a;y();let{blockFor:E}=a;E.step=Ve(i);let{data:m}=ue(i);if(!zs.includes(m.name)){b=T|0,O=c-d|0;let N=o.subarray(e,e+l|0),R=f(N);re(`Error: 'For' loop step must be a numeric type. The current step type is '${R}', which is not supported. Please use a numeric type (e.g., integer or floating-point) for the loop step.`);return}u=hu;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case hu:{let{blockFor:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=Pu,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case Pu:{y(),y(),_=!0;break}case eu:{let{procedure:t,stack:s,statements:n}=a,r=Object.seal({type:Xa,iterator:null,index:`j_${ut()}`,collection:null,statements:[]}),i={name:r.index,data:{type:Ce,name:Je,path:me}};s.set(i.name,i.data),n.push(r),Ue(i.data.name),h(),a=Object.seal({blockForeach:r,procedure:t,stack:new Map(JSON.parse(JSON.stringify(Array.from(s))))}),u=tu;break}case tu:{let t=o.subarray(e,e+l|0),{blockForeach:s,stack:n}=a,r=f(t);if(n.has(r)){Jt(r),b=T|0,O=c-d|0;return}s.iterator=r,u=su;break}case su:{let{blockForeach:t,stack:s,procedure:n}=a,{description:r}=n,{locals:i}=r,E=o.subarray(e,e+l|0);if(Z(mp,E)){s.delete(t.index),u=nu;return}_=!0,u=ho;break}case nu:{let{blockForeach:t,stack:s,procedure:n}=a,{description:r}=n,{locals:i}=r,E=o.subarray(e,e+l|0),m=f(E);if(s.has(m)){Jt(m),b=T|0,O=c-d|0;return}let N={name:m,data:{type:Ce,name:Je,path:me}};s.set(m,N.data),i.push(N),Ue(N.data.name),t.index=m,u=ho;break}case ho:{let{blockForeach:t,stack:s,procedure:n}=a,{description:r}=n,{locals:i}=r,E=o.subarray(e,e+l|0);if(Z(rr,E)){s.has(t.index)&&!i.find(R=>R.name===t.index)&&i.push({name:t.index,data:s.get(t.index)}),u=ou;return}b=T|0,O=c-d|0;let m=f(E),N=nt;Y(f(rr),m,N);break}case ou:{let{stack:t,procedure:s}=a;u=au,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case au:{if(o[e]===ce){let{value:i,stack:E,procedure:m}=a,{description:N}=m,{locals:R}=N;y();let{blockForeach:F}=a;F.collection=i;let{data:w}=ue(i),j={name:F.iterator,data:{type:w.contains||Ce,name:w?.name===tt?Os:w?.name,path:w?.path,layout:w.contains}};E.set(j.name,j.data),R.push(j),u=ru;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case ru:{let{blockForeach:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=Po,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case Po:{y(),y(),_=!0;break}case Dc:{let{procedure:t,stack:s,statements:n}=a,r=Object.freeze({type:Ka,statements:[]});n.push(r),h(),a=Object.seal({blockLoop:r,procedure:t,stack:new Map(JSON.parse(JSON.stringify(Array.from(s)))),value:0}),u=Mc;break}case Mc:{if(o[e]===ce){u=Fc;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case Fc:{let{blockLoop:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=jc,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case jc:{y(),y(),_=!0;break}case fc:{let{procedure:t,stack:s,statements:n}=a,r=Object.freeze({type:jn,branches:[],values:[]});n.push(r),h(),a=Object.seal({blockCondition:r,procedure:t,stack:new Map(JSON.parse(JSON.stringify(Array.from(s)))),value:0}),u=Tc;break}case Tc:{if(o[e]===pe){let{stack:t,procedure:s}=a;u=Eo,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;return}ve(),Oe(c,o,e,l),u=Ac;break}case Ac:{Oe(c,o,e,l);let t=o[e],s=o.subarray(e,e+l|0);if(t===pe||t===ce){let{stack:n,procedure:r}=a;u=Eo,h(),a={stack:n,procedure:r,value:null},h(),u=Se,U=Ne,_=!0,Le();return}if(Z(s,Ts)){let{stack:n,procedure:r}=a;u=lo,h(),a={stack:n,procedure:r,value:null},h(),u=Se,U=Ne,_=!0,Le();return}break}case Eo:{let{value:t}=a;y();let{blockCondition:s,stack:n,procedure:r}=a,{branches:i}=s,E=Object.seal({type:ms,statements:[],values:[Ve(t)]});i.push(E),a=Object.seal({blockCondition:s,branch:E,stack:n,value:t,procedure:r}),u=_o,_=!0;break}case Nc:{let{stack:t,branches:s,procedure:n}=a,r={type:bs,statements:[],values:[]};s.push(r),a=Object.seal({branch:r,stack:t,procedure:n}),u=_o;break}case _o:{let t=o.subarray(e,e+l|0);if(o[e]===ce){u=dc;return}b=T|0,O=c-d|0;let s=f(t),n=As;Y(f(ce),s,n);break}case dc:{let{branch:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=Ic,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case Ic:{if(a.blockCondition){let{blockCondition:t}=a,{branches:s}=t;y(),y(),a=Object.seal({...a,branches:s})}else{y();let{branches:t,...s}=a;if(t.length==2&&t[0].type===ms&&t[0].statements.find(n=>n.type===pt)&&t[1].type===bs&&!t[1].statements.find(n=>n.type===pt)){let n=`arity_${ut()}`,r=`status_${ut()}`,i=Object.freeze({type:Ce,name:Kt,path:me,mutable:!0}),E=Object.freeze({name:r,purpose:Ga,data:i}),m=Object.freeze({name:n,purpose:Fn,data:{...s.procedure.description.outputs[0].data,mutable:!0}});s.procedure.description.locals.push(m,E);let N=Object.freeze({type:xe,name:n}),R=Object.freeze({type:yt,source:t[0].statements.find(H=>H.type===pt).values[0],target:N}),F=Object.freeze({type:yt,source:Object.freeze({type:Ie,literal:\"TRUE\",name:Kt,path:me}),target:Object.freeze({type:xe,name:r})});t[0].statements.pop(),t[0].statements.push(R,F),s.statements.push(...t[1].statements),t.pop();let{stack:w}=s;w.set(n,m.data),w.set(r,i);let j=Object.freeze({type:yt,source:Object.freeze({type:Ie,name:Kt,literal:\"FALSE\",path:me}),target:Object.freeze({type:xe,name:r})});s.statements.unshift(j),s.procedure.hasArity=!0}t.every(n=>n.statements.some(r=>r.type===pt||r.type===ts))&&s.statements.push(Object.freeze({type:ts})),a=Object.seal(s)}_=!0;break}case lo:{let{value:t}=a;y();let{blockCondition:s,stack:n}=a,{values:r}=s,i=o.subarray(e,e+l|0),E=f(i);r.push(t),u=Ec,_=!0;break}case Ec:{if(o[e]===Be){let{stack:i,procedure:E}=a;u=lo,h(),a={stack:i,procedure:E,value:null},h(),u=Se,U=Ne,_=!0;return}let s=o.subarray(e,e+l|0);if(Z(s,Ts)){u=_c,h(),u=pc,_=!0;return}b=T|0,O=c-d|0;let n=f(s),r=Yp;Y(`${f(Ts)} or ${f(Be)}`,n,r);break}case _c:{y(),y(),_=!0;break}case pc:{let{blockCondition:t,procedure:s,stack:n}=a,{branches:r}=t,i=Object.seal({type:ms,statements:[],values:[]});r.push(i),a=Object.seal({blockCondition:t,branchMatch:i,procedure:s,stack:n}),u=fo;break}case fo:{let{blockCondition:t,branchMatch:s,stack:n}=a,{values:r}=t,{values:i}=s,E=o.subarray(e,e+l|0),m=f(E);if(St(c,o,e,l)&&!Z(E,nr)){b=T|0,O=c-d|0;let N=o.subarray(e,e+l|0),R=f(N);Y(\"match value\",R,nt);return}if(n.has(m)){let N=Object.freeze({type:xe,name:m});i.push(N)}else if(bn(m)){let N=Object.freeze({type:Ie,literal:m,name:Kt,path:me});i.push(N),Ue(N.name)}else{let{procedure:N}=a,{description:R}=N,{outputs:F}=R,w=m,{name:j,path:H}=F[0].data,$=Object.freeze({type:Ie,literal:w,name:j,path:H});i.push($)}u=mc;break}case mc:{let t=o[e];if(t===Be){u=fo;return}if(t===ce){u=bc;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(`${f(Be)} or ${f(ce)}`,n,r);break}case bc:{let{branchMatch:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=Oc,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case Oc:{y();let t=o.subarray(e,e+l|0),s=f(t);_=!0;break}case Sc:{u=hc;break}case hc:{if(o[e]===ee){y();return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=Pt;Y(f(ee),n,r);break}case Pc:{let{procedure:t,stack:s,statements:n}=a,r=Object.seal({type:pt,values:[]});n.push(r),h();let i=T|0,E=c-d|0,m=Object.freeze({row:i,column:E});a=Object.seal({commandReturn:r,coordinates:m,procedure:t,stack:s}),u=po;break}case po:{let{stack:t,procedure:s}=a;if(o[e]===ee){u=mo,_=!0;return}u=Lc,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Lc:{let{value:t}=a;y();let{commandReturn:s,stack:n,procedure:r}=a,{values:i}=s;i.push(Ve(t));let E=o[e];if(E===ee){u=mo,_=!0;return}if(E===Be){u=po;return}b=T|0,O=c-d|0;let m=o.subarray(e,e+l|0),N=f(m),R=Er;Y(`${f(ee)} or ${f(Be)}`,N,R);break}case mo:{let{commandReturn:t,coordinates:s,procedure:n}=a,{values:r}=t,{description:i}=n,{outputs:E}=i;if(r.length!==E.length){b=s.row|0,O=s.column|0,Vl(E.length,r.length,n.name);return}for(let m of E){let N=E.indexOf(m),R=ue(r[N]);if(R&&R.data.name!=m.data.name){b=s.row|0,O=s.column|0,re(`Mismatching types provided on procedure's return. Procedure expected ${m.data.name} at index ${N} but was provided with a rather ${R.data.name}. Please review to provide matching types.`);return}}if(n.hasArity){let m=Object.freeze({name:i.locals.find(j=>j.purpose===Fn).name,type:xe}),N=Object.freeze({name:i.locals.find(j=>j.purpose===Ga).name,type:xe}),R=Object.freeze({type:yt,source:r[0],target:m}),F=Object.freeze({type:ms,statements:[R],values:[N]}),w=Object.freeze({type:jn,branches:[F],values:[]});i.statements.pop(),i.statements.push(w)}y(),y();break}case Vc:{let t=o.subarray(e,e+l|0),{procedure:s,stack:n,statements:r}=a,i={type:xe,name:null},E=Object.seal({type:yt,target:i,source:null});if(a=Object.freeze({declarationValue:E,procedure:s,stack:n,statements:r,target:i}),Z(Xt,t))i.mutable=!0,u=bo;else{_=!0,u=So,ve();return}break}case So:{Oe(c,o,e,l),u=Hc;break}case Hc:{if(Oe(c,o,e,l),o[e]===pe){let{procedure:t,stack:s,statements:n}=a;u=zc;let r=Object.seal({type:Ha,expression:null});a=Object.seal({stack:s,procedure:t,drop:r,value:null,statements:n}),h(),U=ge,u=cn,Le();return}if(o[e]===st){u=So;return}u=bo,Le();break}case zc:{let{statements:t,drop:s,value:n}=a;s.expression=n,t.push(s),y();break}case bo:{let{stack:t}=a,s=o.subarray(e,e+l|0),n=f(s),r=t.get(n);if(t.has(n)&&!r.mutable&&(De=!0),Z(tr,s)){_=!0,u=Gc;return}let{target:i}=a;i.name=n,u=Oo;break}case Oo:{let t=o[e],{procedure:s,stack:n,statements:r,target:i}=a;if(t===He){let R=a.declarationValue,F={type:yt,target:{type:$a,array:{type:xe,name:R.target.name},index:null},source:null};a=Object.seal({declarationValue:F,procedure:s,stack:n,statements:r}),_=!0,u=To;return}if(t===st){let R=a.declarationValue,F=[],w=R.target;a=Object.seal({declarationValue:{type:yt,target:{type:dt,value:w,trail:F},source:null},procedure:s,stack:n,statements:r}),h(),a=Object.seal({stack:n,trail:F,value:w}),u=Ao;return}if(t===ce){_=!0,u=Cc;return}if(t===le){let{declarationValue:R}=a;y(),a.declarationValue.target=R.target,_=!0;return}if(t===et){let R=a.declarationValue?.target&&ye(a.declarationValue?.target);if(R&&R!==ft&&!n.get(R)){b=T|0,O=c-d|0,vs(R);return}u=an;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=As;Y(`${f(He)} or ${f(le)} or ${f(et)} or ${f(et)} or ${f(st)}`,m,N);break}case Gc:{a.target.type=Dt,a.target.trail=[],delete a.target.name,u=Io;break}case Io:{if(o[e]===st){u=$c;return}u=No,_=!0;break}case $c:{let t=o.subarray(e,e+l|0),s=f(t);a.target.trail.push(s),u=Kc;break}case Kc:{if(_=!0,o[e]===st){u=Io;return}if(o[e]==He){u=To;let t=Object.seal({type:$a,array:a.target,index:null});a.declarationValue.target=t;return}u=No;break}case No:{u=Rs,_=!0;break}case To:{if(o[e]===He){u=Uc;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=xn;Y(f(He),n,r);break}case Uc:{let{stack:t,procedure:s}=a;u=Bc,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Bc:{if(o[e]===Ft){let{value:i}=a;y();let E=ue(i);if(E.data.mutable&&i.type!==dt?a.declarationValue.target.index=Object.seal({type:It,link:i}):a.declarationValue.target.index=i,!E||![Je,\"U32\",\"I16\",\"U16\",\"U8\",\"I8\"].includes(E.data.name)){b=T|0,O=c-d|0,re(\"Invalid index. Array index must be a valid I32 variable\");return}u=Rs;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=mr;Y(f(Ft),n,r);break}case Rc:{let{procedure:t,stack:s,statements:n}=a,r=Object.seal({type:wn,link:null}),i=Object.seal({type:yt,target:r,source:null});a=Object.freeze({declarationValue:i,procedure:t,stack:s,statements:n}),u=Xc;break}case Xc:{if(o[e]===pe){u=kc;return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=ot;Y(f(pe),s,n);break}case kc:{let{stack:t,procedure:s}=a;u=Wc,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Wc:{if(o[e]===le){let{value:r}=a;y(),a.declarationValue.target.link=r,u=Oo;return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=We;Y(f(le),s,n);break}case wc:{if(o[e]!==st){y(),_=!0;return}u=Ao;break}case Ao:{let{stack:t,value:s,trail:n}=a,r=o.subarray(e,e+l|0),i=f(r),E,m,N=!1;if(s.type===xe){let{name:R}=s;E=t.get(R)}if(E){let{name:R,path:F}=E,w=`${F}.${R}`,j=p.get(w);j.type===Me&&(m=j)}if(m){let{description:R}=m,{members:F}=R;for(let w of F)if(w.name===i){N=!0;break}if(!N){b=T|0,O=c-d|0,Ot(i,s.name);return}}if(s.value===ft||s.link===ft){if(!t.get(i)){b=T|0,O=c-d|0,Ot(i,`${ft}(current object in definition)`);return}N=!0}if(!N){b=T|0,O=c-d|0,Ot(i,s.name);return}n.push(i),u=wc;break}case Cc:{let t=o.subarray(e,e+l|0),s=f(t);if(o[e]===ce){let{target:i,stack:E}=a,{name:m}=i;if(E.has(m)){b=T|0,O=c-d|0,Jt(m);return}if(o[e+1]===et&&l>1){u=gc,_=!0;return}u=vc,h(),a=Object.seal({data:null}),h(),U=mt,u=ct;return}b=T|0,O=c-d|0;let r=pr;Y(`${f(ce)} or ${f([ce,et])}`,s,r);break}case vc:{let{data:t}=a;y();let{declarationValue:s,procedure:n,stack:r,statements:i}=a,{target:E}=s,{description:m}=n,{locals:N}=m,R,F;if(t.type!==Ce)E.mutable?R=Object.freeze({name:E.name,data:{...t,mutable:E.mutable}}):R=Object.freeze({name:E.name,data:t}),t.type===Fe|t.layout===Fe&&(F=!0);else{let w=Ue(t.name);if(w){let j=Object.seal({type:Ce,name:w.name,path:w.path});E.mutable?R=Object.freeze({name:E.name,data:{...j,mutable:E.mutable}}):R=Object.freeze({name:E.name,data:j})}else if(t.name===Fe)F=!0;else{b=T|0,O=c-d|0,Ct(name);return}}if(F){let w;E.mutable?(w={name:E.name,mutable:E.mutable,data:R.data},delete E.mutable):w=Object.seal({name:E.name,data:R.data}),r.set(E.name,w.data),N.push(w),a=Object.seal({declarationValue:s,procedure:n,stack:r,statements:i,inferenceValue:w}),u=Rs,_=!0;return}r.set(E.name,R.data),N.push(R),u=Rs,_=!0;break}case gc:{let{declarationValue:t,procedure:s,stack:n,statements:r}=a,{target:i}=t,{description:E}=s,{locals:m}=E,N;i.mutable?(N={name:i.name,mutable:i.mutable,data:null},delete i.mutable):N=Object.seal({name:i.name,data:null}),n.set(i.name,N.data),m.push(N),a=Object.seal({declarationValue:t,procedure:s,stack:n,statements:r,inferenceValue:N}),u=an;break}case Rs:{let t=o.subarray(e,e+l|0);if(Z(t,Gs)){u=an;return}b=T|0,O=c-d|0;let s=f(t),n=As;Y(f(Gs),s,n);break}case an:{let{procedure:t,stack:s,target:n}=a,r=o[e];if(rt(c,o,e,l)&&r!==pe&&r!==He){let i=o.subarray(e,e+l|0),E=f(i);b=T|0,O=c-d|0,qe(E);return}u=yc,h(),a=Object.seal({procedure:t,stack:s,value:null}),h(),U=Ne,u=Se,_=!0;break}case yc:{if(o[e]===ee){let{value:i}=a;y();let{declarationValue:E,statements:m,stack:N}=a;if(a.inferenceValue){let x=function(Q){let te;switch(Q.type){case xe:{let oe=N.get(Q.name);oe.type===Ce?te=oe:oe.type===Ie?(te={type:Ce,name:oe.name,path:oe.path},Q.mutable&&(te.mutable=Q.mutable),Q.contains&&(te.contains=Q.contains)):(oe.type===Fe||oe.type===\"Link\")&&(te=oe);let{moved:Tt,...Qe}=te;te=Qe;break}case es:{te={type:Ce,name:tt,path:me};break}case Ie:{te={type:Ce,name:Q.name,path:Q.path},Q.layout===Fe&&(te.type=Fe,te.quantity=Q.quantity,Ue(te.name)),Q.contains&&(te.contains=Q.contains);break}case Vn:{te={type:Ce,name:Je,path:me};break}case ws:{te={type:Q.type,name:Q.data.name,path:Q.data.path},Q.data.contains&&(te.contains=Q.data.contains);break}case gn:{te=x(Q.value);break}case $t:{if(Q.name===Vs)return Ue(ks),{type:Ce,name:ks,path:me};let oe=Qe=>D.find(At=>At.type===lt&&At.name===Qe.name)?.description.outputs[0]?.data,Tt=(Qe,At)=>{let at;for(let vt=0;At&&vt<=Qe.name.length-2;vt++)At=N.get(Qe.name[vt]),At&&(at=S.find(Zt=>Zt.type===Me&&Zt.name===At.name));return at?.description.members?.find(vt=>vt.name===Qe.name[Qe.name.length-1])?.description.outputs[0]?.data};if(typeof Q.name===Me&&Q.name[0]===Dt){let Qe=z(0);Qe&&(te=q(Qe,Q.name.slice(1)).description?.outputs[0]?.data)}else if(Q.path!==me){if(te=oe(Q),typeof Q.name==\"object\"){let Qe=N.get(Q.name[0]);te=Tt(Q,Qe)}if(!te){b=T|0,O=c-d|0,re(`TypeError: can not infer type from a function '${Q.name}' as it does not have a return type.`);return}}else if(lr.has(Q.name))te={type:Ce,name:Kt,path:me},Ue(te.name);else{let Qe=Q.inputs.map(at=>ue(at)),At=D.find(at=>at.description&&Array.isArray(at.description.inputs)?at.description.inputs.length!==Qe.length||at.name!=Q.name?!1:at.description.inputs.every((vt,Zt)=>vt.data.name===Qe[Zt].data.name):!1);if(At){let{description:at}=At,{outputs:vt}=at,Zt=vt[0],{data:of}=Zt,{name:af,path:rf}=of;te={type:Ce,name:af,path:rf}}else{b=T|0,O=c-d|0,ma(Qe.map(at=>at.data.name),Q.name);return}}break}case Mt:{te={...x(Q.value),type:Yn},Q.unsafe&&(te.unsafe=Q.unsafe),Q.smart&&(te.smart=Q.smart);break}case It:{let oe=N.get(Q.link);te={type:Ce,name:oe.name,path:oe.path},oe.contains&&(te.contains=oe.contains);break}case Ys:{let oe=ue(Q.array).data;te={type:Ce,name:oe.name,path:oe.path},oe.contains&&(te.contains=oe.contains);break}case dt:return ue(Q)?.data;case Me:return{type:Ce,name:Q.name,path:Q.path};default:{b=T|0,O=c-d|0,re(\"Error: unhandled inference type: \",Q.type);return}}return te},{inferenceValue:se}=a;se.data=x(i),se.mutable&&(se.data.mutable=se.mutable,delete se.mutable),N.set(se.name,se.data)}let{target:R}=E,F=ye(R),w=ye(i);if(N.has(w)){let se=S.find(x=>x.name===N.get(w).name&&x.type===Me);se&&!se.copy&&(b=T|0,O=c-d|0,$l(w))}F&&F!==ft&&(se=>{if(!N.get(se)?.mutable&&De){b=T|0,O=c-d|0,Gl(se);return}})(F),E.source=i;let H=ue(R),$=ue(i),ie=(se,x)=>{if(se===x)return!0;if(typeof se!=\"object\"||se===null||typeof x!=\"object\"||x===null)return!1;if(se.type===\"local\"&&x.type===\"local\")return se.name===x.name;let Q=Object.keys(se).filter(oe=>oe!==\"mutable\"),te=Object.keys(x).filter(oe=>oe!==\"mutable\");if(Q.length!==te.length)return!1;for(let oe of Q)if(!te.includes(oe)||!ie(se[oe],x[oe]))return!1;return!0},Ae=(se,x)=>se.some(Q=>ie(Q,x));if(H&&$){H.data?.mutable&&H.data.path===me&&H.data.type!==Fe&&R.type!=dt&&(Ae(Wt,R)||a.procedure.description.inputs.some(x=>x.name===H.name||x.name===ye(R))?E.target=Object.seal({type:wn,link:R}):$.data.path===me&&$.data.type!==Fe&&(E.source=Object.seal({type:Mt,value:i}),Wt.push(R))),$.data?.mutable&&$.data.path===me&&$.data.type!==Fe&&i.type!==dt&&(E.source=Object.seal({type:It,link:E.source}));let se=(x,Q)=>x.slice(1)===x.slice(1)||x.charAt(0)===x.charAt(0)||(x===\"FP64\"||x===\"FP32\"||x===\"I64\"||x===\"U64\"||x===Je||x===\"U32\"||x===\"I16\"||x===\"U16\"||x===\"I8\"||x===\"U8\")&&Q===Je||x===\"FP64\"&&Q==\"FP32\";if(H.data.name!==$.data.name&&!(H.data.type===$.data.name||H.data.name===$.data.type)&&!($.data.type===Ie&&se(H.data.name,$.data.name))){b=T|0,O=c-d|0,ba(H.data.name,$.data.name);return}}m.push(E),y();return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=gp;Y(f(ee),n,r);break}case Jc:{let{stack:t,procedure:s}=a,n=Object.seal({type:W_,unsafe:!0,value:null}),r=o.subarray(e,e+l|0);Z(r,ar)&&(n.unsafe=!1),h(),a=Object.seal({free:n,stack:t,procedure:s}),u=Zc;break}case Zc:{if(o[e]===pe){let{stack:i,procedure:E}=a;u=qc,h(),a={stack:i,procedure:E,value:null},h(),u=Se,U=Ne;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case qc:{let{value:t,stack:s}=a;y();let{free:n}=a;n.value=Ve(t);let r=!0,{name:i,data:E}=ue(t,r);if(b=T|0,O=c-d|0,E.type!==Yn){re(`Variable '${i}' is not a link and cannot be freed. Only 'unsafe' links are freeable.`);return}if(E.unsafe!==n.unsafe){re(`Improper free method used for link '${i}'. Unsafe links are unsafely freed with 'free!!' while safe ones are freed with 'free'. Your link(${i}) is ${E.unsafe?\"un\":\"\"}safe.`);return}let m=s.get(i);m&&s.set(i,{...m,freed:!0}),u=Qc,_=!0;break}case Qc:{if(o[e]===le){let{free:i}=a;y();let{statements:E}=a;E.push(i),u=xc;break}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=We;Y(f(le),n,r);break}case xc:{y();break}}},xl=(c,o,e,l)=>{switch(u){case ct:{let t=o.subarray(e,e+l|0),s=f(t);if(u=Du,o[e]===He){h(),_=!0,u=el,U=rs;return}if(rt(c,o,e,l)&&!ht.includes(s)){b=T|0,O=c-d|0,qe(s);return}if(Z(zt,t)){h(),a={data:null},_=!0,u=_n,U=rs;return}if(Z(ns,t)){h(),a={data:null},_=!0,u=_n,U=rs;return}if(Z($n,t)){h(),a={data:null},_=!0,u=rl,U=rs;return}let n=Ue(s);if(n){n.type===Ut?a.data=Object.seal({type:Ce,name:s,path:n.path}):a.data=Object.seal({type:Ce,name:n.name,path:n.path}),a.mutable&&(a.data=Object.seal({...a.data,type:f(ns),unsafe:!0,mutable:a.mutable}));return}b=T|0,O=c-d|0,vs(s),y();break}case Du:{let t=o.subarray(e,e+l|0);if(o[e]===$e){_=!0,u=Mu;return}y(),_=!0;break}case Mu:{if(o[e]===$e){u=Fu;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ds;Y(f($e),n,r);break}case Fu:{let t=o.subarray(e,e+l|0),s=f(t),n=Ue(s);if(n){let{data:i}=a,{unsafe:E,type:m,smart:N}=i,R=fe(m);if(Z(R,zt))a.data=Object.seal({type:m.replace(/!!$/,\"\"),name:n.name,path:n.path,segment:it,unsafe:E});else if(Z(R,ns))a.data=Object.seal({type:m,name:n.name,path:n.path,segment:it});else if(Z(R,Hs))a.data=Object.seal({type:m,name:n.name,path:n.path,segment:it,smart:N});else{if(S.find(w=>w.type===Me&&w.name===i.name)){u=ju,h(),a=[],h(),a={data:null},h(),_=!0,u=ct;return}a.data=Object.seal({type:m,name:n.name,path:n.path})}a.mutable&&(a.data=Object.seal({...a.data,mutable:a.mutable}));return}let r=o[e];if(r===Be)return;if(r===ze){_=!0,u=vo;return}a.data.segment!==void 0&&(a.data.segment=s),u=vo;break}case ju:{let t=o[e],{data:s}=a;if(y(),a.push(s),t===Be){h(),a={data:null},h(),u=ct;return}if(t===ze){let E=a;y();let m=S.find(R=>R.type===Me&&R.name===a.data.name);if(!(m.description?.generics?.length===E.length)){b=T|0,O=c-d|0,re(`Generic object '${name}' was provided with fewer or more than expect number of types. Expected: ${m.description.generics.length}. Got: ${E.length}`);return}a.data.name=B(a.data.name,E),y();return}b=T|0,O=c-d|0;let n=o.subarray(e,e+l|0),r=f(n),i=as;Y(`${f(Be)} or ${f(ze)}`,r,i);break}case vo:{if(o[e]===ze){y();return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=as;Y(f(ze),n,r);break}}},ef=(c,o,e,l)=>{switch(u){case el:{if(o[e]===He){let i=Object.seal({type:Fe,name:null,details:null,path:me,quantity:{size:null,capacity:null}});a=Object.seal({...a,type:i}),u=tl,h(),a={data:null},h(),U=mt,u=ct;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ds;Y(f(He),n,r);break}case tl:{let{data:t}=a;y(),a.type.name=t.name,a.type.path=t.path,a.type.details=t,_=!0,u=sl;break}case sl:{if(o[e]!==Ft){let s=o.subarray(e,e+l|0);b=T|0,O=c-d|0;let n=f(s),r=as;Y(f(Ft),n,r);return}let{type:t}=a;y(),a.data=t;return}case _n:{let t=o.subarray(e,e+l|0),n={type:f(t).replace(/!!$/,\"\"),path:me,details:null};Z(t,zt)&&(n.unsafe=!0),n=Object.seal({...n,name:null,segment:null});let{declarationValue:r,stack:i,procedure:E}=a;a=Object.seal({declarationValue:r,stack:i,procedure:E,type:n}),u=nl;break}case nl:{let t=o.subarray(e,e+l|0);if(o[e]===$e){u=ol,h(),a={data:null},h(),U=mt,u=ct;return}b=T|0,O=c-d|0;let s=f(t),n=ds;Y(f($e),s,n);break}case ol:{let{data:t}=a;y(),Ue(t.name),t.type!==Ce?a.type.name=t.type:a.type.name=t.name,a.type.path=t.path,a.type.details=t,_=!0,u=pn;break}case Kp:{let t=o.subarray(e,e+l|0);if(o[e]===Be){u=al;return}if(o[e]===ze){u=pn,_=!0;return}b=T|0,O=c-d|0;let s=f(t),n=We;Y(`${Be} or ${f(ze)}`,s,n);break}case al:{if(rt(c,o,e,l)){let n=o.subarray(e,e+l|0),r=f(n);b=T|0,O=c-d|0,qe(r);return}let t=o.subarray(e,e+l|0),s=f(t);a.type.segment=s,u=pn;break}case pn:{let t=o.subarray(e,e+l|0);if(o[e]===ze){let{type:r}=a;y(),a.data=r;return}b=T|0,O=c-d|0;let s=f(t),n=as;Y(f(ze),s,n);break}case rl:{let t=o.subarray(e,e+l|0),s=f(t),n=Object.seal({type:s,path:null,name:null,details:null}),{declarationValue:r,stack:i,procedure:E}=a;a=Object.seal({type:n}),u=cl;break}case cl:{let t=o.subarray(e,e+l|0);if(o[e]===$e){u=ul,h(),a={data:null},h(),U=mt,u=ct;return}b=T|0,O=c-d|0;let s=f(t),n=ds;Y(f($e),s,n);break}case ul:{let{data:t}=a;y(),Ue(t.name),t.type!==Ce?a.type.name=t.type:a.type.name=t.name,a.type.path=t.path,a.type.details=t,_=!0,u=il;break}case il:{let t=o.subarray(e,e+l|0);if(o[e]===ze){let{type:r}=a;y(),a.data=r;return}b=T|0,O=c-d|0;let s=f(t),n=as;Y(f(ze),s,n);break}}},tf=(c,o,e,l)=>{switch(u){case rn:{let t=Object.seal({type:Mt,unsafe:null,smart:null,value:null}),s=o.subarray(e,e+l|0);Z(s,zt)&&(t.unsafe=!0),Z(s,Hs)&&(t.smart=!0),a.value=t,u=Ai;break}case Ai:{if(o[e]===pe){u=Yu;return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=ot;Y(f(pe),s,n);break}case Yu:{let{stack:t,procedure:s}=a,n=o.subarray(e,e+l|0),r=f(n),i=t.get(r);i&&i.moved&&(b=T|0,O=c-d|0,re(`Moved variable used as value. Variable '${r}' was used while having been moved before.`)),u=di,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case di:{if(o[e]===le){let{value:r}=a;y(),a.value.value=Ve(r),y();return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=ot;Y(f(le),s,n);break}case wu:{let t=Object.seal({type:It,link:null});a.value=t,u=Ii;break}case Ii:{if(o[e]===pe){u=gu;return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=ot;Y(f(pe),s,n);break}case gu:{let{stack:t,procedure:s}=a,n=o.subarray(e,e+l|0),r=f(n),i=t.get(r);i&&i.moved&&(b=T|0,O=c-d|0,re(`Moved variable used as value. Variable '${r}' was used while having been moved before.`)),u=Ni,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Ni:{if(o[e]===le){let{value:r}=a;y(),a.value.link=Ve(r),y();return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=We;Y(f(le),s,n);break}case Zu:{let t=Object.seal({type:Dt,trail:[]});a.value=t,u=wo;break}case wo:{if(o[e]===st){u=qu;return}u=go,_=!0;break}case qu:{let t=o.subarray(e,e+l|0),s=f(t);a.value.trail.push(s),u=Qu;break}case Qu:{if(o[e]===st){u=wo,_=!0;return}u=go,_=!0;break}case go:{u=Et,_=!0;break}case $u:{let t=o.subarray(e,e+l|0),s=f(t),n=S.find(N=>N.name===s);if(!n){b=T|0,O=c-d|0,vs(s);return}let{description:r}=n,{members:i}=r,E=i.some(N=>N.name===\"constructor\"&&N.type===lt),m=Object.seal({type:Ie,explicitConstructor:E,name:s,literal:[],path:n.path});a.value=m,u=li;break}case li:{let t=o[e];if(t===pe){u=Bo,_=!0;return}if(t===$e){u=fi;return}break}case fi:{h(),a=[],u=Ei,_=!0;break}case Ei:{u=_i,h(),a={data:null},h(),U=mt,u=ct,_=!0;break}case _i:{let t=o[e],{data:s}=a;if(y(),a.push(s),t===Be){u=fn;return}if(t===ze){let n=a;y();let{value:r}=a,{name:i}=r,E=S.find(m=>m.type===Me&&m.name===i);if(E){if(!(E.description.generics.length===n.length)){b=T|0,O=c-d|0,re(`Generic procedure '${i}' was provided with fewer or more than expect number of types. Expected: ${genericProcedure.description.generics.length}. Got: ${n.length}`);return}let N=B(E.name,n);if(!S.some(R=>R.name===N)){let R=V(E,n);R.name=N,R.description.generics=[],S.push(R),P(R)}r.name=N}u=Bo;break}}case Bo:{let{value:t}=a,{explicitConstructor:s,...n}=t;if(t=Object.seal(n),o[e]===pe){if(s){u=Si;return}u=Do;return}b=T|0,O=c-d|0;let i=o.subarray(e,e+l|0),E=f(i),m=ot;Y(f(pe),E,m);break}case Do:{if(o[e]===ee)return;if(o[e]===Be){u=Mo;return}u=Mo,_=!0;break}case Mo:{if(o[e]===ee)return;let t=o.subarray(e,e+l|0),s=f(t),{stack:n,procedure:r}=a;h();let i=Object.seal({name:s,value:null});a={procedure:r,stack:n,prop:i},u=Ku;break}case Ku:{let{stack:t,procedure:s}=a;if(o[e]===et){u=Hu,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne;return}b=T|0,O=c-d|0;let r=o.subarray(e,e+l|0),i=f(r),E=As;Y(f(et),i,E);break}case Hu:{let{value:t}=a;y();let{prop:s}=a;s.value=Ve(t),y();let n=new Set(Fe,tt,Me);if(t.type===Ie&&!n.has(t.name)&&t.path===me){let{description:i}=S.find(m=>m.name===a.value.name),E=i.members.find(m=>m.name===s.name);s.value={...s.value,name:E.data.name}}if(a.value.literal.push(s),o[e]===Be){u=Do;return}_=!0,u=zu;break}case zu:{if(o[e]===ee){u=Fo;return}_=!0,u=Fo;break}case Fo:{let t=o[e];if(b=T|0,O=c-d|0,t===le){let j=function($,ie){let Ae=new Set($.map(se=>se.name));for(let se of ie)if(!Ae.has(se.name))return se.name;return null},i=$=>{let ie=new Set;for(let Ae of $){if(ie.has(Ae.name))return Ae.name;ie.add(Ae.name)}return!1},{value:E}=a,{literal:m}=E,N=S.find($=>$.name===E.name&&$.type===Me),R=i(m);if(R){re(`Propery ${R} of ${N.name} was initialized multiple times during object declaration. Please remove unnecessary value.`);return}let F=N.description.members.filter($=>$.type!==lt),w=N.description.members.filter($=>$.type!==lt&&$.value===void 0),H=j(m,w);if(H){re(`Property '${H}' of '${N.name}' is missing in object initialization whilst not having a default value in definition. Please give a value in initialization or provide a default value in type definition`);return}for(let $ of m){let ie=ue($.value),Ae=m.indexOf($),se=F.find(x=>x.name===$.name);se||re(`Invalid member name. Name ${$.name} does not exist on object ${N.name}`),ie.data.type!==Ie&&ie.data.name!==se.data.name&&re(`Type mismatch in input for Object ${N.name}. At index ${Ae}, expected ${se.data.name} but received ${ie.data.name}.`)}y();return}let s=o.subarray(e,e+l|0),n=f(s),r=We;Y(f(le),n,r);break}case Si:{let i=function(m){console.log(m);let N=m.data.name;if(N===Yn)return{type:Mt,value:i({data:m.data.details})};if(N===ws)return{type:ws,layout:f(Kn),value:i({data:m.data.details})};let R=S.find(F=>F.name===N);if(R.type===Me){let F=[],{members:w}=R.description;console.log(r,w);for(let j of w)if(j.data){let H=`${j.data.path}.${j.data.name}`;if(r.has(H))console.log(\"aslreadyh exisistng \\u{1F923}\\u{1F979}\\u{1F972}\\u{1F480}\"),F.push({name:j.name,value:r.get(H)});else{let $=i(j);F.push({name:j.name,value:$}),r.set(H,$)}}return{type:Ie,name:N,literal:F,path:m.data.path}}else{if(m.data.type===Fe)return{type:Ie,literal:[],name:N,layout:Fe,path:m.data.path};if(m.data.type===tt){let F=parseInt(m.data.length,10);return{type:Ie,literal:Array(F).fill(it),name:N,path:m.data.path}}else return{type:Ie,literal:Hp,name:N,path:m.data.path}}},{value:t}=a,{literal:s,name:n}=t,r=new Map,E=S.find(m=>m.name===n);if(E){let{description:m}=E,{members:N}=m;for(let se of N)se.data&&s.push({name:se.name,value:i(se)});y(),y();let{stack:R,procedure:F,statements:w,declarationValue:j,inferenceValue:H}=a,$=j?.target.name;if(!$){$=\"literalObjectConstructor\";let se=ue(t),{literal:x,...Q}=se.data,{locals:te}=F.description;te.push({name:$,data:Q}),R.set($,Q)}H&&(H.data={type:Ce,name:n,path:E.path},H.mutable&&(H.data.mutable=H.mutable),$&&a.stack.set($,H.data)),j&&(j.source=t,w.push(j)),h();let ie=Object.seal({type:$t,name:[$,gs],path:E.path,inputs:[]}),Ae=Object.seal({type:Ha,expression:ie});a={stack:R,procedure:F,drop:Ae,value:ie},u=Wo,U=ge,_=!0;return}break}case Wo:{let{stack:t,procedure:s}=a,n=o[e];if(n===ee)return;if(n===le){u=Jo,_=!0;return}u=hi,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case hi:{let{value:t}=a;y();let{value:s,stack:n,procedure:r}=a,{inputs:i}=s;i.push(Ve(t)),u=xi,_=!0;break}case xi:{let t=o[e];if(t===ee)return;if(t===le){u=Jo,_=!0;return}if(t===Be){u=Wo;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=Er;Y(`${f(Be)} or ${f(le)}`,n,r);break}case Jo:{let{value:t,stack:s}=a,n=s.get(t?.name[0]);if(n){let r=S.find(N=>N.name===n.name),i=r.description.members.find(N=>N.name===gs),E=t.inputs.filter(N=>N.type===Ie);for(let N of E){let R=t.inputs.indexOf(N);R>=0&&t.inputs[R]&&(t.inputs[R]={...t.inputs[R],name:i.description.inputs[R]?.data?.name||N.name,path:i.description.inputs[R]?.data?.path||N.path})}let m=t.inputs.map(N=>ue(N))||[];if(i.description.inputs.length!==m.length){b=T|0,O=c-d|0,re(`Mismatching number of parameters passed to constructor of object '${r.name}'. Expected: ${i.description.inputs.length}, Got: ${m.length}`);return}for(let N of i.description.inputs){let R=i.description.inputs.indexOf(N);if(N.data.name!==m[R].data.name){b=T|0,O=c-d|0,re(`Input type mismatch on index '${R+1}'. '${r.name}' expected ${N.data.name}, but was provided with a rather ${m[R].data.name}`);return}}}u=Pi;break}case Pi:{if(o[e]===ee){let{drop:N}=a;y();let{statements:R}=a;R||y(),R&&R.push(N),y();return}let{value:s,stack:n,procedure:r}=a,i=y();if(u===Zo){h(),a={stack:n,procedure:r,value:s},_=!0;return}g.push(i);let{drop:E}=a;y();let{statements:m}=a;m||y(),m&&m.push(E),y(),f(ee);return}case yo:{let{stack:t}=a,s=o[e],n=o.subarray(e,e+l|0),r=f(n);if(t&&t.has(r)&&t.get(r)?.type&&!Vt){let F=t.get(r);if(F&&(F.moved&&(b=T|0,O=c-d|0,re(`Moved variable used as value. Variable '${r}' was used while having been moved before.`)),F.freed)){b=T|0,O=c-d|0,re(`Attempted to use '${r}', which has been freed. Ensure links are valid before use.`);return}let w=Object.freeze({type:xe,name:r});a.value=w,u=Et;return}let i=F=>{let w=g[F];if(w.item.target){let j=w.item.target,H=m.item.stack.get(j.name);if(H)return H.name}else return w.item.value?.type===\"expression\"?i(F-1):null},E=g.length,m=g[E-2],N;if(m.item.target){let F=m.item.target;if(F.name||F.trail?.length===1){let w=m.item.stack.get(F.name||F.trail[0]);w&&(N=F.name?w.name:w.data?.name)}if(F.trail?.length>1){let w=JSON.parse(JSON.stringify(F.trail)),j=m.item.stack.get(F.trail[0]),H=S.find(ie=>ie.name===j.data.name&&ie.path===j.data.path),$=1;for(let ie=1;ie<w.length;ie++)j=H.description.members.find(Ae=>Ae.name===w[ie]),ie<w.length-1&&(H=S.find(Ae=>Ae.name===j.data.name&&Ae.path===j.data.path));N=j.data.name}}else m.item.value?.type===\"expression\"&&(N=i(E-4));if(Ds(c,o,e,l)&&!Vt){let F=r.replaceAll(\"_\",\"\"),w=Rt(F),j=Object.freeze({type:Ie,literal:F,name:N||w,path:me});if(!w){b=T|0,O=c-d|0;let H=o.subarray(e,e+l|0),$=f(H);Y(\"value\",$,Is)}Ue(j.name),a.value=j,u=Et;return}if(bn(r)&&!Vt){let F=Object.freeze({type:Ie,literal:r,name:Kt,path:me});a.value=F,Ue(F.name),u=Et;return}if(Wn.includes(s)){u=Yi,_=!0;return}let R=f(n);if(Ip.includes(s)){if(Vt)if(Xn.includes(s)){if(Vt=!1,u=Et,a.value.literal.length>1){b=T|0,O=c-d|0,re(\"Type Mismatch: Use single quotes for a Char (one character) in Flogram. For Strings, use double quotes or ensure there's only one character within single quotes.\");return}}else b=T|0,O=c-d|0,Y(`${f(Xn[0])} or ${f(Xn[1])}`,R,[]);else!Vt&&zn.includes(s)?Vt=!0:(b=T|0,O=c-d|0,Y(`${f(zn[0])} or ${f(zn[1])}`,R,[]));return}if(Vt){let F=Object.freeze({type:Ie,literal:r,name:Os,path:me});Ue(F.name),a.value=F;return}if(o[e]===He){u=jo,_=!0;return}b=T|0,O=c-d|0,vs(r),y();break}case Yi:{let t=o[e];if(Wn.includes(t)){u=Qo;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(ls),n,r);break}case Qo:{let t=o.subarray(e,e+l|0),s=f(t);if(l===0)return;if(u=gi,o[e]===$e){_=!0;return}let n=Object.seal({type:Ie,literal:s,name:tt,path:me});Jn.includes(o[e])&&(n.literal=\"\",_=!0),a.value&&a.value.type===es?a.value.values.push(n):a.value=n,Ue(n.name),Ue(Je);break}case gi:{let{stack:t,procedure:s}=a;if(Jn.includes(o[e])){if(a.value.type===es&&Jn.includes(o[e+1])){u=wi;return}y();return}else if(o[e]===$e){if(e>0&&o[e-1]===Ap){u=xo,h();let m=Object.freeze({name:tt,literal:\"{\",type:Ie,path:me});a=Object.seal({procedure:s,stack:t,value:m,omitLast:!0}),_=!0;return}u=xo,h(),a=Object.seal({procedure:s,stack:t,value:null}),h(),U=Ne,u=Se;return}console.log(\"what did we find here??!!!\"),b=T|0,O=c-d|0;let n=o.subarray(e,e+l|0),r=f(n),i=ot;if(Z(n,Ht)){b-=1;let E=f(ee);Y(f(ls),E,i);return}Y(`'${f(ze)}' or '${f(ls)}'`,r,i);break}case xo:{let t=o.subarray(e,e+l|0),s=f(t),{value:n,omitLast:r}=a;if(y(),!a.value||a.value.type!==es){let E=Object.seal({type:es,values:[]});a.value&&E.values.push(a.value),a.value=E}let i=a.value.values.length;if(r&&i>0&&a.value.values[i-1].type===Ie){let E=a.value.values[i-1],m=E.literal,N={...E,literal:m.slice(0,-1)};a.value.values.pop(),a.value.values.push(N)}a.value.values.push(n),u=Qo;break}case wi:{y();break}case qo:{h(),u=Li,a={data:null},h(),U=mt,u=ct,_=!0;break}case Li:{let t=o[e],{data:s}=a;y();let{stack:n,procedure:r}=a,i=Object.seal({type:Ie,literal:[],name:s.name,quantity:{size:null,capacity:null},layout:s.type,path:s.path});if(h(),a={stack:n,procedure:r,value:i},t===pe){u=Ri;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=ot;Y(f(pe),m,N);break}case Ri:{let t=o.subarray(e,e+l|0);if(Z(Qa,t)){u=ki;return}b=T|0,O=c-d|0;let s=f(t),n=eo;Y(f(Qa),s,n);break}case ki:{let t=o.subarray(e,e+l|0);if(Z(Gs,t)){u=Ci;return}b=T|0,O=c-d|0;let s=f(t),n=As;Y(f(Gs),s,n);break}case Ci:{let{procedure:t,stack:s}=a;if(rt(c,o,e,l)){let n=o.subarray(e,e+l|0),r=f(n);b=T|0,O=c-d|0,qe(r);return}u=yi,h(),a=Object.seal({procedure:t,stack:s,value:null}),h(),U=Ne,u=Se,_=!0;break}case yi:{let{value:t}=a;y(),a.value.length={capacity:t,size:t};let s=o[e];if(s===Be){let{stack:E,procedure:m}=a,N=[];h(),a={stack:E,procedure:m,value:N},u=Ui;return}if(s===le){let{value:E}=a;y(),a.value=E,u=Et;return}b=T|0,O=c-d|0;let n=o.subarray(e,e+t|0),r=f(n),i=We;Y(`${f(Be)} or ${f(le)}`,r,i);break}case Ui:{if(o[e]===He){u=Bi;return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=xn;Y(f(He),s,n);break}case Bi:{if(u=vi,o[e]===Ft)return;_=!0;break}case vi:{let t=o.subarray(e,e+l|0);if(o[e]===le){let{value:s}=a;y();let{value:n}=a;y(),n.literal=s,a.value=n,y();return}h(),u=En,_=!0;break}case jo:{if(o[e]===He){a.value=Object.seal({quantity:{size:null,capacity:null},data:[]}),u=Et,h(),u=En;return}break}case En:{let{stack:t,procedure:s}=a;if(o[e]===ee)return;if(u=Zo,h(),a={stack:t,procedure:s,value:null},o[e]===Ft){_=!0;break}h(),u=Se,U=Ne,_=!0;break}case Zo:{let t=o[e],{value:s}=a;if(y(),s!==null&&a.value.data.push(s),t===Be){u=En;return}if(t===ee){let{procedure:n,stack:r}=a;h(),a={procedure:n,stack:r,value:null},h(),u=$i;return}if(t===Ft){if(o[e+1]===pe){a.value.quantity.size=Object.seal({type:Ie,name:Je,literal:`${a.value.data.length}`,path:me}),u=zi;return}a.value.quantity.size=Object.seal({type:Ie,name:Je,literal:`${a.value.data.length}`,path:me}),a.value.quantity.capacity=Object.seal({type:Ie,name:Je,literal:`${Math.max(a.value.data.length*2,sp)}`,path:me}),u=ea,_=!0;return}break}case zi:{if(o[e]!==pe){b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=We;Y(`${f(le)}`,s,n);return}u=Xi;break}case Xi:{let t=o.subarray(e,e+l|0);if(!Z(t,ur)){b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=We;Y(`${f(ur)}`,n,r);return}u=Wi;break}case Wi:{let{stack:t,procedure:s}=a;if(o[e]!==et){b=T|0,O=c-d|0;let r=o.subarray(e,e+l|0),i=f(r);Y(et,i,[]);return}u=Ji,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne;break}case Ji:{if(o[e]!==le){b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=We;Y(`${f(le)}`,n,r);return}let{value:t}=a;y(),a.value.quantity.capacity=t,u=ea,_=!0;break}case ea:{let t=g.length,s=g[t-3],n=s.item.declarationValue?.target,r=s.item.stack.get(n?.name);if(s.situationSection!==qo){let i=!1,E;if(!r){if(a.value?.length>=1||a.value?.data?.length>=1)if(E=ue(a.value[0]||a.value?.data[0]),E){(E.data.layout===Fe||E.data.type===Fe||Array.isArray(E.data.literal))&&(i=!0);for(let N=1;N<a.value.length;N++){let R=ue(a.value[N]);if((R.data.layout===Fe||R.data.type===Fe||Array.isArray(R.data.literal))&&(i=!0),R.data.name!==E.data.name||R.data.path!==E.data.path){b=T|0,O=c-d|0,re(`Type mismatch in array initialization. Expected all items to be of type ${E.data.name} from ${E.data.path}, but found type ${R.data.name} from ${R.data.path} at position ${N}. Ensure all items in the array have the same type.`);return}}}else{b=T|0,O=c-d|0;let N=o.subarray(e,e+l|0),R=f(N);Y(\"Inferred Type\",R,Is);return}else E={data:{name:\"FP32\",path:\"Flogram\"}};Ue(E.data.name)}if(a.value.quantity.capacity.type===Ie&&a.value.data.length>parseInt(a.value.quantity.capacity.literal,10)){b=T|0,O=c-d|0,re(`ValueError: Too much data for an array. Array is defined to have a maximum of ${r.length} but value assigned has ${a.value.length}. Consider increasing size of the array or reducing the number of elements.`);return}let m=Object.freeze({type:Ie,name:r?.name||E.data.name,path:r?.path||E.data.path,literal:a.value.data,quantity:a.value.quantity,layout:Fe,contains:i?Fe:null});Ue(Je),a.value=m}y();return}case $i:{o[e]!==ee&&(y(),_=!0);break}case Et:{let t=o[e],s=o.subarray(e,e+l|0);if(Mn(s)){u=Ki,_=!0;return}if(t===st){let{procedure:n,stack:r,value:i}=a,E=[],m=Object.freeze({type:dt,value:i,trail:E});a.value=m,h(),a=Object.seal({stack:r,trail:E,value:i,procedure:n}),u=Uo;return}else if(t===He){let{value:n}=a,r=Object.seal({type:Ys,array:n,index:null});ue(n)?.data.name===tt&&Ue(Os),a.value=r,_=!0,u=Yo;return}else if(t===pe&&a.value.type===Dt){let n=z(0);if(n){let r=[a.value.type,...a.value.trail],i=q(n,a.value.trail);if(Te){a.value=Object.seal({type:$t,name:r,path:i.path,inputs:[]}),u=un,_=!0;return}}}y(),_=!0;break}case Vu:{if(o[e]!==st){let s=o.subarray(e,e+l|0),n=f(s);y(),_=!0;return}u=Uo;break}case Uo:{let{stack:t,value:s,trail:n}=a,r=o.subarray(e,e+l|0),i=f(r),E,m,N=!1,R=()=>{n.push(i),u=Vu};try{let j=ue(s);j&&(E=j.data)}catch(j){console.error(j)}let F=S.find(j=>j.name===E.name);if(F.type===Bt&&F.description.labels.find(H=>H.props.find($=>$.name===i))){R();return}let w=F?.description?.members?.find(j=>j.data&&S.find(H=>H.type===Me&&H.name===j.data.name&&H.path===j.data.path));if((s.type===xe||s.type===It||s.type===Mt||M(s))&&(!E||w)){let j=ye(s);if(n.length===0)E=t.get(j);else{let H=n.length-1,$=t.get(j),ie=S.find(te=>te.name===$.name),{description:Ae}=ie,{members:se}=Ae,x=se.find(te=>te.name===n[H]),{data:Q}=x;if(E=Q,Q.freed){b=T|0,O=c-d|0,re(`Attempted to use '${n.join(\".\")}', which has been freed. Ensure links are valid before use.`);return}}}if(E){let{name:j,path:H}=E,$=`${H}.${j}`,ie=p.get($);ie.type===Me&&(m=ie)}if(m){let{description:j}=m,{members:H}=j;for(let $ of H)if($.name===i){N=!0;break}if(!N){b=T|0,O=c-d|0,Ot(i,s.name);return}}if(s.value===ft||s.link===ft){if(!t.get(i)){b=T|0,O=c-d|0,Ot(i,`${ft}(current object in definition)`);return}N=!0}if(!N){b=T|0,O=c-d|0,Ot(i,s.name);return}R();break}case Xu:{let{stack:t}=a,s=o.subarray(e,e+l|0),n=f(s);if(t.has(n)){let r=Object.seal({type:Ys,array:{type:xe,name:n},index:null});a.value=r,ue(r.array)?.data.name===tt&&Ue(Os)}u=Yo;break}case Yo:{if(o[e]===He){u=Wu;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=xn;Y(f(He),n,r);break}case Wu:{let{stack:t,procedure:s}=a;u=Ju,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Ju:{if(o[e]===Ft){let{value:i}=a;y();let E=ue(i);if(E.data.mutable&&i.type!==dt?a.value.index=Object.seal({type:It,link:i}):a.value.index=i,!E||![Je,\"U32\",\"I16\",\"U16\",\"U8\",\"I8\"].includes(E.data.name)){b=T|0,O=c-d|0,re(\"Invalid index. Array index must be a valid I32 variable\");return}u=Et;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=mr;Y(f(Ft),n,r);break}case cn:{let{stack:t}=a,s=o.subarray(e,e+l|0),n=f(s),r=D.find(E=>E.type===lt&&E.name===n),i=Object.seal({type:$t,name:n,path:r?.path||me,inputs:[]});if(a.value=i,t.has(n)){a.value.name=[n],u=Vo;return}else if(n===ft){a.value.name=[Dt],u=Vo;return}u=Xo;break}case Vo:{let t=o.subarray(e,e+l|0),s=f(t),n=o[e];if(n===st)return;if(n===pe){if(a.value.name[0]===Dt){let r=z(0);a.value.path=r.path+\".\"+r.name}u=Xo,_=!0;return}if(rt(c,o,e,l)){b=T|0,O=c-d|0,qe(s);return}a.value.name.push(s);break}case Xo:{let t=o[e];if(t===pe){u=un,_=!0;return}if(t===$e){u=ui;return}break}case un:{if(o[e]===pe){u=ln;return}break}case ui:{h(),a=[],u=fn,_=!0;break}case fn:{u=ii,h(),a={data:null},h(),U=mt,u=ct,_=!0;break}case ii:{let t=o[e],{data:s}=a;if(y(),a.push(s),t===Be){u=fn;return}if(t===ze){let n=a;y();let{value:r}=a,{name:i}=r,E=D.find(m=>m.type===lt&&m.name===i);if(E){if(!(E.description.generics.length===n.length)){b=T|0,O=c-d|0,re(`Generic procedure '${i}' was provided with fewer or more than expect number of types. Expected: ${E.description.generics.length}. Got: ${n.length}`);return}let N=B(E.name,n);if(!D.some(R=>R.name===N)){let R=V(E,n);R.name=N,R.description.generics=[],Re(R)}r.name=N}u=un;break}}case ln:{let t=o[e],s=o.subarray(e,e+l|0),{procedure:n,stack:r}=a;if(t===ee)return;if(Z(s,Xt)){h(),a=Object.seal({procedure:n,stack:r,mutable:!0});return}if(t===le){let i=a.value?.inputs?.map(H=>ue(H))||[],{value:E}=a,{name:m}=E;if(i.indexOf(void 0)!=-1){b=T|0,O=c-d|0,re(`Unkown/Invalid value type given as value to function '${m}' at index ${i.indexOf(void 0)}`);return}!i.find(H=>H?.data.path!==me)&&Gt[m]&&(E.path=me);let[R,...F]=i,w=i.find(H=>H?.data.type!=Ie)||R,j=Gt[m];if(j&&E.path===me){let H=j.find($=>$.description&&Array.isArray($.description.inputs)?$.description.inputs.length!==i.length?!1:$.description.inputs.every((ie,Ae)=>ie.data.name===i[Ae].data.name):!1);if(j){for(let $=0;$<i.length;$++)if(i[$].data.name!=w.data.name){if(i[$].data.type===Ie&&Ms(w.data.name,i[$].data.name)){expression.inputs[$]=Object.freeze({...expression.inputs[$],name:w.data.name}),i[$].data.name=w.data.name;continue}b=T|0,O=c-d|0,In(i.map(ie=>ie.data?.name)?.join(\", \"));return}}if(H)Re(H),_t.set(m,H);else if(i.length>=1){if(i.some($=>$.data.name!==R.data.name)){b=T|0,O=c-d|0,In(i.map($=>$.data?.name)?.join(\", \"));return}if(i[0]?.data.type===Ut){let $=j.find(Ae=>Ae.description.inputs.length===i.length&&i.length>0?Ae.description.inputs[0].data.name===mn:!0),ie=JSON.parse(JSON.stringify($).replace(new RegExp(mn,\"g\"),i[0].data.name));Re(ie),_t.set(m,ie)}else if(!ht.includes(R.data.name)||F.some($=>!ht.includes($.data.name))){let $=S.find(Ae=>Ae.name===R.data.name),ie=F.map(Ae=>S.find(se=>se.name===Ae.data.name));if($&&ie.every(Boolean)&&jt($,ie,j,m)){let Ae=S.find(x=>x.name===i[0].data.name&&x.path===i[0].data.path&&x.type===Me),se=x=>{let Q=S.find(oe=>oe.name===x.data.name&&oe.path===x.data.path),{members:te}=Q.description;te.forEach(oe=>{ht.includes(oe.data.name)?Re(j.find(Tt=>Tt.description.inputs[0].data.name===oe.data.name)):se(oe)})};if(Ae&&[\"==\",\"!=\"].includes(m)){let{members:x}=Ae.description;x.forEach(Q=>{ht.includes(Q.data.name)?Re(j.find(te=>te.description.inputs[0].data.name===Q.data.name)):se(Q)})}else if(!(i[0].data.name===tt&&[\"==\",\"!=\",\">\",\">=\",\"<\",\"<=\"].includes(m))){b=T|0,O=c-d|0,Ct(`${i.map(x=>x.data.name)?.join(\", \")} for function ${m}`);return}}}else{b=T|0,O=c-d|0,Ct(`${i.map($=>$.data.name)?.join(\", \")} for function ${m}`);return}}else{b=T|0,O=c-d|0,Ct(`${i.map($=>$.data.name)?.join(\", \")} for function ${m}`);return}}else if(m===J_||m===Vs){if(m===Vs&&i.length!==0){b=T|0,O=c-d|0,pa(0,i.length,m);return}}else if(typeof m===Me&&m[0]===Dt){let H=z(0);if(!H||!q(H,m.slice(1))){b=T|0,O=c-d|0,dn(m);return}}else{let H,$=D.find(se=>se.type===lt&&se.name===m);if(typeof m===Me&&a.stack.has(m[0])){let se=m[m.length-2]||m[0],x=a.stack.get(se);if(x){let Q=S.find(te=>te.type===Me&&te.name===x.name);Q&&(a.value.path=Q.path,H=Q.description.members.find(te=>te.type===lt&&te.name===m[m.length-1]))}}let ie=a.procedure.name===m?a.procedure:null,Ae=H||$||ie;if(Ae){let{description:se}=Ae,{inputs:x}=se,{value:Q}=a,{inputs:te}=Q;if(x.length!==te.length){b=T|0,O=c-d|0,pa(x.length,i.length,m);return}for(let oe=0;oe<x.length;oe++){let Tt=ue(te[oe]);if(Tt){if(x[oe].data.name!==Tt.data.name){b=T|0,O=c-d|0,re(`The procedure '${typeof m==\"object\"?m.join(\".\"):m}' received an input of incorrect type at position ${oe+1}. Expected: '${x[oe].data.name}', but received: '${Tt.data.name}'.`);return}if(x[oe].data.mutable&&!Tt.data.mutable&&!te[oe].mutable){b=T|0,O=c-d|0,re(`The procedure '${typeof m==\"object\"?m.join(\".\"):m}' received an immutable input at position ${oe+1} while it expects a mutable input. Expected: mutable '${x[oe].data.name}', received: immutable '${Tt.data.name}'.`);return}x[oe].data.mutable&&Tt.data.mutable}else{b=T|0,O=c-d|0,Ct(te[oe]);return}}}else{b=T|0,O=c-d|0,dn(m);return}}u=Et;return}if(rt(c,o,e,l)&&o[e]!=He&&o[e]!=pe){let i=o.subarray(e,e+l|0),E=f(i);b=T|0,O=c-d|0,qe(E);return}u=Gu,h(),a=Object.seal({procedure:n,stack:r,value:null}),h(),U=Ne,u=Se,_=!0;break}case Gu:{let{value:t}=a,s=!1;y(),a.mutable&&(s=a.mutable,y());let{value:n}=a,{inputs:r}=n,i=Object.seal({...t,mutable:s});n.path!==me||i.type===dt?r.push(i):r.push(Ve(i));let E=o[e];if(E===Be){u=ln;return}if(E===le){u=ln,_=!0;return}b=T|0,O=c-d|0;let m=o.subarray(e,e+l|0),N=f(m),R=We;Y(`${f(Be)} or ${f(le)}`,N,R);break}case Go:{let t=o.subarray(e,e+l|0),s=f(t),n=S.find(i=>i.type===Bt&&i.name===s);if(n){let i=Object.seal({type:Ie,literal:null,name:n.name,path:n.path,props:[]});a.value=i,u=xu;return}let r=S.find(i=>i.type===Bt&&i.description.labels.find(E=>E.name===s));if(r){let i=Object.seal({type:Ie,literal:s,name:r.name,path:r.path,props:[]});a.value=i,u=$o,_=!0;return}b=T|0,O=c-d|0,Ot(s);break}case xu:{if(o[e]===st){u=$o;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=br;Y(f(st),n,r);break}case $o:{let t=o.subarray(e,e+l|0),s=f(t),n=S.find(r=>r.type===Bt&&r.name===a.value.name&&r.description.labels.find(i=>i.name===s));if(n){if(a.value.literal=s,n.description.labels.find(i=>i.name===s).props.length>0){u=Zi;return}y();return}b=T|0,O=c-d|0,Ot(s);break}case Zi:{let t=o[e];if(t===pe){u=ta;return}if(t===ce){y(),_=!0;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case ta:{let{stack:t,procedure:s}=a;u=qi,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case qi:{let{value:t}=a;y(),a.value.props.push(t);let s=o[e];if(s===Be){u=ta;return}if(s===le){u=Qi,_=!0;return}}case Qi:{if(o[e]===le){y();return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=We;Y(f(le),n,r)}case ei:{let t=Object.seal({type:ws,layout:null,data:null,value:null});a.value=t,u=ti;break}case ti:{if(o[e]===$e){u=si;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ds;Y(f($e),n,r);break}case si:{let t=o.subarray(e,e+l|0),s=f(t);if(rt(c,o,e,l)){b=T|0,O=c-d|0,qe(s);return}if(Z(er,t)){u=Ho,h(),a={...a,data:null},h(),U=mt,u=ct,_=!0;return}if(Z(t,zt)||Z(t,ns)){u=Ho,h(),a={...a,data:null},h(),U=rs,u=_n,_=!0;return}if(Z(t,$n)){b=T|0,O=c-d|0;let r=o.subarray(e,e+l|0),i=f(r);Y(\"MAYBE Data\",i,eo);return}let n=Ue(s);n&&(a.value.data=n),u=Ko;break}case Ho:{let{data:t}=a;y(),a.value.data=t,_=!0,u=Ko;break}case Ko:{if(o[e]===ze){u=ni;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=as;Y(f(ze),n,r);break}case ni:{if(o[e]===st){u=oi;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=br;Y(f(st),n,r);break}case oi:{let t=o.subarray(e,e+l|0),s=f(t);if(a.value.layout=s,Z(t,Kn)){u=zo;return}if(Z(t,or)){u=ai;return}b=T|0,O=c-d|0;let n=f(t),r=eo;Y(`${f(or)} or ${f(Kn)}`,n,r);break}case ai:{if(o[e]===pe){u=ri;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case ri:{let{procedure:t,stack:s}=a;if(rt(c,o,e,l)){let n=o.subarray(e,e+l|0),r=f(n);b=T|0,O=c-d|0,qe(r);return}u=ci,h(),a=Object.seal({procedure:t,stack:s,value:null}),h(),U=Ne,u=Se,_=!0;break}case ci:{let{value:t}=a;if(y(),a.value.value=Ve(t),o[e]===le){u=zo;return}b=T|0,O=c-d|0;let n=o.subarray(e,e+l|0),r=f(n),i=We;Y(f(le),r,i);break}case zo:{y(),_=!0;break}case pi:{let t=Object.seal({type:gn,value:null});a.value=t,u=mi;break}case mi:{if(o[e]===pe){u=bi;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case bi:{let{procedure:t,stack:s}=a;if(rt(c,o,e,l)){let n=o.subarray(e,e+l|0),r=f(n);b=T|0,O=c-d|0,qe(r);return}u=Oi,h(),a=Object.seal({procedure:t,stack:s,value:null}),h(),U=Ne,u=Se,_=!0;break}case Oi:{let{stack:t,value:s}=a;y();let n;if(s.type===xe)n=s.name;else if(s.type===It)n=s.link;else if(s.type===Mt)n=s.value;else{b=T|0,O=c-d|0,re(\"Non-movable type passed to move procedure. Please check types that can be moved and make sure your parameter's type is one of them.\");return}let r=t.get(n);if(r&&t.set(n,{...r,moved:!0}),a.value.value=Ve(s),o[e]===le){u=Ti;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=We;Y(f(le),m,N);break}case Ti:{y(),_=!0;break}case Di:{let t=Object.seal({type:Vn,value:null});a.value=t,Ue(Je),u=Mi;break}case Mi:{if(o[e]===pe){u=Fi;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case Fi:{let{procedure:t,stack:s}=a;if(rt(c,o,e,l)){let n=o.subarray(e,e+l|0),r=f(n);b=T|0,O=c-d|0,qe(r);return}u=ji,h(),a=Object.seal({procedure:t,stack:s,value:null}),h(),U=Ne,u=Se,_=!0;break}case ji:{let{stack:t,value:s}=a;y();let n=ue(s);if(n.data.name===tt||n.data.name===Fe||n.data.layout===tt||n.data.layout===Fe||n.data.type===tt||n.data.type===Fe||(b=T|0,O=c-d|0,re(`Size function incompatible parameter type error: Provided type '${n.data.name}' cannot be used here as it's neither a string nor an array.`)),a.value.value=s,o[e]===le){u=Et;return}b=T|0,O=c-d|0;let i=o.subarray(e,e+l|0),E=f(i),m=We;Y(f(le),E,m);break}case $p:{y(),_=!0;break}case Ki:{let t=o.subarray(e,e+l|0),s=f(t),{value:n,stack:r,procedure:i}=a,E=Object.seal({type:$t,name:s,path:me,inputs:[Ve(n)]});a.value=E,u=Hi,h(),a={stack:r,procedure:i,value:null},h(),u=Se,U=Ne;break}case Hi:{let{value:t}=a;y();let{value:s}=a,{name:n}=s;s.inputs.push(Ve(t));let r=s.inputs.map(F=>ue(F))||[],[i,...E]=r,m=r.find(F=>F.data.type!=Ie)||i,N=Gt[n];if(N){for(let F=0;F<r.length;F++)if(r[F].data.name!=m.data.name){if(r[F].data.type===Ie&&Ms(m.data.name,r[F].data.name)){s.inputs[F]=Object.freeze({...s.inputs[F],name:m.data.name}),r[F].data.name=m.data.name;continue}b=T|0,O=c-d|0,In(r.map(w=>w.data?.name)?.join(\", \"));return}}let R=N.find(F=>F.description&&Array.isArray(F.description.inputs)?F.description.inputs.length!==r.length?!1:F.description.inputs.every((w,j)=>w.data.name===r[j].data.name):!1);if(R)Re(R),_t.set(n,R);else if(r.length>=1){if(r[0]?.data.type===Ut){let F=N.find(j=>j.description.inputs.length===r.length&&r.length>0?j.description.inputs[0].data.name===mn:!0),w=JSON.parse(JSON.stringify(F).replace(new RegExp(mn,\"g\"),r[0].data.name));Re(w),_t.set(n,w)}else if(!ht.includes(i.data.name)||E.some(F=>!ht.includes(F.data.name))){let F=S.find(j=>j.name===i.data.name),w=E.map(j=>S.find(H=>H.name===j.data.name));if(F&&w.every(Boolean)&&!jt(F,w,N,n)){let j=S.find(H=>H.name===r[0].data.name&&H.path===r[0].data.name&&H.type===Me);if(!(r[0].data.name===tt&&[\"==\",\"!=\",\">\",\">=\",\"<\",\"<=\"].includes(n))&&!(j&&[\"==\",\"!=\"].includes(n))){b=T|0,O=c-d|0,Ct(`${propTypes.join(\", \")} for function ${n}`);return}}}else if(!(r[0].data.name===tt&&[\"==\",\"!=\",\">\",\">=\",\"<\",\"<=\"].includes(n))){b=T|0,O=c-d|0,Ct(`${r.map(F=>F.data.name)?.join(\", \")} for function ${n}`);return}}else{b=T|0,O=c-d|0,Ct(`${r.map(F=>F.data.name)?.join(\", \")} for function ${n}`);return}u=Et,_=!0;break}case Vi:{if(o[e]!==pe){b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=Is;Y(f(),n,r);return}u=Gi,h(),u=Se,U=Ne;break}case Gi:{if(o[e]!==le){b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=Is;Y(f(le),n,r);return}u=Et;break}}},sf=(c,o,e,l)=>{switch(u){case rc:{let t=Object.seal({type:it,path:[]}),s=Object.seal({type:K_,source:t,alias:it});a=Object.seal({import:s,source:t}),u=cc;break}case cc:{let t=o[e],{source:s}=a;if(t===Tp&&o[e+1]===Hn){s.type=xe,u=uc,h(),a=[],h(),u=io;return}if(rt(c,o,e,l)){b=T|0,O=c-d|0,qe(name);return}s.type=H_,u=Gp,_=!0;break}case uc:{let t=o[e],s=a;y();let{source:n}=a;n.path.push(s.join(\"\")),t===Hn&&(h(),a=[],h(),u=io),t===ee&&(u=ic,_=!0);break}case io:{let t=o[e];if(t===Hn){y(),_=!0;return}if(t===ee){y(),_=!0;return}let s=o.subarray(e,e+l|0),n=f(s);a.push(n);return}case ic:{let t=s=>{let n=!0,r=null,i=null,E=wl(k);E.on(is,w=>{r=w}),E.on(we,w=>{i=w});let m=new Ge({tabSize:4});if(m.on(\"token\",(w,j,H,$)=>{E.feed(w,j,H,$)}),m.on(\"error\",()=>{n=!1}),m.feed(s),m.done(),m.close(),E.done(),!n||i){console.error(\"Tokenizer or Parser error occurred.\",i);return}if(!r){console.error(\"Invalid representation after parsing.\");return}let{exports:N,data:R}=r;for(let w of N){let j=r[w.path]?.find(H=>H.name===w.name);j&&(w.path===sa&&(S.push(j),P({name:j.name,path:j.path,type:Ce})),w.path===ll&&Re(j))}let F=R.filter(w=>w.type===z_);S.unshift(...F)};if(ne&&ne.length>0){let s=ne.find(n=>n.path===a.source.path.join(\"/\"));if(s){let n=fe(s.data);t(n)}else b=T|0,O=c-d|0,re(\"NO FILES WERE FOUND: \",a.source.path)}else b=T|0,O=c-d|0,re(\"NO FILES WERE FOUND: \",a.source.path);y();break}}},nf=(c,o)=>{switch(c){case is:{K.push(o);break}case we:{G.push(o);break}}},h=()=>{let c=Object.freeze({item:a,indentation:je,situationGeneral:U,situationSection:u});g.push(c)},y=()=>{let c=g.pop();return a=c.item,je=c.indentation,U=c.situationGeneral,u=c.situationSection,c},fs=(c,o,e,l)=>{if(J)return;let t=()=>{Pe=!0,d=c|0,T=T+1};Ke=c+l|0;let s=o[e];if(s!==Op){if(s===ee&&Pe){t();return}for(Pe=!1,_=!0;_;)switch(_=!1,U){case Ne:{Kl(c,o,e,l);break}case Or:{Hl(c,o,e,l);break}case Ns:{Xl(c,o,e,l);break}case Ss:{zl(c,o,e,l);break}case Tr:{Wl(c,o,e,l);break}case to:{Zl(c,o,e,l);break}case Ar:{ql(c,o,e,l);break}case dr:{Jl(c,o,e,l);break}case Ye:{Ql(c,o,e,l);break}case mt:{xl(c,o,e,l);break}case ge:{tf(c,o,e,l);break}case rs:{ef(c,o,e,l);break}case Ir:{sf(c,o,e,l);break}default:throw qn}s===ee&&(El.default.diff(a,Yt)&&t(),Yt=JSON.parse(JSON.stringify(a)))}};return Object.freeze({done:()=>{if(fs(Ke,ss,0,ss.length),Ke=Ke+ss.length|0,fs(Ke,Ht,0,Ht.length),Ke=Ke+Ht.length|0,fs(Ke,ss,0,ss.length),Ke=Ke+ss.length|0,de){C.emit(is,null);return}C.emit(is,ae)},feed:fs,on:nf})},zp=Object.freeze({create:wl,...Np,...Lp,...Vp}),Rm=zp;\n/*! Bundled license information:\n\neventemitter2/lib/eventemitter2.js:\n  (*!\n   * EventEmitter2\n   * https://github.com/hij1nx/EventEmitter2\n   *\n   * Copyright (c) 2013 hij1nx\n   * Licensed under the MIT license.\n   *)\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@munezero/floparser/SimpleParser/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@munezero/floparser/Tests/Shared/index.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@munezero/floparser/Tests/Shared/index.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SIMPLE_IMPORTS: () => (/* binding */ e)\n/* harmony export */ });\nvar e=Object.freeze({data:Object.freeze([Object.freeze({type:\"native\",name:\"Link\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"String\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"Char\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"Bool\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"FP32\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"FP64\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"U32\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"U64\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"I32\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"I64\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"U16\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"I16\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"I8\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"U8\",path:\"Flogram\"})])});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AbXVuZXplcm8vZmxvcGFyc2VyL1Rlc3RzL1NoYXJlZC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHFCQUFxQixtQ0FBbUMseUNBQXlDLGlCQUFpQiwyQ0FBMkMsaUJBQWlCLHlDQUF5QyxpQkFBaUIseUNBQXlDLGlCQUFpQix5Q0FBeUMsaUJBQWlCLHlDQUF5QyxpQkFBaUIsd0NBQXdDLGlCQUFpQix3Q0FBd0MsaUJBQWlCLHdDQUF3QyxpQkFBaUIsd0NBQXdDLGlCQUFpQix3Q0FBd0MsaUJBQWlCLHdDQUF3QyxpQkFBaUIsdUNBQXVDLGlCQUFpQix1Q0FBdUMsSUFBSSxFQUE4QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxKQVNPTlxcRGVza3RvcFxcTmV3IGZvbGRlclxcbm9kZV9tb2R1bGVzXFxAbXVuZXplcm9cXGZsb3BhcnNlclxcVGVzdHNcXFNoYXJlZFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBlPU9iamVjdC5mcmVlemUoe2RhdGE6T2JqZWN0LmZyZWV6ZShbT2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLG5hbWU6XCJMaW5rXCIscGF0aDpcIkZsb2dyYW1cIn0pLE9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixuYW1lOlwiU3RyaW5nXCIscGF0aDpcIkZsb2dyYW1cIn0pLE9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixuYW1lOlwiQ2hhclwiLHBhdGg6XCJGbG9ncmFtXCJ9KSxPYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsbmFtZTpcIkJvb2xcIixwYXRoOlwiRmxvZ3JhbVwifSksT2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLG5hbWU6XCJGUDMyXCIscGF0aDpcIkZsb2dyYW1cIn0pLE9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixuYW1lOlwiRlA2NFwiLHBhdGg6XCJGbG9ncmFtXCJ9KSxPYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsbmFtZTpcIlUzMlwiLHBhdGg6XCJGbG9ncmFtXCJ9KSxPYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsbmFtZTpcIlU2NFwiLHBhdGg6XCJGbG9ncmFtXCJ9KSxPYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsbmFtZTpcIkkzMlwiLHBhdGg6XCJGbG9ncmFtXCJ9KSxPYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsbmFtZTpcIkk2NFwiLHBhdGg6XCJGbG9ncmFtXCJ9KSxPYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsbmFtZTpcIlUxNlwiLHBhdGg6XCJGbG9ncmFtXCJ9KSxPYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsbmFtZTpcIkkxNlwiLHBhdGg6XCJGbG9ncmFtXCJ9KSxPYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsbmFtZTpcIkk4XCIscGF0aDpcIkZsb2dyYW1cIn0pLE9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixuYW1lOlwiVThcIixwYXRoOlwiRmxvZ3JhbVwifSldKX0pO2V4cG9ydHtlIGFzIFNJTVBMRV9JTVBPUlRTfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@munezero/floparser/Tests/Shared/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@munezero/floparser/Tokenizer/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@munezero/floparser/Tokenizer/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gr)\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nvar ne=Object.create;var ct=Object.defineProperty;var re=Object.getOwnPropertyDescriptor;var ie=Object.getOwnPropertyNames;var oe=Object.getPrototypeOf,ce=Object.prototype.hasOwnProperty;var le=(c,i,l)=>i in c?ct(c,i,{enumerable:!0,configurable:!0,writable:!0,value:l}):c[i]=l;var dt=(c,i)=>()=>(i||c((i={exports:{}}).exports,i),i.exports);var he=(c,i,l,E)=>{if(i&&typeof i==\"object\"||typeof i==\"function\")for(let a of ie(i))!ce.call(c,a)&&a!==l&&ct(c,a,{get:()=>i[a],enumerable:!(E=re(i,a))||E.enumerable});return c};var ae=(c,i,l)=>(l=c!=null?ne(oe(c)):{},he(i||!c||!c.__esModule?ct(l,\"default\",{value:c,enumerable:!0}):l,c));var Z=(c,i,l)=>(le(c,typeof i!=\"symbol\"?i+\"\":i,l),l);var It=dt((St,vt)=>{(function(c){var i=Object.hasOwnProperty,l=Array.isArray?Array.isArray:function(e){return Object.prototype.toString.call(e)===\"[object Array]\"},E=10,a=typeof process==\"object\"&&typeof process.nextTick==\"function\",x=typeof Symbol==\"function\",m=typeof Reflect==\"object\",A=typeof setImmediate==\"function\",N=A?setImmediate:setTimeout,v=x?m&&typeof Reflect.ownKeys==\"function\"?Reflect.ownKeys:function(t){var e=Object.getOwnPropertyNames(t);return e.push.apply(e,Object.getOwnPropertySymbols(t)),e}:Object.keys;function S(){this._events={},this._conf&&I.call(this,this._conf)}function I(t){t&&(this._conf=t,t.delimiter&&(this.delimiter=t.delimiter),t.maxListeners!==c&&(this._maxListeners=t.maxListeners),t.wildcard&&(this.wildcard=t.wildcard),t.newListener&&(this._newListener=t.newListener),t.removeListener&&(this._removeListener=t.removeListener),t.verboseMemoryLeak&&(this.verboseMemoryLeak=t.verboseMemoryLeak),t.ignoreErrors&&(this.ignoreErrors=t.ignoreErrors),this.wildcard&&(this.listenerTree={}))}function w(t,e){var s=\"(node) warning: possible EventEmitter memory leak detected. \"+t+\" listeners added. Use emitter.setMaxListeners() to increase limit.\";if(this.verboseMemoryLeak&&(s+=\" Event name: \"+e+\".\"),typeof process<\"u\"&&process.emitWarning){var n=new Error(s);n.name=\"MaxListenersExceededWarning\",n.emitter=this,n.count=t,process.emitWarning(n)}else console.error(s),console.trace&&console.trace()}var D=function(t,e,s){var n=arguments.length;switch(n){case 0:return[];case 1:return[t];case 2:return[t,e];case 3:return[t,e,s];default:for(var r=new Array(n);n--;)r[n]=arguments[n];return r}};function Q(t,e){for(var s={},n,r=t.length,o=e?e.length:0,h=0;h<r;h++)n=t[h],s[n]=h<o?e[h]:c;return s}function H(t,e,s){this._emitter=t,this._target=e,this._listeners={},this._listenersCount=0;var n,r;if((s.on||s.off)&&(n=s.on,r=s.off),e.addEventListener?(n=e.addEventListener,r=e.removeEventListener):e.addListener?(n=e.addListener,r=e.removeListener):e.on&&(n=e.on,r=e.off),!n&&!r)throw Error(\"target does not implement any known event API\");if(typeof n!=\"function\")throw TypeError(\"on method must be a function\");if(typeof r!=\"function\")throw TypeError(\"off method must be a function\");this._on=n,this._off=r;var o=t._observers;o?o.push(this):t._observers=[this]}Object.assign(H.prototype,{subscribe:function(t,e,s){var n=this,r=this._target,o=this._emitter,h=this._listeners,_=function(){var f=D.apply(null,arguments),u={data:f,name:e,original:t};if(s){var T=s.call(r,u);T!==!1&&o.emit.apply(o,[u.name].concat(f));return}o.emit.apply(o,[e].concat(f))};if(h[t])throw Error(\"Event '\"+t+\"' is already listening\");this._listenersCount++,o._newListener&&o._removeListener&&!n._onNewListener?(this._onNewListener=function(f){f===e&&h[t]===null&&(h[t]=_,n._on.call(r,t,_))},o.on(\"newListener\",this._onNewListener),this._onRemoveListener=function(f){f===e&&!o.hasListeners(f)&&h[t]&&(h[t]=null,n._off.call(r,t,_))},h[t]=null,o.on(\"removeListener\",this._onRemoveListener)):(h[t]=_,n._on.call(r,t,_))},unsubscribe:function(t){var e=this,s=this._listeners,n=this._emitter,r,o,h=this._off,_=this._target,f;if(t&&typeof t!=\"string\")throw TypeError(\"event must be a string\");function u(){e._onNewListener&&(n.off(\"newListener\",e._onNewListener),n.off(\"removeListener\",e._onRemoveListener),e._onNewListener=null,e._onRemoveListener=null);var T=mt.call(n,e);n._observers.splice(T,1)}if(t){if(r=s[t],!r)return;h.call(_,t,r),delete s[t],--this._listenersCount||u()}else{for(o=v(s),f=o.length;f-- >0;)t=o[f],h.call(_,t,s[t]);this._listeners={},this._listenersCount=0,u()}}});function J(t,e,s,n){var r=Object.assign({},e);if(!t)return r;if(typeof t!=\"object\")throw TypeError(\"options must be an object\");var o=Object.keys(t),h=o.length,_,f,u;function T(O){throw Error('Invalid \"'+_+'\" option value'+(O?\". Reason: \"+O:\"\"))}for(var P=0;P<h;P++){if(_=o[P],!n&&!i.call(e,_))throw Error('Unknown \"'+_+'\" option');f=t[_],f!==c&&(u=s[_],r[_]=u?u(f,T):f)}return r}function Tt(t,e){return(typeof t!=\"function\"||!t.hasOwnProperty(\"prototype\"))&&e(\"value must be a constructor\"),t}function xt(t){var e=\"value must be type of \"+t.join(\"|\"),s=t.length,n=t[0],r=t[1];return s===1?function(o,h){if(typeof o===n)return o;h(e)}:s===2?function(o,h){var _=typeof o;if(_===n||_===r)return o;h(e)}:function(o,h){for(var _=typeof o,f=s;f-- >0;)if(_===t[f])return o;h(e)}}var et=xt([\"function\"]),qt=xt([\"object\",\"function\"]);function pt(t,e,s){var n,r,o=0,h,_=new t(function(f,u,T){s=J(s,{timeout:0,overload:!1},{timeout:function(R,C){return R*=1,(typeof R!=\"number\"||R<0||!Number.isFinite(R))&&C(\"timeout must be a positive number\"),R}}),n=!s.overload&&typeof t.prototype.cancel==\"function\"&&typeof T==\"function\";function P(){r&&(r=null),o&&(clearTimeout(o),o=0)}var O=function(R){P(),f(R)},d=function(R){P(),u(R)};n?e(O,d,T):(r=[function(R){d(R||Error(\"canceled\"))}],e(O,d,function(R){if(h)throw Error(\"Unable to subscribe on cancel event asynchronously\");if(typeof R!=\"function\")throw TypeError(\"onCancel callback must be a function\");r.push(R)}),h=!0),s.timeout>0&&(o=setTimeout(function(){var R=Error(\"timeout\");R.code=\"ETIMEDOUT\",o=0,_.cancel(R),u(R)},s.timeout))});return n||(_.cancel=function(f){if(r){for(var u=r.length,T=1;T<u;T++)r[T](f);r[0](f),r=null}}),_}function mt(t){var e=this._observers;if(!e)return-1;for(var s=e.length,n=0;n<s;n++)if(e[n]._target===t)return n;return-1}function b(t,e,s,n,r){if(!s)return null;if(n===0){var o=typeof e;if(o===\"string\"){var h,_,f=0,u=0,T=this.delimiter,P=T.length;if((_=e.indexOf(T))!==-1){h=new Array(5);do h[f++]=e.slice(u,_),u=_+P;while((_=e.indexOf(T,u))!==-1);h[f++]=e.slice(u),e=h,r=f}else e=[e],r=1}else o===\"object\"?r=e.length:(e=[e],r=1)}var O=null,d,R,C,rt,it,K=e[n],ot=e[n+1],Y,g;if(n===r)s._listeners&&(typeof s._listeners==\"function\"?(t&&t.push(s._listeners),O=[s]):(t&&t.push.apply(t,s._listeners),O=[s]));else if(K===\"*\"){for(Y=v(s),_=Y.length;_-- >0;)d=Y[_],d!==\"_listeners\"&&(g=b(t,e,s[d],n+1,r),g&&(O?O.push.apply(O,g):O=g));return O}else if(K===\"**\"){for(it=n+1===r||n+2===r&&ot===\"*\",it&&s._listeners&&(O=b(t,e,s,r,r)),Y=v(s),_=Y.length;_-- >0;)d=Y[_],d!==\"_listeners\"&&(d===\"*\"||d===\"**\"?(s[d]._listeners&&!it&&(g=b(t,e,s[d],r,r),g&&(O?O.push.apply(O,g):O=g)),g=b(t,e,s[d],n,r)):d===ot?g=b(t,e,s[d],n+2,r):g=b(t,e,s[d],n,r),g&&(O?O.push.apply(O,g):O=g));return O}else s[K]&&(O=b(t,e,s[K],n+1,r));if(R=s[\"*\"],R&&b(t,e,R,n+1,r),C=s[\"**\"],C)if(n<r)for(C._listeners&&b(t,e,C,r,r),Y=v(C),_=Y.length;_-- >0;)d=Y[_],d!==\"_listeners\"&&(d===ot?b(t,e,C[d],n+2,r):d===K?b(t,e,C[d],n+1,r):(rt={},rt[d]=C[d],b(t,e,{\"**\":rt},n+1,r)));else C._listeners?b(t,e,C,r,r):C[\"*\"]&&C[\"*\"]._listeners&&b(t,e,C[\"*\"],r,r);return O}function $t(t,e,s){var n=0,r=0,o,h=this.delimiter,_=h.length,f;if(typeof t==\"string\")if((o=t.indexOf(h))!==-1){f=new Array(5);do f[n++]=t.slice(r,o),r=o+_;while((o=t.indexOf(h,r))!==-1);f[n++]=t.slice(r)}else f=[t],n=1;else f=t,n=t.length;if(n>1){for(o=0;o+1<n;o++)if(f[o]===\"**\"&&f[o+1]===\"**\")return}var u=this.listenerTree,T;for(o=0;o<n;o++)if(T=f[o],u=u[T]||(u[T]={}),o===n-1)return u._listeners?(typeof u._listeners==\"function\"&&(u._listeners=[u._listeners]),s?u._listeners.unshift(e):u._listeners.push(e),!u._listeners.warned&&this._maxListeners>0&&u._listeners.length>this._maxListeners&&(u._listeners.warned=!0,w.call(this,u._listeners.length,T))):u._listeners=e,!0;return!0}function At(t,e,s,n){for(var r=v(t),o=r.length,h,_,f,u=t._listeners,T;o-- >0;)_=r[o],h=t[_],_===\"_listeners\"?f=s:f=s?s.concat(_):[_],T=n||typeof _==\"symbol\",u&&e.push(T?f:f.join(this.delimiter)),typeof h==\"object\"&&At.call(this,h,e,f,T);return e}function st(t){for(var e=v(t),s=e.length,n,r,o;s-- >0;)r=e[s],n=t[r],n&&(o=!0,r!==\"_listeners\"&&!st(n)&&delete t[r]);return o}function Ot(t,e,s){this.emitter=t,this.event=e,this.listener=s}Ot.prototype.off=function(){return this.emitter.off(this.event,this.listener),this};function te(t,e,s){if(s===!0)r=!0;else if(s===!1)n=!0;else{if(!s||typeof s!=\"object\")throw TypeError(\"options should be an object or true\");var n=s.async,r=s.promisify,o=s.nextTick,h=s.objectify}if(n||o||r){var _=e,f=e._origin||e;if(o&&!a)throw Error(\"process.nextTick is not supported\");r===c&&(r=e.constructor.name===\"AsyncFunction\"),e=function(){var u=arguments,T=this,P=this.event;return r?o?Promise.resolve():new Promise(function(O){N(O)}).then(function(){return T.event=P,_.apply(T,u)}):(o?process.nextTick:N)(function(){T.event=P,_.apply(T,u)})},e._async=!0,e._origin=f}return[e,h?new Ot(this,t,e):this]}function p(t){this._events={},this._newListener=!1,this._removeListener=!1,this.verboseMemoryLeak=!1,I.call(this,t)}p.EventEmitter2=p,p.prototype.listenTo=function(t,e,s){if(typeof t!=\"object\")throw TypeError(\"target musts be an object\");var n=this;s=J(s,{on:c,off:c,reducers:c},{on:et,off:et,reducers:qt});function r(o){if(typeof o!=\"object\")throw TypeError(\"events must be an object\");var h=s.reducers,_=mt.call(n,t),f;_===-1?f=new H(n,t,s):f=n._observers[_];for(var u=v(o),T=u.length,P,O=typeof h==\"function\",d=0;d<T;d++)P=u[d],f.subscribe(P,o[P]||P,O?h:h&&h[P])}return l(e)?r(Q(e)):r(typeof e==\"string\"?Q(e.split(/\\s+/)):e),this},p.prototype.stopListeningTo=function(t,e){var s=this._observers;if(!s)return!1;var n=s.length,r,o=!1;if(t&&typeof t!=\"object\")throw TypeError(\"target should be an object\");for(;n-- >0;)r=s[n],(!t||r._target===t)&&(r.unsubscribe(e),o=!0);return o},p.prototype.delimiter=\".\",p.prototype.setMaxListeners=function(t){t!==c&&(this._maxListeners=t,this._conf||(this._conf={}),this._conf.maxListeners=t)},p.prototype.getMaxListeners=function(){return this._maxListeners},p.prototype.event=\"\",p.prototype.once=function(t,e,s){return this._once(t,e,!1,s)},p.prototype.prependOnceListener=function(t,e,s){return this._once(t,e,!0,s)},p.prototype._once=function(t,e,s,n){return this._many(t,1,e,s,n)},p.prototype.many=function(t,e,s,n){return this._many(t,e,s,!1,n)},p.prototype.prependMany=function(t,e,s,n){return this._many(t,e,s,!0,n)},p.prototype._many=function(t,e,s,n,r){var o=this;if(typeof s!=\"function\")throw new Error(\"many only accepts instances of Function\");function h(){return--e===0&&o.off(t,h),s.apply(this,arguments)}return h._origin=s,this._on(t,h,n,r)},p.prototype.emit=function(){if(!this._events&&!this._all)return!1;this._events||S.call(this);var t=arguments[0],e,s=this.wildcard,n,r,o,h,_;if(t===\"newListener\"&&!this._newListener&&!this._events.newListener)return!1;if(s&&(e=t,t!==\"newListener\"&&t!==\"removeListener\"&&typeof t==\"object\")){if(r=t.length,x){for(o=0;o<r;o++)if(typeof t[o]==\"symbol\"){_=!0;break}}_||(t=t.join(this.delimiter))}var f=arguments.length,u;if(this._all&&this._all.length)for(u=this._all.slice(),o=0,r=u.length;o<r;o++)switch(this.event=t,f){case 1:u[o].call(this,t);break;case 2:u[o].call(this,t,arguments[1]);break;case 3:u[o].call(this,t,arguments[1],arguments[2]);break;default:u[o].apply(this,arguments)}if(s)u=[],b.call(this,u,e,this.listenerTree,0,r);else if(u=this._events[t],typeof u==\"function\"){switch(this.event=t,f){case 1:u.call(this);break;case 2:u.call(this,arguments[1]);break;case 3:u.call(this,arguments[1],arguments[2]);break;default:for(n=new Array(f-1),h=1;h<f;h++)n[h-1]=arguments[h];u.apply(this,n)}return!0}else u&&(u=u.slice());if(u&&u.length){if(f>3)for(n=new Array(f-1),h=1;h<f;h++)n[h-1]=arguments[h];for(o=0,r=u.length;o<r;o++)switch(this.event=t,f){case 1:u[o].call(this);break;case 2:u[o].call(this,arguments[1]);break;case 3:u[o].call(this,arguments[1],arguments[2]);break;default:u[o].apply(this,n)}return!0}else if(!this.ignoreErrors&&!this._all&&t===\"error\")throw arguments[1]instanceof Error?arguments[1]:new Error(\"Uncaught, unspecified 'error' event.\");return!!this._all},p.prototype.emitAsync=function(){if(!this._events&&!this._all)return!1;this._events||S.call(this);var t=arguments[0],e=this.wildcard,s,n,r,o,h,_;if(t===\"newListener\"&&!this._newListener&&!this._events.newListener)return Promise.resolve([!1]);if(e&&(s=t,t!==\"newListener\"&&t!==\"removeListener\"&&typeof t==\"object\")){if(o=t.length,x){for(h=0;h<o;h++)if(typeof t[h]==\"symbol\"){n=!0;break}}n||(t=t.join(this.delimiter))}var f=[],u=arguments.length,T;if(this._all)for(h=0,o=this._all.length;h<o;h++)switch(this.event=t,u){case 1:f.push(this._all[h].call(this,t));break;case 2:f.push(this._all[h].call(this,t,arguments[1]));break;case 3:f.push(this._all[h].call(this,t,arguments[1],arguments[2]));break;default:f.push(this._all[h].apply(this,arguments))}if(e?(T=[],b.call(this,T,s,this.listenerTree,0)):T=this._events[t],typeof T==\"function\")switch(this.event=t,u){case 1:f.push(T.call(this));break;case 2:f.push(T.call(this,arguments[1]));break;case 3:f.push(T.call(this,arguments[1],arguments[2]));break;default:for(r=new Array(u-1),_=1;_<u;_++)r[_-1]=arguments[_];f.push(T.apply(this,r))}else if(T&&T.length){if(T=T.slice(),u>3)for(r=new Array(u-1),_=1;_<u;_++)r[_-1]=arguments[_];for(h=0,o=T.length;h<o;h++)switch(this.event=t,u){case 1:f.push(T[h].call(this));break;case 2:f.push(T[h].call(this,arguments[1]));break;case 3:f.push(T[h].call(this,arguments[1],arguments[2]));break;default:f.push(T[h].apply(this,r))}}else if(!this.ignoreErrors&&!this._all&&t===\"error\")return arguments[1]instanceof Error?Promise.reject(arguments[1]):Promise.reject(\"Uncaught, unspecified 'error' event.\");return Promise.all(f)},p.prototype.on=function(t,e,s){return this._on(t,e,!1,s)},p.prototype.prependListener=function(t,e,s){return this._on(t,e,!0,s)},p.prototype.onAny=function(t){return this._onAny(t,!1)},p.prototype.prependAny=function(t){return this._onAny(t,!0)},p.prototype.addListener=p.prototype.on,p.prototype._onAny=function(t,e){if(typeof t!=\"function\")throw new Error(\"onAny only accepts instances of Function\");return this._all||(this._all=[]),e?this._all.unshift(t):this._all.push(t),this},p.prototype._on=function(t,e,s,n){if(typeof t==\"function\")return this._onAny(t,e),this;if(typeof e!=\"function\")throw new Error(\"on only accepts instances of Function\");this._events||S.call(this);var r=this,o;return n!==c&&(o=te.call(this,t,e,n),e=o[0],r=o[1]),this._newListener&&this.emit(\"newListener\",t,e),this.wildcard?($t.call(this,t,e,s),r):(this._events[t]?(typeof this._events[t]==\"function\"&&(this._events[t]=[this._events[t]]),s?this._events[t].unshift(e):this._events[t].push(e),!this._events[t].warned&&this._maxListeners>0&&this._events[t].length>this._maxListeners&&(this._events[t].warned=!0,w.call(this,this._events[t].length,t))):this._events[t]=e,r)},p.prototype.off=function(t,e){if(typeof e!=\"function\")throw new Error(\"removeListener only takes instances of Function\");var s,n=[];if(this.wildcard){var r=typeof t==\"string\"?t.split(this.delimiter):t.slice();if(n=b.call(this,null,r,this.listenerTree,0),!n)return this}else{if(!this._events[t])return this;s=this._events[t],n.push({_listeners:s})}for(var o=0;o<n.length;o++){var h=n[o];if(s=h._listeners,l(s)){for(var _=-1,f=0,u=s.length;f<u;f++)if(s[f]===e||s[f].listener&&s[f].listener===e||s[f]._origin&&s[f]._origin===e){_=f;break}if(_<0)continue;return this.wildcard?h._listeners.splice(_,1):this._events[t].splice(_,1),s.length===0&&(this.wildcard?delete h._listeners:delete this._events[t]),this._removeListener&&this.emit(\"removeListener\",t,e),this}else(s===e||s.listener&&s.listener===e||s._origin&&s._origin===e)&&(this.wildcard?delete h._listeners:delete this._events[t],this._removeListener&&this.emit(\"removeListener\",t,e))}return this.listenerTree&&st(this.listenerTree),this},p.prototype.offAny=function(t){var e=0,s=0,n;if(t&&this._all&&this._all.length>0){for(n=this._all,e=0,s=n.length;e<s;e++)if(t===n[e])return n.splice(e,1),this._removeListener&&this.emit(\"removeListenerAny\",t),this}else{if(n=this._all,this._removeListener)for(e=0,s=n.length;e<s;e++)this.emit(\"removeListenerAny\",n[e]);this._all=[]}return this},p.prototype.removeListener=p.prototype.off,p.prototype.removeAllListeners=function(t){if(t===c)return!this._events||S.call(this),this;if(this.wildcard){var e=b.call(this,null,t,this.listenerTree,0),s,n;if(!e)return this;for(n=0;n<e.length;n++)s=e[n],s._listeners=null;this.listenerTree&&st(this.listenerTree)}else this._events&&(this._events[t]=null);return this},p.prototype.listeners=function(t){var e=this._events,s,n,r,o,h;if(t===c){if(this.wildcard)throw Error(\"event name required for wildcard emitter\");if(!e)return[];for(s=v(e),o=s.length,r=[];o-- >0;)n=e[s[o]],typeof n==\"function\"?r.push(n):r.push.apply(r,n);return r}else{if(this.wildcard){if(h=this.listenerTree,!h)return[];var _=[],f=typeof t==\"string\"?t.split(this.delimiter):t.slice();return b.call(this,_,f,h,0),_}return e?(n=e[t],n?typeof n==\"function\"?[n]:n:[]):[]}},p.prototype.eventNames=function(t){var e=this._events;return this.wildcard?At.call(this,this.listenerTree,[],null,t):e?v(e):[]},p.prototype.listenerCount=function(t){return this.listeners(t).length},p.prototype.hasListeners=function(t){if(this.wildcard){var e=[],s=typeof t==\"string\"?t.split(this.delimiter):t.slice();return b.call(this,e,s,this.listenerTree,0),e.length>0}var n=this._events,r=this._all;return!!(r&&r.length||n&&(t===c?v(n).length:n[t]))},p.prototype.listenersAny=function(){return this._all?this._all:[]},p.prototype.waitFor=function(t,e){var s=this,n=typeof e;return n===\"number\"?e={timeout:e}:n===\"function\"&&(e={filter:e}),e=J(e,{timeout:0,filter:c,handleError:!1,Promise,overload:!1},{filter:et,Promise:Tt}),pt(e.Promise,function(r,o,h){function _(){var f=e.filter;if(!(f&&!f.apply(s,arguments)))if(s.off(t,_),e.handleError){var u=arguments[0];u?o(u):r(D.apply(null,arguments).slice(1))}else r(D.apply(null,arguments))}h(function(){s.off(t,_)}),s._on(t,_,!1)},{timeout:e.timeout,overload:e.overload})};function ee(t,e,s){s=J(s,{Promise,timeout:0,overload:!1},{Promise:Tt});var n=s.Promise;return pt(n,function(r,o,h){var _;if(typeof t.addEventListener==\"function\"){_=function(){r(D.apply(null,arguments))},h(function(){t.removeEventListener(e,_)}),t.addEventListener(e,_,{once:!0});return}var f=function(){u&&t.removeListener(\"error\",u),r(D.apply(null,arguments))},u;e!==\"error\"&&(u=function(T){t.removeListener(e,f),o(T)},t.once(\"error\",u)),h(function(){u&&t.removeListener(\"error\",u),t.removeListener(e,f)}),t.once(e,f)},{timeout:s.timeout,overload:s.overload})}var nt=p.prototype;if(Object.defineProperties(p,{defaultMaxListeners:{get:function(){return nt._maxListeners},set:function(t){if(typeof t!=\"number\"||t<0||Number.isNaN(t))throw TypeError(\"n must be a non-negative number\");nt._maxListeners=t},enumerable:!0},once:{value:ee,writable:!0,configurable:!0}}),Object.defineProperties(nt,{_maxListeners:{value:E,writable:!0,configurable:!0},_observers:{value:null,writable:!0,configurable:!0}}),typeof define==\"function\"&&define.amd)define(function(){return p});else if(typeof St==\"object\")vt.exports=p;else{var se=new Function(\"\",\"return this\")();se.EventEmitter2=p}})()});var Nt=dt((ir,Rt)=>{Rt.exports=It()});var Zt=ae(Nt(),1);var fe=\"as\",ue=\"=\",_e=\"break\",Ee=\"else\",Te=\"enum\",xe=\"export\",pe=\"if\",me=\"import\",Ae=\"->\",Oe=\"is\",de=\"loop\",Se=\"mut\",ve=\"native\",Ie=\"object\",Re=\"fn\",Ne=\"return\",be=\"self\",Le=\"template\",Pe=Object.freeze({ALIAS:fe,ASSIGN:ue,BREAK:_e,ELSE:Ee,ENUMERATION:Te,EXPORT:xe,IF:pe,IMPORT:me,INTO:Ae,IS:Oe,LOOP:de,MUTABLE:Se,NATIVE:ve,OBJECT:Ie,PROCEDURE:Re,RETURN:Ne,SELF:be,TEMPLATE:Le}),bt=Pe;var Ce=\"assign\",ge=\"arity_match\",we=\"arity_status\",Be=\"array_assignment\",Ye=\"branch-match\",Me=\"branch-default\",De=\"condition\",Ue=\"loop\",ye=\"data\",ke=\"generics\",je=\"enumeration\",Fe=\"expression\",Ge=\"instance\",He=\"Link\",Ke=\"local\",Ze=\"object\",Xe=\"procedure\",ze=\"return\",Ve=\"compare\",We=\"select\",Qe=\"member\",Je=\"store\",qe=\"break\",$e=\"literal\",ts=\"array_access\",es=\"valueLink\",ss=\"linkValue\",ns=\"self\",rs=\"procedure-call\",is=\"Maybe\",os=\"native\",cs=\"move\",ls=\"String\",hs=\"Array\",as=\"import\",fs=\"library\",us=\"constructor\",_s=\"destructor\",Es=\"free\",Ts=\"block-end\",xs=\"default-block\",ps=\"continue\",ms=\"branch\",As=\"statement\",Os=\"draw\",ds=\"now\",Ss=\"size\",vs=\"concatenation\",Is=\"foreach\",Rs=\"while\",Ns=\"when\",bs=\"while-condition\",Ls=\"foreach-condition\",Ps=\"foreach-end\",Cs=\"for\",gs=\"up_to\",ws=\"down_to\",Bs=\"almost_up_to\",Ys=\"almost_down_to\",Ms=\"I32\",Ds=\"U32\",Us=\"FP32\",ys=\"I16\",ks=\"U16\",js=\"U8\",Fs=\"I8\",Gs=\"FP64\",Hs=\"U64\",Ks=\"I64\",Zs=\"Char\",Xs=\"block-start\",zs=\"function-call\",Vs=\"Bool\",Ws=Object.freeze({TYPES_ASSIGN:Ce,TYPES_ARRAY:hs,TYPES_ARITY_MATCH:ge,TYPES_ARITY_STATUS:we,TYPES_ARRAY_ASSIGNMENT:Be,TYPES_BRANCH_MATCH:Ye,TYPES_BRANCH_DEFAULT:Me,TYPES_CONDITION:De,TYPES_LOOP:Ue,TYPES_FOREACH_END:Ps,TYPES_WHILE_CONDITION:bs,TYPES_FOREACH_CONDITION:Ls,TYPES_DATA:ye,TYPES_COMPARE:Ve,TYPES_GENERICS:ke,TYPES_ENUMERATION:je,TYPES_EXPRESSION:Fe,TYPES_INSTANCE:Ge,TYPES_LINK:He,TYPES_IMPORT:as,TYPES_LOCAL:Ke,TYPES_OBJECT:Ze,TYPES_PROCEDURE:Xe,TYPES_RETURN:ze,TYPES_SELECT:We,TYPES_MEMBER:Qe,TYPES_STORE:Je,TYPES_BREAK:qe,TYPES_LITERAL:$e,TYPES_ARRAY_ACCESS:ts,TYPES_LINK_TO:es,TYPES_VALUE_AT:ss,TYPES_SELF:ns,TYPES_LIBRARY:fs,TYPES_DROP:rs,TYPES_MAYBE:is,TYPES_NATIVE:os,TYPES_MOVE:cs,TYPES_STRING:ls,TYPES_CONSTRUCTOR:us,TYPES_FREE:Es,TYPES_DEFAULT_BLOCK:xs,TYPES_BLOCK_END:Ts,TYPES_CONTINUE:ps,TYPES_BRANCH:ms,TYPES_STATEMENT:As,TYPES_DESTRUCTOR:_s,TYPES_DRAW:Os,TYPES_NOW:ds,TYPES_SIZE:Ss,TYPES_CONCAT:vs,TYPES_FOREACH:Is,TYPES_WHILE:Rs,TYPES_WHEN:Ns,TYPES_FOR:Cs,TYPES_UP_TO:gs,TYPES_DOWN_TO:ws,TYPES_ALMOST_UP_TO:Bs,TYPES_ALMOST_DOWN_TO:Ys,TYPES_I32:Ms,TYPES_FP32:Us,TYPES_FP64:Gs,TYPES_U32:Ds,TYPES_I64:Ks,TYPES_U64:Hs,TYPES_I16:ys,TYPES_U16:ks,TYPES_I8:Fs,TYPES_U8:js,TYPES_CHAR:Zs,TYPES_BOOL:Vs,TYPES_BLOCK_BEGIN:Xs,TYPES_FUNCTION_CALL:zs}),Lt=Ws;var Qs=Object.freeze({COLON:58,COMMA:44,DIGIT_ZERO:48,DIGIT_NINE:57,DOT:46,HASHTAG:35,HORIZONTAL_TAB:9,HYPHEN_MINUS:45,LEFT_CURLY_BRACKET:123,LEFT_PARENTHESIS:40,LEFT_SQUARE_BRACKET:91,LINE_BREAK:10,NULL:0,PLUS_SIGN:43,RIGHT_CURLY_BRACKET:125,RIGHT_PARENTHESIS:41,RIGHT_SQUARE_BRACKET:93,SEMICOLON:59,SPACE:32,E_SIGN:101}),Pt=Qs;var Js=\"assignment\",qs=\"Flogram\",$s=Object.freeze({K_ASSIGNMENT:Js,K_FLOGRAM:qs}),Ct=$s;var tn=Object.freeze([[43],[45],[42],[47],[37],[110,111,116],[60],[62],[94],[111,114],[33],[61,61],[60,61],[62,61],[33,61],[120,111,114],[97,110,100]]),en=tn,gt=en;var sn=Object.freeze({INT_ARRAY_START:9999991,FLOAT_ARRAY_START:9999981,STRING_START:8888891,CHAR_START:8888881,NAT_ON_HORIZON:7777791,BIG_NAT_ON_HORIZON:7777591,FLOAT_ON_HORIZON:7777771,BIG_FLOAT_ON_HORIZON:7777731,END_OF_LINE:66666661}),wt=sn;var nn=Object.freeze({ENUM_MEMORY_SIZE:12,ENUM_STACK_SIZE:3,ARRAY_MEMORY_SIZE:12,ARRAY_STACK_SIZE:3,ARRAY_DEFAULT_CAPACITY:4,STRING_MEMORY_SIZE:8,STRING_STACK_SIZE:2,OBJECT_MEMORY_SIZE:8,OBJECT_STACK_SIZE:2,NATIVE_MEMORY_SIZE:4,NATIVE_STACK_SIZE:1,NATIVE_SIZE:4,STEP:4,DOUBLE_STEP:8,TRIPPLE_STEP:12}),Bt=nn;var rn=Object.freeze([]),on=Object.freeze({}),cn=\"\",ln=\"\t\",hn=`\n`,an=\"UTF-8\";var fn=Object.freeze({EMPTY_ARRAY:rn,EMPTY_OBJECT:on,EMPTY_STRING:cn,HORIZONTAL_TAB:ln,LINE_BREAK:hn,UNICODE_TEXT:an,Codes:Pt,Keys:bt,Types:Lt,Keywords:Ct,Operators:gt,DrawStates:wt,Sizes:Bt}),y=fn;var dr=Object.freeze([\"FP64\",\"U64\",\"I64\",\"FP32\",\"U32\",\"I32\",\"U16\",\"I16\",\"U8\",\"I8\",\"Bool\",\"Char\",\"Array\",\"String\",\"Link\",\"Maybe\"]),k=[\"U8\",\"U16\",\"U32\"],X=[...k,\"I8\",\"I16\",\"I32\"],un=[\"I64\",\"U64\"],lt=[...X,...un],_n=[\"FP32\",\"FP64\"],z=[...lt,..._n];var{EMPTY_STRING:En,UNICODE_TEXT:ut}=y;var Tn=48,xn=57,pn=46,Yt=45,Mt=43,mn=65,An=90,On=\"e\".charCodeAt(0),dn=\"E\".charCodeAt(0),Sn=-1,vn=1,Dt=new TextDecoder(ut),In=new TextEncoder,Rn=y.Operators,Nn=(c,i,l=0,E=c.length|0,a=0,x=i.length|0)=>{for(a=a|0,l=l|0,x=x|0,E=E|0;;){let m=l>=E,A=a>=x;if(m||A)break;let v=c[l],S=i[a];if(l=l+1|0,a=a+1|0,v<S)return Sn;if(v>S)return vn}return 0},bn=(c,i,l=0,E=c.length|0,a=0,x=i.length|0)=>{for(a=a|0,l=l|0,x=x|0,E=E|0;;){let m=a>=x,A=l>=E;if(m||A)break;i[a]=c[l],a=a+1|0,l=l+1|0}},kt=(c,i,l=0,E=c.length|0,a=0,x=i.length|0)=>{l=l|0,a=a|0,E=E|0,x=x|0;let m=E-l|0,A=x-a|0;if(m!==A)return!1;for(;;){let N=l>=E,v=a>=x;if(N||v)break;let I=c[l],w=i[a];if(l=l+1|0,a=a+1|0,I!==w)return!1}return!0},Ln=c=>{c=c>>>0;let i=0,l=0;for(;l=(l<<1|1)>>>0,!(l>c);)i=i+1|0;return i},jt=Object.freeze([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]),ft=(c,i,l,E)=>{for(c=c>>>0,E=E??i.length|0,l=l|0,E=E|0;c>0&&E>l;)E=E-1|0,i[E]=jt[c&15],c=c>>>4},Pn=(c,i,l,E)=>{let a=l|0,x=l+E|0;if(E===0)return!1;let m=!1,A=!1,N=!1,v=S=>S===Mt||S===Yt;for(;a<x;){let S=i[a];a=a+1|0;let I=Tn<=S&&S<=xn,w=Mt===S||S===Yt,D=pn===S,Q=Fn===S,H=S===On||S===dn;if(I){N=!0;continue}else if(w){if((a===l+1||m&&!A)&&!N)continue}else if((Q||D)&&!m&&!A||H&&!m)H&&(m=!0,a<x&&v(i[a])&&(a=a+1|0,A=!0));else return!1}return N&&(!m||m&&A)},Cn={I8:[...X],U8:[...k],I16:[...X],U16:[...k],I32:[...X],U32:[...k],I64:[...lt],U64:[...k],FP32:z,FP64:z},gn=(c,i)=>!z.includes(c)||!z.includes(i)?!1:Cn[c].includes(i),wn=c=>{let i=c>=mn,l=c<=An;return i&&l},$=128,tt=127,Ft=-1,j=64,_t=c=>{c=c|0;let i=[];for(;;){let l=c&tt;c=c>>7;let E=c===0,a=(l&j)===0,x=E&&a,m=c===-1,A=(l&j)!==0;if(x||m&&A){i.push(l);break}l=l|$,i.push(l)}return i},Bn=c=>{let i=[],l=!0;for(;l;){let E=c&tt;c>>=7,c===0&&!(E&j)||c===-1&&E&j?l=!1:E|=$,i.push(E)}return i},Gt=(c,i)=>{i=i|0;let l=0,E=0;for(;;){let a=c[i]|0;i=i+1|0;let x=(a&tt)<<E;if(E=E+7|0,l=l|x,(a&$)===0){let A=(a&j)!==0,N=E<32;if(A&&N){let S=Ft<<E;l=l|S}break}}return l},Yn=(c,i)=>{i=i|0;let l=0,E=0;for(;;){let a=c[i]|0;i=i+1|0;let x=(a&tt)<<E;if(E=E+7|0,l=l|x,!(a&$)){if(a&j){let m=Ft<<E;l=l|m}break}}return l},Mn=c=>{try{return Dt.decode(c)}catch{return Dt.decode(new Uint8Array([c]))}},Dn=c=>In.encode(c),Un=(c=En)=>{let i=c.length|0,l=_t(i),E=Buffer.from(c,ut);return Object.freeze([...l,...E])},yn=(c,i)=>{i=i|0;let l=Gt(c,i),E=_t(l).length;return i=i+E|0,c.subarray(i,i+l|0).toString(ut)},kn=58,jn=46,Fn=95,V=32,ht=48,Gn=67,M=new Uint8Array(Gn),Ut=M.subarray(0,8),q=M.subarray(10,49),yt=M.subarray(51,68),at=16,Hn=2;M[8]=kn;M[9]=V;M[49]=V;M[50]=V;var Kn=(c,i)=>{i=i??console.log;let l=32,E=126,a=c.length|0,x=0;for(;a>0;){Ut.fill(ht),ft(x,Ut),q.fill(V),yt.fill(V);let m=a>=at?at:a;a=a-at|0;let A=0,N=0;for(let S=1;S<=m;S=S+1|0){let I=c[x]&255;q[A+0|0]=ht,q[A+1|0]=ht,ft(I,q,A,A+2|0);let w=jn;l<=I&&I<=E&&(w=I),yt[N]=w,x=x+1|0,A=A+2|0,N=N+1|0,S%Hn===0&&(A=A+1|0)}let v=String.fromCodePoint(...M);i(v)}},Zn=function*(c,i){let l=c.length|0,E=i.length|0,a=0;for(;a<l&&a<E;){let x=c[a],m=i[a];yield[x,m],a=a+1|0}},Xn=function*(c,i,l){let E=c.length|0,a=i.length|0,x=l.length|0,m=0;for(;m<E&&m<a&&m<x;){let A=c[m],N=i[m],v=l[m];yield[A,N,v],m=m+1|0}},zn=c=>{for(let i of Rn)if(kt(c,i))return!0;return!1},Vn=Object.freeze({ARRAY_COMPARE:Nn,ARRAY_COPY:bn,ARRAY_EQUAL:kt,BIT_DEPTH:Ln,HEX_DIGITS:jt,HEX_ENCODE:ft,IS_NUMBER:Pn,IS_UPPERCASE:wn,IS_VALID_AUTO_CAST:gn,LEB128_DECODE:Gt,LEB128_DECODE_SIGNED:Yn,LEB128_ENCODE:_t,LEB128_ENCODE_SIGNED:Bn,UTF8_DECODE:Mn,UTF8_ENCODE:Dn,WASM_STRING_ENCODE:Un,WASM_STRING_DECODE:yn,XXD_DUMP_HEX:Kn,ZIP2:Zn,ZIP3:Xn,IS_OPERATOR:zn}),Ht=Vn;var{Codes:L}=y,{EMPTY_STRING:Cr}=y,{ARRAY_COPY:Wn}=Ht,Qn=Object.freeze({tabSize:4}),Xt=new Set([40,41,91,93,123,125,46,44,58,59,64,61,47]);Object.freeze(Xt);var zt=new Set([46,95]);Object.freeze(zt);var Vt=new Set([34,39]),Wt=new Set([61,33,62,60]);Object.freeze(Wt);var Qt=new Set([43,45,42,47,37]);Object.freeze(Qt);var Kt=61,Jn=58,qn=64,$n=47,tr=45,er=62,sr=33;Object.freeze(Vt);var Jt=new Set([9,13,32]);Object.freeze(Jt);var W=1,F=2,Et=3,G=4,nr=(c,i,l)=>{if(i=i|0,l=l|0,(l-i|0)===0)return!1;let a=c[i];for((a===L.PLUS_SIGN||a===L.HYPHEN_MINUS)&&(i=i+1|0);i<l;){let x=c[i];i=i+1|0;let m=L.DIGIT_ZERO<=x&&x<=L.DIGIT_NINE,A=L.DOT===x||L.COMMA===x;if(!(m||A&&i<l&&L.DIGIT_ZERO<=c[i]&&c[i]<=L.DIGIT_NINE))return!1}return!0},U=class{constructor(i=Qn){this.options=i,this.numberMark=!1,this.position=0,this.array=new Uint8Array(U.LIMIT_ARRAY),this.target=0,this.length=0,this.indexA=0,this.indexB=0,this.events=new Map,this.emitter=new Zt.default,this.emitter.on(\"token\",(l,E,a,x)=>{(this.events.get(\"token\")||[]).forEach(A=>{A(l,E,a,x)})}),this.emitter.on(\"error\",()=>{}),this.comment=!1,this.situation=W,this.quote=L.NULL,Object.seal(this)}on(i,l){if(U.SET_EVENTS.has(i)){let E=this.events.get(i)||[];E.push(l),this.events.set(i,E)}}feed(i){let l=i.length|0,E=0,a=0,x=l;for(;x>0;){let m=U.LIMIT_ARRAY-this.length|0,A=Math.min(m,x)|0;x=x-A|0,a=a+A|0,Wn(i,this.array,E,a,this.target),this.length=this.length+A|0,this.flush(),E=E+A|0}}done(){this.array[this.indexB]=L.SPACE,this.length=this.length+1,this.flush()}flush(){for(;this.indexB<this.length;)switch(this.situation){case W:{this.flushTopLevel();break}case F:{this.flushQuotation();break}case Et:{this.flushComment();break}}let i=this.length-this.indexA|0;i>U.LIMIT_TOKEN||(i>0&&(this.array.copyWithin(0,this.indexA,this.indexB),this.indexA=0,this.indexB=i,this.target=i),this.length=i)}flushComment(){for(;this.indexB<this.length;){if((this.array[this.indexB]|0)===L.LINE_BREAK){this.drain(\"comment\"),this.indexB=this.indexB+1|0,this.drain(\"token\"),this.comment=!1,this.situation=W;break}this.indexB=this.indexB+1|0}this.comment===!0&&(this.length-this.indexA|0)>0&&this.drain(\"comment\")}flushQuotation(){for(;this.indexB<this.length;){let i=this.array[this.indexB]|0;if(i===this.quote){if(this.situation!==G){this.drain(\"token\"),this.quote=L.NULL,this.indexA=this.indexB,this.indexB++,this.drain(\"token\"),this.indexA=this.indexB,this.situation=W;return}this.indexB++;continue}if(this.situation===F&&i===L.LEFT_CURLY_BRACKET){this.drain(\"token\"),this.indexB++,this.indexA=this.indexB-1,this.drain(\"token\"),this.indexA=this.indexB,this.situation=G;continue}if(this.situation===G&&i===L.RIGHT_CURLY_BRACKET){this.drain(\"token\"),this.indexB++,this.indexA=this.indexB-1,this.drain(\"token\"),this.indexA=this.indexB,this.situation=F;continue}if(this.situation===G){this.flushTopLevel();continue}this.indexB++}}flushTopLevel(){let{options:i}=this,{tabSize:l}=i;for(;this.indexB<this.length;){let E=()=>{let I=0;this.numberMark&&(this.indexB=this.indexB-1|0),I=this.indexB-this.indexA|0,I>0&&this.drain(\"token\"),this.numberMark&&(this.indexB=this.indexB+1|0),I=this.indexB-this.indexA|0,I>0&&this.drain(\"token\"),this.numberMark=!1},a=this.array[this.indexB]|0;if(a===L.RIGHT_CURLY_BRACKET&&this.situation===G){E(),this.indexB=this.indexB+1|0,this.drain(\"token\"),this.situation=F;return}if(a===L.HASHTAG){E(),this.indexB=this.indexB+1|0,this.drain(\"token\"),this.comment=!0,this.situation=Et;return}if(a===L.LINE_BREAK){E(),this.indexB=this.indexB+1|0,this.drain(\"token\");continue}if(Vt.has(a)){E(),this.indexB=this.indexB+1|0,this.drain(\"token\"),this.quote=a,this.situation=F;return}if(Wt.has(a)){if(this.array[this.indexB+1]===Kt){E(),this.indexB=this.indexB+2|0,this.drain(\"token\");continue}if(a!=sr){E(),this.indexB=this.indexB+1|0,this.drain(\"token\");continue}}if(a===qn&&this.array[this.indexB+1]===$n){E(),this.indexB=this.indexB+2|0,this.drain(\"token\");continue}if(a===Jn&&this.array[this.indexB+1]===Kt){E(),this.indexB=this.indexB+2|0,this.drain(\"token\");continue}if(Jt.has(a)){E(),a===L.HORIZONTAL_TAB?this.position=this.position+l|0:this.position=this.position+1|0,this.indexA=this.indexA+1|0,this.indexB=this.indexB+1|0;continue}if(this.numberMark=!1,Xt.has(a)){let I=!nr(this.array,this.indexA,this.indexB),w=!zt.has(a);if(I||w){E(),this.indexB=this.indexB+1|0,this.drain(\"token\");continue}this.numberMark=!0}if(Qt.has(a))if(a===tr){let I=this.array[this.indexB+1]|0;if(I===er){E(),this.indexB=this.indexB+2|0,this.drain(\"token\");continue}else if(!(L.DIGIT_ZERO<=I&&I<=L.DIGIT_NINE)){E(),this.indexB=this.indexB+1|0,this.drain(\"token\");continue}}else{E(),this.indexB=this.indexB+1|0,this.drain(\"token\");continue}this.indexB=this.indexB+1|0}}drain(i){let{array:l,position:E}=this,a=this.indexB-this.indexA|0,x=this.indexA;this.emitter.emit(i,E,l,x,a),this.position=this.position+a|0,this.indexA=this.indexB|0}close(){}},B=U;Z(B,\"LIMIT_TOKEN\",2e3),Z(B,\"LIMIT_ARRAY\",U.LIMIT_TOKEN*2|0),Z(B,\"SET_EVENTS\",new Set([\"comment\",\"error\",\"token\"])),Z(B,\"SET_SITUATIONS\",new Set([W,F,Et,G]));Object.values(B).forEach(Object.freeze);Object.freeze(B);Object.freeze(Object.getPrototypeOf(B));var gr=B;\n/*! Bundled license information:\n\neventemitter2/lib/eventemitter2.js:\n  (*!\n   * EventEmitter2\n   * https://github.com/hij1nx/EventEmitter2\n   *\n   * Copyright (c) 2013 hij1nx\n   * Licensed under the MIT license.\n   *)\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@munezero/floparser/Tokenizer/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@munezero/floparser/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@munezero/floparser/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Compiler: () => (/* reexport safe */ _Compilers_SimplerWASM_index_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   Dates: () => (/* reexport safe */ _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDate),\n/* harmony export */   Draw: () => (/* reexport safe */ _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDrawer),\n/* harmony export */   MemoryManager: () => (/* reexport safe */ _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createMemoryManager),\n/* harmony export */   Parser: () => (/* reexport safe */ _SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   SIMPLE_IMPORTS: () => (/* reexport safe */ _Tests_Shared_index_mjs__WEBPACK_IMPORTED_MODULE_4__.SIMPLE_IMPORTS),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _Tokenizer_index_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   runner: () => (/* binding */ runner)\n/* harmony export */ });\n/* harmony import */ var _Tokenizer_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tokenizer/index.mjs */ \"(app-pages-browser)/./node_modules/@munezero/floparser/Tokenizer/index.mjs\");\n/* harmony import */ var _SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SimpleParser/index.mjs */ \"(app-pages-browser)/./node_modules/@munezero/floparser/SimpleParser/index.mjs\");\n/* harmony import */ var _Compilers_SimplerWASM_index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Compilers/SimplerWASM/index.mjs */ \"(app-pages-browser)/./node_modules/@munezero/floparser/Compilers/SimplerWASM/index.mjs\");\n/* harmony import */ var _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Compilers/MemoryManager/index.mjs */ \"(app-pages-browser)/./node_modules/@munezero/floparser/Compilers/MemoryManager/index.mjs\");\n/* harmony import */ var _Tests_Shared_index_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tests/Shared/index.mjs */ \"(app-pages-browser)/./node_modules/@munezero/floparser/Tests/Shared/index.mjs\");\n\n\n\n\n\n\n//npm publish --access=public\n\nconst runner = async ({value, outputElement}) => {\n    let output = '';\n\n    let failures = [];\n\n    let representation = null;\n\n    const ENCODER = new TextEncoder();\n\n    const tokenizer = new _Tokenizer_index_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\n    const parser = _SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n        path: 'Module',\n        imports: _Tests_Shared_index_mjs__WEBPACK_IMPORTED_MODULE_4__.SIMPLE_IMPORTS\n    });\n\n    parser.on(_SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].EVENT_FAIL, (failure) => {\n        failures = [...failures, failure];\n        representation = null;\n    });\n\n    parser.on(_SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].EVENT_DONE, (data) => {\n        representation = data;\n    });\n\n    tokenizer.on('token', (position, array, index, length) => {\n        parser.feed(position, array, index, length);\n    });\n\n    tokenizer.feed(ENCODER.encode(value));\n\n    tokenizer.done();\n\n    parser.done();\n\n    const execute = async (glue, module) => {\n        let key;\n        for (const [iKey, value] of Object.entries(glue.procedures)) {\n            const { name, path } = value;\n            if (name === 'main' && path === 'Module') {\n                key = iKey;\n                break;\n            }\n        }\n        if (key) {\n            try {\n                const memory = new WebAssembly.Memory({\n                    initial: 128\n                });\n\n                const state = (0,_Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createMemoryManager)(memory);\n                const drawer = (0,_Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDrawer)(memory, outputElement);\n                const dates = (0,_Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDate)();\n\n                const descriptionImports = Object.freeze({\n                    imports: {}\n                });\n\n                const memoryImport = 'memory';\n\n                Object.keys(glue.imports).forEach((importKey) => {\n                    if (state[importKey]) {\n                        descriptionImports.imports[importKey] = state[importKey];\n                    }\n                    if (drawer[importKey]) {\n                        descriptionImports.imports[importKey] = drawer[importKey];\n                    }\n                    if (dates[importKey]) {\n                        descriptionImports.imports[importKey] = dates[importKey];\n                    }\n                    if (importKey === memoryImport) {\n                        descriptionImports.imports[importKey] = memory;\n                    }\n                });\n\n                const moduleCompiled = await WebAssembly.compile(module);\n                const moduleInstance = await WebAssembly.instantiate(moduleCompiled, descriptionImports);\n\n                const procedure = moduleInstance.exports[key];\n                if (procedure) {\n                    if (!outputElement) {\n                        failures.push({\n                            message: 'Error: Output element not found. Click \"Run\" again for re-evaluation',\n                            type: 100,\n                            position: 0,\n                            length: 0\n                        })\n                    }\n\n                    if (outputElement) {\n                        outputElement.innerHTML = '';\n                    }\n                    let value = procedure();\n\n                    if (outputElement){\n                        output = outputElement.innerHTML;\n                    }\n\n                    return value;\n                }\n            } catch (e) {\n                failures.push({\n                    message: e.message,\n                    type: 100,\n                    position: 0,\n                    length: 0\n                })\n                return null;\n            }\n        }\n        else{\n            failures.push({\n                message: 'Error: Missing main function. Every Flogram program must include an entry point defined as the main function.',\n                type: 101,\n                position: 0,\n                length: 0\n            })\n\n            return null;\n        }\n    };\n\n    if (representation) {\n        const compilerOptions = Object.freeze({\n            memory: true\n        });\n\n        const [glue, module] = _Compilers_SimplerWASM_index_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].compile(representation, compilerOptions);\n        const value = await execute(glue, module);\n\n        return { failures, value }\n    }\n    else{\n        //couldn't parse, return parsing errors\n        return { failures, value: null}\n    }\n};\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AbXVuZXplcm8vZmxvcGFyc2VyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNkM7QUFDQTtBQUNXO0FBQzRFO0FBQzNFOztBQUV6RDs7QUFFQSx1QkFBdUIscUJBQXFCO0FBQzVDOztBQUVBOztBQUVBOztBQUVBOztBQUVBLDBCQUEwQiw0REFBUzs7QUFFbkMsbUJBQW1CLCtEQUFNO0FBQ3pCO0FBQ0EsaUJBQWlCLG1FQUFjO0FBQy9CLEtBQUs7O0FBRUwsY0FBYywrREFBTTtBQUNwQjtBQUNBO0FBQ0EsS0FBSzs7QUFFTCxjQUFjLCtEQUFNO0FBQ3BCO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsYUFBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7O0FBRWpCLDhCQUE4Qix1RkFBYTtBQUMzQywrQkFBK0IsZ0ZBQUk7QUFDbkMsOEJBQThCLDhFQUFLOztBQUVuQztBQUNBO0FBQ0EsaUJBQWlCOztBQUVqQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjs7QUFFakI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVCwrQkFBK0Isd0VBQVE7QUFDdkM7O0FBRUEsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBOztBQUV3RiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxKQVNPTlxcRGVza3RvcFxcTmV3IGZvbGRlclxcbm9kZV9tb2R1bGVzXFxAbXVuZXplcm9cXGZsb3BhcnNlclxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRva2VuaXplciBmcm9tICcuL1Rva2VuaXplci9pbmRleC5tanMnXG5pbXBvcnQgUGFyc2VyIGZyb20gJy4vU2ltcGxlUGFyc2VyL2luZGV4Lm1qcydcbmltcG9ydCBDb21waWxlciBmcm9tICcuL0NvbXBpbGVycy9TaW1wbGVyV0FTTS9pbmRleC5tanMnXG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlNYW5hZ2VyIGFzIE1lbW9yeU1hbmFnZXIsIGNyZWF0ZURyYXdlciBhcyBEcmF3LCBjcmVhdGVEYXRlIGFzIERhdGVzfSBmcm9tICcuL0NvbXBpbGVycy9NZW1vcnlNYW5hZ2VyL2luZGV4Lm1qcydcbmltcG9ydCB7IFNJTVBMRV9JTVBPUlRTIH0gZnJvbSAnLi9UZXN0cy9TaGFyZWQvaW5kZXgubWpzJ1xuXG4vL25wbSBwdWJsaXNoIC0tYWNjZXNzPXB1YmxpY1xuXG5jb25zdCBydW5uZXIgPSBhc3luYyAoe3ZhbHVlLCBvdXRwdXRFbGVtZW50fSkgPT4ge1xuICAgIGxldCBvdXRwdXQgPSAnJztcblxuICAgIGxldCBmYWlsdXJlcyA9IFtdO1xuXG4gICAgbGV0IHJlcHJlc2VudGF0aW9uID0gbnVsbDtcblxuICAgIGNvbnN0IEVOQ09ERVIgPSBuZXcgVGV4dEVuY29kZXIoKTtcblxuICAgIGNvbnN0IHRva2VuaXplciA9IG5ldyBUb2tlbml6ZXIoKTtcblxuICAgIGNvbnN0IHBhcnNlciA9IFBhcnNlci5jcmVhdGUoe1xuICAgICAgICBwYXRoOiAnTW9kdWxlJyxcbiAgICAgICAgaW1wb3J0czogU0lNUExFX0lNUE9SVFNcbiAgICB9KTtcblxuICAgIHBhcnNlci5vbihQYXJzZXIuRVZFTlRfRkFJTCwgKGZhaWx1cmUpID0+IHtcbiAgICAgICAgZmFpbHVyZXMgPSBbLi4uZmFpbHVyZXMsIGZhaWx1cmVdO1xuICAgICAgICByZXByZXNlbnRhdGlvbiA9IG51bGw7XG4gICAgfSk7XG5cbiAgICBwYXJzZXIub24oUGFyc2VyLkVWRU5UX0RPTkUsIChkYXRhKSA9PiB7XG4gICAgICAgIHJlcHJlc2VudGF0aW9uID0gZGF0YTtcbiAgICB9KTtcblxuICAgIHRva2VuaXplci5vbigndG9rZW4nLCAocG9zaXRpb24sIGFycmF5LCBpbmRleCwgbGVuZ3RoKSA9PiB7XG4gICAgICAgIHBhcnNlci5mZWVkKHBvc2l0aW9uLCBhcnJheSwgaW5kZXgsIGxlbmd0aCk7XG4gICAgfSk7XG5cbiAgICB0b2tlbml6ZXIuZmVlZChFTkNPREVSLmVuY29kZSh2YWx1ZSkpO1xuXG4gICAgdG9rZW5pemVyLmRvbmUoKTtcblxuICAgIHBhcnNlci5kb25lKCk7XG5cbiAgICBjb25zdCBleGVjdXRlID0gYXN5bmMgKGdsdWUsIG1vZHVsZSkgPT4ge1xuICAgICAgICBsZXQga2V5O1xuICAgICAgICBmb3IgKGNvbnN0IFtpS2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoZ2x1ZS5wcm9jZWR1cmVzKSkge1xuICAgICAgICAgICAgY29uc3QgeyBuYW1lLCBwYXRoIH0gPSB2YWx1ZTtcbiAgICAgICAgICAgIGlmIChuYW1lID09PSAnbWFpbicgJiYgcGF0aCA9PT0gJ01vZHVsZScpIHtcbiAgICAgICAgICAgICAgICBrZXkgPSBpS2V5O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChrZXkpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbWVtb3J5ID0gbmV3IFdlYkFzc2VtYmx5Lk1lbW9yeSh7XG4gICAgICAgICAgICAgICAgICAgIGluaXRpYWw6IDEyOFxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgY29uc3Qgc3RhdGUgPSBNZW1vcnlNYW5hZ2VyKG1lbW9yeSk7XG4gICAgICAgICAgICAgICAgY29uc3QgZHJhd2VyID0gRHJhdyhtZW1vcnksIG91dHB1dEVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGVzID0gRGF0ZXMoKTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uSW1wb3J0cyA9IE9iamVjdC5mcmVlemUoe1xuICAgICAgICAgICAgICAgICAgICBpbXBvcnRzOiB7fVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgbWVtb3J5SW1wb3J0ID0gJ21lbW9yeSc7XG5cbiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhnbHVlLmltcG9ydHMpLmZvckVhY2goKGltcG9ydEtleSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdGVbaW1wb3J0S2V5XSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb25JbXBvcnRzLmltcG9ydHNbaW1wb3J0S2V5XSA9IHN0YXRlW2ltcG9ydEtleV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGRyYXdlcltpbXBvcnRLZXldKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbkltcG9ydHMuaW1wb3J0c1tpbXBvcnRLZXldID0gZHJhd2VyW2ltcG9ydEtleV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGVzW2ltcG9ydEtleV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uSW1wb3J0cy5pbXBvcnRzW2ltcG9ydEtleV0gPSBkYXRlc1tpbXBvcnRLZXldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbXBvcnRLZXkgPT09IG1lbW9yeUltcG9ydCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb25JbXBvcnRzLmltcG9ydHNbaW1wb3J0S2V5XSA9IG1lbW9yeTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgbW9kdWxlQ29tcGlsZWQgPSBhd2FpdCBXZWJBc3NlbWJseS5jb21waWxlKG1vZHVsZSk7XG4gICAgICAgICAgICAgICAgY29uc3QgbW9kdWxlSW5zdGFuY2UgPSBhd2FpdCBXZWJBc3NlbWJseS5pbnN0YW50aWF0ZShtb2R1bGVDb21waWxlZCwgZGVzY3JpcHRpb25JbXBvcnRzKTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IHByb2NlZHVyZSA9IG1vZHVsZUluc3RhbmNlLmV4cG9ydHNba2V5XTtcbiAgICAgICAgICAgICAgICBpZiAocHJvY2VkdXJlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghb3V0cHV0RWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmFpbHVyZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ0Vycm9yOiBPdXRwdXQgZWxlbWVudCBub3QgZm91bmQuIENsaWNrIFwiUnVuXCIgYWdhaW4gZm9yIHJlLWV2YWx1YXRpb24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IDEwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDBcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAob3V0cHV0RWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSBwcm9jZWR1cmUoKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAob3V0cHV0RWxlbWVudCl7XG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXQgPSBvdXRwdXRFbGVtZW50LmlubmVySFRNTDtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgZmFpbHVyZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGUubWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogMTAwLFxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogMCxcbiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAwXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgZmFpbHVyZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ0Vycm9yOiBNaXNzaW5nIG1haW4gZnVuY3Rpb24uIEV2ZXJ5IEZsb2dyYW0gcHJvZ3JhbSBtdXN0IGluY2x1ZGUgYW4gZW50cnkgcG9pbnQgZGVmaW5lZCBhcyB0aGUgbWFpbiBmdW5jdGlvbi4nLFxuICAgICAgICAgICAgICAgIHR5cGU6IDEwMSxcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogMCxcbiAgICAgICAgICAgICAgICBsZW5ndGg6IDBcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGlmIChyZXByZXNlbnRhdGlvbikge1xuICAgICAgICBjb25zdCBjb21waWxlck9wdGlvbnMgPSBPYmplY3QuZnJlZXplKHtcbiAgICAgICAgICAgIG1lbW9yeTogdHJ1ZVxuICAgICAgICB9KTtcblxuICAgICAgICBjb25zdCBbZ2x1ZSwgbW9kdWxlXSA9IENvbXBpbGVyLmNvbXBpbGUocmVwcmVzZW50YXRpb24sIGNvbXBpbGVyT3B0aW9ucyk7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gYXdhaXQgZXhlY3V0ZShnbHVlLCBtb2R1bGUpO1xuXG4gICAgICAgIHJldHVybiB7IGZhaWx1cmVzLCB2YWx1ZSB9XG4gICAgfVxuICAgIGVsc2V7XG4gICAgICAgIC8vY291bGRuJ3QgcGFyc2UsIHJldHVybiBwYXJzaW5nIGVycm9yc1xuICAgICAgICByZXR1cm4geyBmYWlsdXJlcywgdmFsdWU6IG51bGx9XG4gICAgfVxufTtcblxuZXhwb3J0IHtydW5uZXIsIFBhcnNlciwgVG9rZW5pemVyLCBDb21waWxlciwgTWVtb3J5TWFuYWdlciwgRHJhdywgRGF0ZXMsIFNJTVBMRV9JTVBPUlRTfVxuXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@munezero/floparser/index.js\n"));

/***/ })

});