"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/@munezero/floparser/index.js":
/*!******************************************!*\
  !*** ./app/@munezero/floparser/index.js ***!
  \******************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Compiler: () => (/* reexport safe */ _Compilers_SimplerWASM_index_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   Dates: () => (/* reexport safe */ _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDate),\n/* harmony export */   Draw: () => (/* reexport safe */ _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDrawer),\n/* harmony export */   MemoryManager: () => (/* reexport safe */ _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createMemoryManager),\n/* harmony export */   Parser: () => (/* reexport safe */ _SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   SIMPLE_IMPORTS: () => (/* reexport safe */ _Tests_Shared_index_mjs__WEBPACK_IMPORTED_MODULE_4__.SIMPLE_IMPORTS),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _Tokenizer_index_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   runner: () => (/* binding */ runner)\n/* harmony export */ });\n/* harmony import */ var _Tokenizer_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tokenizer/index.mjs */ \"(app-pages-browser)/./app/@munezero/floparser/Tokenizer/index.mjs\");\n/* harmony import */ var _SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SimpleParser/index.mjs */ \"(app-pages-browser)/./app/@munezero/floparser/SimpleParser/index.mjs\");\n/* harmony import */ var _Compilers_SimplerWASM_index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Compilers/SimplerWASM/index.mjs */ \"(app-pages-browser)/./app/@munezero/floparser/Compilers/SimplerWASM/index.mjs\");\n/* harmony import */ var _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Compilers/MemoryManager/index.mjs */ \"(app-pages-browser)/./app/@munezero/floparser/Compilers/MemoryManager/index.mjs\");\n/* harmony import */ var _Tests_Shared_index_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tests/Shared/index.mjs */ \"(app-pages-browser)/./app/@munezero/floparser/Tests/Shared/index.mjs\");\n\n\n\n\n\n//npm publish --access=public\nconst runner = async (param)=>{\n    let { value, outputElement } = param;\n    let output = '';\n    let failures = [];\n    let representation = null;\n    const ENCODER = new TextEncoder();\n    const tokenizer = new _Tokenizer_index_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    const parser = _SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n        path: 'Module',\n        imports: _Tests_Shared_index_mjs__WEBPACK_IMPORTED_MODULE_4__.SIMPLE_IMPORTS\n    });\n    parser.on(_SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].EVENT_FAIL, (failure)=>{\n        failures = [\n            ...failures,\n            failure\n        ];\n        representation = null;\n    });\n    parser.on(_SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].EVENT_DONE, (data)=>{\n        representation = data;\n    });\n    tokenizer.on('token', (position, array, index, length)=>{\n        parser.feed(position, array, index, length);\n    });\n    tokenizer.feed(ENCODER.encode(value));\n    tokenizer.done();\n    parser.done();\n    const execute = async (glue, module)=>{\n        let key;\n        for (const [iKey, value] of Object.entries(glue.procedures)){\n            const { name, path } = value;\n            if (name === 'main' && path === 'Module') {\n                key = iKey;\n                break;\n            }\n        }\n        if (key) {\n            try {\n                const memory = new WebAssembly.Memory({\n                    initial: 128\n                });\n                const state = (0,_Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createMemoryManager)(memory);\n                const drawer = (0,_Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDrawer)(memory, outputElement);\n                const dates = (0,_Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDate)();\n                const descriptionImports = Object.freeze({\n                    imports: {}\n                });\n                const memoryImport = 'memory';\n                Object.keys(glue.imports).forEach((importKey)=>{\n                    if (state[importKey]) {\n                        descriptionImports.imports[importKey] = state[importKey];\n                    }\n                    if (drawer[importKey]) {\n                        descriptionImports.imports[importKey] = drawer[importKey];\n                    }\n                    if (dates[importKey]) {\n                        descriptionImports.imports[importKey] = dates[importKey];\n                    }\n                    if (importKey === memoryImport) {\n                        descriptionImports.imports[importKey] = memory;\n                    }\n                });\n                const moduleCompiled = await WebAssembly.compile(module);\n                const moduleInstance = await WebAssembly.instantiate(moduleCompiled, descriptionImports);\n                const procedure = moduleInstance.exports[key];\n                if (procedure) {\n                    if (!outputElement) {\n                        failures.push({\n                            message: 'Error: Output element not found. Click \"Run\" again for re-evaluation',\n                            type: 100,\n                            position: 0,\n                            length: 0\n                        });\n                    }\n                    if (outputElement) {\n                        outputElement.innerHTML = '';\n                    }\n                    let value = procedure();\n                    if (outputElement) {\n                        output = outputElement.innerHTML;\n                    }\n                    return output;\n                }\n            } catch (e) {\n                failures.push({\n                    message: e.message,\n                    type: 100,\n                    position: 0,\n                    length: 0\n                });\n                return null;\n            }\n        } else {\n            failures.push({\n                message: 'Error: Missing main function. Every Flogram program must include an entry point defined as the main function.',\n                type: 101,\n                position: 0,\n                length: 0\n            });\n            return null;\n        }\n    };\n    if (representation) {\n        const compilerOptions = Object.freeze({\n            memory: true\n        });\n        const [glue, module] = _Compilers_SimplerWASM_index_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].compile(representation, compilerOptions);\n        const value = await execute(glue, module);\n        return {\n            failures,\n            value\n        };\n    } else {\n        //couldn't parse, return parsing errors\n        return {\n            failures,\n            value: null\n        };\n    }\n};\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9AbXVuZXplcm8vZmxvcGFyc2VyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNkM7QUFDQTtBQUNXO0FBQzRFO0FBQzNFO0FBRXpELDZCQUE2QjtBQUU3QixNQUFNVSxTQUFTO1FBQU8sRUFBQ0MsS0FBSyxFQUFFQyxhQUFhLEVBQUM7SUFDeEMsSUFBSUMsU0FBUztJQUViLElBQUlDLFdBQVcsRUFBRTtJQUVqQixJQUFJQyxpQkFBaUI7SUFFckIsTUFBTUMsVUFBVSxJQUFJQztJQUVwQixNQUFNQyxZQUFZLElBQUlsQiw0REFBU0E7SUFFL0IsTUFBTW1CLFNBQVNsQiwrREFBTUEsQ0FBQ21CLE1BQU0sQ0FBQztRQUN6QkMsTUFBTTtRQUNOQyxTQUFTYixtRUFBY0E7SUFDM0I7SUFFQVUsT0FBT0ksRUFBRSxDQUFDdEIsK0RBQU1BLENBQUN1QixVQUFVLEVBQUUsQ0FBQ0M7UUFDMUJYLFdBQVc7ZUFBSUE7WUFBVVc7U0FBUTtRQUNqQ1YsaUJBQWlCO0lBQ3JCO0lBRUFJLE9BQU9JLEVBQUUsQ0FBQ3RCLCtEQUFNQSxDQUFDeUIsVUFBVSxFQUFFLENBQUNDO1FBQzFCWixpQkFBaUJZO0lBQ3JCO0lBRUFULFVBQVVLLEVBQUUsQ0FBQyxTQUFTLENBQUNLLFVBQVVDLE9BQU9DLE9BQU9DO1FBQzNDWixPQUFPYSxJQUFJLENBQUNKLFVBQVVDLE9BQU9DLE9BQU9DO0lBQ3hDO0lBRUFiLFVBQVVjLElBQUksQ0FBQ2hCLFFBQVFpQixNQUFNLENBQUN0QjtJQUU5Qk8sVUFBVWdCLElBQUk7SUFFZGYsT0FBT2UsSUFBSTtJQUVYLE1BQU1DLFVBQVUsT0FBT0MsTUFBTUM7UUFDekIsSUFBSUM7UUFDSixLQUFLLE1BQU0sQ0FBQ0MsTUFBTTVCLE1BQU0sSUFBSTZCLE9BQU9DLE9BQU8sQ0FBQ0wsS0FBS00sVUFBVSxFQUFHO1lBQ3pELE1BQU0sRUFBRUMsSUFBSSxFQUFFdEIsSUFBSSxFQUFFLEdBQUdWO1lBQ3ZCLElBQUlnQyxTQUFTLFVBQVV0QixTQUFTLFVBQVU7Z0JBQ3RDaUIsTUFBTUM7Z0JBQ047WUFDSjtRQUNKO1FBQ0EsSUFBSUQsS0FBSztZQUNMLElBQUk7Z0JBQ0EsTUFBTU0sU0FBUyxJQUFJQyxZQUFZQyxNQUFNLENBQUM7b0JBQ2xDQyxTQUFTO2dCQUNiO2dCQUVBLE1BQU1DLFFBQVE1Qyx1RkFBYUEsQ0FBQ3dDO2dCQUM1QixNQUFNSyxTQUFTM0MsZ0ZBQUlBLENBQUNzQyxRQUFRaEM7Z0JBQzVCLE1BQU1zQyxRQUFRMUMsOEVBQUtBO2dCQUVuQixNQUFNMkMscUJBQXFCWCxPQUFPWSxNQUFNLENBQUM7b0JBQ3JDOUIsU0FBUyxDQUFDO2dCQUNkO2dCQUVBLE1BQU0rQixlQUFlO2dCQUVyQmIsT0FBT2MsSUFBSSxDQUFDbEIsS0FBS2QsT0FBTyxFQUFFaUMsT0FBTyxDQUFDLENBQUNDO29CQUMvQixJQUFJUixLQUFLLENBQUNRLFVBQVUsRUFBRTt3QkFDbEJMLG1CQUFtQjdCLE9BQU8sQ0FBQ2tDLFVBQVUsR0FBR1IsS0FBSyxDQUFDUSxVQUFVO29CQUM1RDtvQkFDQSxJQUFJUCxNQUFNLENBQUNPLFVBQVUsRUFBRTt3QkFDbkJMLG1CQUFtQjdCLE9BQU8sQ0FBQ2tDLFVBQVUsR0FBR1AsTUFBTSxDQUFDTyxVQUFVO29CQUM3RDtvQkFDQSxJQUFJTixLQUFLLENBQUNNLFVBQVUsRUFBRTt3QkFDbEJMLG1CQUFtQjdCLE9BQU8sQ0FBQ2tDLFVBQVUsR0FBR04sS0FBSyxDQUFDTSxVQUFVO29CQUM1RDtvQkFDQSxJQUFJQSxjQUFjSCxjQUFjO3dCQUM1QkYsbUJBQW1CN0IsT0FBTyxDQUFDa0MsVUFBVSxHQUFHWjtvQkFDNUM7Z0JBQ0o7Z0JBRUEsTUFBTWEsaUJBQWlCLE1BQU1aLFlBQVlhLE9BQU8sQ0FBQ3JCO2dCQUNqRCxNQUFNc0IsaUJBQWlCLE1BQU1kLFlBQVllLFdBQVcsQ0FBQ0gsZ0JBQWdCTjtnQkFFckUsTUFBTVUsWUFBWUYsZUFBZUcsT0FBTyxDQUFDeEIsSUFBSTtnQkFDN0MsSUFBSXVCLFdBQVc7b0JBQ1gsSUFBSSxDQUFDakQsZUFBZTt3QkFDaEJFLFNBQVNpRCxJQUFJLENBQUM7NEJBQ1ZDLFNBQVM7NEJBQ1RDLE1BQU07NEJBQ05yQyxVQUFVOzRCQUNWRyxRQUFRO3dCQUNaO29CQUNKO29CQUVBLElBQUluQixlQUFlO3dCQUNmQSxjQUFjc0QsU0FBUyxHQUFHO29CQUM5QjtvQkFDQSxJQUFJdkQsUUFBUWtEO29CQUVaLElBQUlqRCxlQUFjO3dCQUNkQyxTQUFTRCxjQUFjc0QsU0FBUztvQkFDcEM7b0JBRUEsT0FBT3JEO2dCQUNYO1lBQ0osRUFBRSxPQUFPc0QsR0FBRztnQkFDUnJELFNBQVNpRCxJQUFJLENBQUM7b0JBQ1ZDLFNBQVNHLEVBQUVILE9BQU87b0JBQ2xCQyxNQUFNO29CQUNOckMsVUFBVTtvQkFDVkcsUUFBUTtnQkFDWjtnQkFDQSxPQUFPO1lBQ1g7UUFDSixPQUNJO1lBQ0FqQixTQUFTaUQsSUFBSSxDQUFDO2dCQUNWQyxTQUFTO2dCQUNUQyxNQUFNO2dCQUNOckMsVUFBVTtnQkFDVkcsUUFBUTtZQUNaO1lBRUEsT0FBTztRQUNYO0lBQ0o7SUFFQSxJQUFJaEIsZ0JBQWdCO1FBQ2hCLE1BQU1xRCxrQkFBa0I1QixPQUFPWSxNQUFNLENBQUM7WUFDbENSLFFBQVE7UUFDWjtRQUVBLE1BQU0sQ0FBQ1IsTUFBTUMsT0FBTyxHQUFHbkMsd0VBQVFBLENBQUN3RCxPQUFPLENBQUMzQyxnQkFBZ0JxRDtRQUN4RCxNQUFNekQsUUFBUSxNQUFNd0IsUUFBUUMsTUFBTUM7UUFFbEMsT0FBTztZQUFFdkI7WUFBVUg7UUFBTTtJQUM3QixPQUNJO1FBQ0EsdUNBQXVDO1FBQ3ZDLE9BQU87WUFBRUc7WUFBVUgsT0FBTztRQUFJO0lBQ2xDO0FBQ0o7QUFFd0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcSkFTT05cXERlc2t0b3BcXE5ldyBmb2xkZXJcXGFwcFxcQG11bmV6ZXJvXFxmbG9wYXJzZXJcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUb2tlbml6ZXIgZnJvbSAnLi9Ub2tlbml6ZXIvaW5kZXgubWpzJ1xuaW1wb3J0IFBhcnNlciBmcm9tICcuL1NpbXBsZVBhcnNlci9pbmRleC5tanMnXG5pbXBvcnQgQ29tcGlsZXIgZnJvbSAnLi9Db21waWxlcnMvU2ltcGxlcldBU00vaW5kZXgubWpzJ1xuaW1wb3J0IHsgY3JlYXRlTWVtb3J5TWFuYWdlciBhcyBNZW1vcnlNYW5hZ2VyLCBjcmVhdGVEcmF3ZXIgYXMgRHJhdywgY3JlYXRlRGF0ZSBhcyBEYXRlc30gZnJvbSAnLi9Db21waWxlcnMvTWVtb3J5TWFuYWdlci9pbmRleC5tanMnXG5pbXBvcnQgeyBTSU1QTEVfSU1QT1JUUyB9IGZyb20gJy4vVGVzdHMvU2hhcmVkL2luZGV4Lm1qcydcblxuLy9ucG0gcHVibGlzaCAtLWFjY2Vzcz1wdWJsaWNcblxuY29uc3QgcnVubmVyID0gYXN5bmMgKHt2YWx1ZSwgb3V0cHV0RWxlbWVudH0pID0+IHtcbiAgICBsZXQgb3V0cHV0ID0gJyc7XG5cbiAgICBsZXQgZmFpbHVyZXMgPSBbXTtcblxuICAgIGxldCByZXByZXNlbnRhdGlvbiA9IG51bGw7XG5cbiAgICBjb25zdCBFTkNPREVSID0gbmV3IFRleHRFbmNvZGVyKCk7XG5cbiAgICBjb25zdCB0b2tlbml6ZXIgPSBuZXcgVG9rZW5pemVyKCk7XG5cbiAgICBjb25zdCBwYXJzZXIgPSBQYXJzZXIuY3JlYXRlKHtcbiAgICAgICAgcGF0aDogJ01vZHVsZScsXG4gICAgICAgIGltcG9ydHM6IFNJTVBMRV9JTVBPUlRTXG4gICAgfSk7XG5cbiAgICBwYXJzZXIub24oUGFyc2VyLkVWRU5UX0ZBSUwsIChmYWlsdXJlKSA9PiB7XG4gICAgICAgIGZhaWx1cmVzID0gWy4uLmZhaWx1cmVzLCBmYWlsdXJlXTtcbiAgICAgICAgcmVwcmVzZW50YXRpb24gPSBudWxsO1xuICAgIH0pO1xuXG4gICAgcGFyc2VyLm9uKFBhcnNlci5FVkVOVF9ET05FLCAoZGF0YSkgPT4ge1xuICAgICAgICByZXByZXNlbnRhdGlvbiA9IGRhdGE7XG4gICAgfSk7XG5cbiAgICB0b2tlbml6ZXIub24oJ3Rva2VuJywgKHBvc2l0aW9uLCBhcnJheSwgaW5kZXgsIGxlbmd0aCkgPT4ge1xuICAgICAgICBwYXJzZXIuZmVlZChwb3NpdGlvbiwgYXJyYXksIGluZGV4LCBsZW5ndGgpO1xuICAgIH0pO1xuXG4gICAgdG9rZW5pemVyLmZlZWQoRU5DT0RFUi5lbmNvZGUodmFsdWUpKTtcblxuICAgIHRva2VuaXplci5kb25lKCk7XG5cbiAgICBwYXJzZXIuZG9uZSgpO1xuXG4gICAgY29uc3QgZXhlY3V0ZSA9IGFzeW5jIChnbHVlLCBtb2R1bGUpID0+IHtcbiAgICAgICAgbGV0IGtleTtcbiAgICAgICAgZm9yIChjb25zdCBbaUtleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGdsdWUucHJvY2VkdXJlcykpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgbmFtZSwgcGF0aCB9ID0gdmFsdWU7XG4gICAgICAgICAgICBpZiAobmFtZSA9PT0gJ21haW4nICYmIHBhdGggPT09ICdNb2R1bGUnKSB7XG4gICAgICAgICAgICAgICAga2V5ID0gaUtleTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoa2V5KSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG1lbW9yeSA9IG5ldyBXZWJBc3NlbWJseS5NZW1vcnkoe1xuICAgICAgICAgICAgICAgICAgICBpbml0aWFsOiAxMjhcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRlID0gTWVtb3J5TWFuYWdlcihtZW1vcnkpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGRyYXdlciA9IERyYXcobWVtb3J5LCBvdXRwdXRFbGVtZW50KTtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRlcyA9IERhdGVzKCk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBkZXNjcmlwdGlvbkltcG9ydHMgPSBPYmplY3QuZnJlZXplKHtcbiAgICAgICAgICAgICAgICAgICAgaW1wb3J0czoge31cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IG1lbW9yeUltcG9ydCA9ICdtZW1vcnknO1xuXG4gICAgICAgICAgICAgICAgT2JqZWN0LmtleXMoZ2x1ZS5pbXBvcnRzKS5mb3JFYWNoKChpbXBvcnRLZXkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXRlW2ltcG9ydEtleV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uSW1wb3J0cy5pbXBvcnRzW2ltcG9ydEtleV0gPSBzdGF0ZVtpbXBvcnRLZXldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChkcmF3ZXJbaW1wb3J0S2V5XSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb25JbXBvcnRzLmltcG9ydHNbaW1wb3J0S2V5XSA9IGRyYXdlcltpbXBvcnRLZXldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRlc1tpbXBvcnRLZXldKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbkltcG9ydHMuaW1wb3J0c1tpbXBvcnRLZXldID0gZGF0ZXNbaW1wb3J0S2V5XTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoaW1wb3J0S2V5ID09PSBtZW1vcnlJbXBvcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uSW1wb3J0cy5pbXBvcnRzW2ltcG9ydEtleV0gPSBtZW1vcnk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IG1vZHVsZUNvbXBpbGVkID0gYXdhaXQgV2ViQXNzZW1ibHkuY29tcGlsZShtb2R1bGUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1vZHVsZUluc3RhbmNlID0gYXdhaXQgV2ViQXNzZW1ibHkuaW5zdGFudGlhdGUobW9kdWxlQ29tcGlsZWQsIGRlc2NyaXB0aW9uSW1wb3J0cyk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBwcm9jZWR1cmUgPSBtb2R1bGVJbnN0YW5jZS5leHBvcnRzW2tleV07XG4gICAgICAgICAgICAgICAgaWYgKHByb2NlZHVyZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIW91dHB1dEVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZhaWx1cmVzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdFcnJvcjogT3V0cHV0IGVsZW1lbnQgbm90IGZvdW5kLiBDbGljayBcIlJ1blwiIGFnYWluIGZvciByZS1ldmFsdWF0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAxMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAwXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKG91dHB1dEVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gcHJvY2VkdXJlKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKG91dHB1dEVsZW1lbnQpe1xuICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0ID0gb3V0cHV0RWxlbWVudC5pbm5lckhUTUw7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBmYWlsdXJlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZS5tZXNzYWdlLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiAxMDAsXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAwLFxuICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IDBcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICBmYWlsdXJlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRXJyb3I6IE1pc3NpbmcgbWFpbiBmdW5jdGlvbi4gRXZlcnkgRmxvZ3JhbSBwcm9ncmFtIG11c3QgaW5jbHVkZSBhbiBlbnRyeSBwb2ludCBkZWZpbmVkIGFzIHRoZSBtYWluIGZ1bmN0aW9uLicsXG4gICAgICAgICAgICAgICAgdHlwZTogMTAxLFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAwLFxuICAgICAgICAgICAgICAgIGxlbmd0aDogMFxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgaWYgKHJlcHJlc2VudGF0aW9uKSB7XG4gICAgICAgIGNvbnN0IGNvbXBpbGVyT3B0aW9ucyA9IE9iamVjdC5mcmVlemUoe1xuICAgICAgICAgICAgbWVtb3J5OiB0cnVlXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IFtnbHVlLCBtb2R1bGVdID0gQ29tcGlsZXIuY29tcGlsZShyZXByZXNlbnRhdGlvbiwgY29tcGlsZXJPcHRpb25zKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBhd2FpdCBleGVjdXRlKGdsdWUsIG1vZHVsZSk7XG5cbiAgICAgICAgcmV0dXJuIHsgZmFpbHVyZXMsIHZhbHVlIH1cbiAgICB9XG4gICAgZWxzZXtcbiAgICAgICAgLy9jb3VsZG4ndCBwYXJzZSwgcmV0dXJuIHBhcnNpbmcgZXJyb3JzXG4gICAgICAgIHJldHVybiB7IGZhaWx1cmVzLCB2YWx1ZTogbnVsbH1cbiAgICB9XG59O1xuXG5leHBvcnQge3J1bm5lciwgUGFyc2VyLCBUb2tlbml6ZXIsIENvbXBpbGVyLCBNZW1vcnlNYW5hZ2VyLCBEcmF3LCBEYXRlcywgU0lNUExFX0lNUE9SVFN9XG5cbiJdLCJuYW1lcyI6WyJUb2tlbml6ZXIiLCJQYXJzZXIiLCJDb21waWxlciIsImNyZWF0ZU1lbW9yeU1hbmFnZXIiLCJNZW1vcnlNYW5hZ2VyIiwiY3JlYXRlRHJhd2VyIiwiRHJhdyIsImNyZWF0ZURhdGUiLCJEYXRlcyIsIlNJTVBMRV9JTVBPUlRTIiwicnVubmVyIiwidmFsdWUiLCJvdXRwdXRFbGVtZW50Iiwib3V0cHV0IiwiZmFpbHVyZXMiLCJyZXByZXNlbnRhdGlvbiIsIkVOQ09ERVIiLCJUZXh0RW5jb2RlciIsInRva2VuaXplciIsInBhcnNlciIsImNyZWF0ZSIsInBhdGgiLCJpbXBvcnRzIiwib24iLCJFVkVOVF9GQUlMIiwiZmFpbHVyZSIsIkVWRU5UX0RPTkUiLCJkYXRhIiwicG9zaXRpb24iLCJhcnJheSIsImluZGV4IiwibGVuZ3RoIiwiZmVlZCIsImVuY29kZSIsImRvbmUiLCJleGVjdXRlIiwiZ2x1ZSIsIm1vZHVsZSIsImtleSIsImlLZXkiLCJPYmplY3QiLCJlbnRyaWVzIiwicHJvY2VkdXJlcyIsIm5hbWUiLCJtZW1vcnkiLCJXZWJBc3NlbWJseSIsIk1lbW9yeSIsImluaXRpYWwiLCJzdGF0ZSIsImRyYXdlciIsImRhdGVzIiwiZGVzY3JpcHRpb25JbXBvcnRzIiwiZnJlZXplIiwibWVtb3J5SW1wb3J0Iiwia2V5cyIsImZvckVhY2giLCJpbXBvcnRLZXkiLCJtb2R1bGVDb21waWxlZCIsImNvbXBpbGUiLCJtb2R1bGVJbnN0YW5jZSIsImluc3RhbnRpYXRlIiwicHJvY2VkdXJlIiwiZXhwb3J0cyIsInB1c2giLCJtZXNzYWdlIiwidHlwZSIsImlubmVySFRNTCIsImUiLCJjb21waWxlck9wdGlvbnMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/@munezero/floparser/index.js\n"));

/***/ })

});