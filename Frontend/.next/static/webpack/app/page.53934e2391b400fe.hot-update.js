"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/@munezero/floparser/index.js":
/*!******************************************!*\
  !*** ./app/@munezero/floparser/index.js ***!
  \******************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Compiler: () => (/* reexport safe */ _Compilers_SimplerWASM_index_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   Dates: () => (/* reexport safe */ _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDate),\n/* harmony export */   Draw: () => (/* reexport safe */ _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDrawer),\n/* harmony export */   MemoryManager: () => (/* reexport safe */ _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createMemoryManager),\n/* harmony export */   Parser: () => (/* reexport safe */ _SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   SIMPLE_IMPORTS: () => (/* reexport safe */ _Tests_Shared_index_mjs__WEBPACK_IMPORTED_MODULE_4__.SIMPLE_IMPORTS),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _Tokenizer_index_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _Tokenizer_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tokenizer/index.mjs */ \"(app-pages-browser)/./app/@munezero/floparser/Tokenizer/index.mjs\");\n/* harmony import */ var _SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SimpleParser/index.mjs */ \"(app-pages-browser)/./app/@munezero/floparser/SimpleParser/index.mjs\");\n/* harmony import */ var _Compilers_SimplerWASM_index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Compilers/SimplerWASM/index.mjs */ \"(app-pages-browser)/./app/@munezero/floparser/Compilers/SimplerWASM/index.mjs\");\n/* harmony import */ var _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Compilers/MemoryManager/index.mjs */ \"(app-pages-browser)/./app/@munezero/floparser/Compilers/MemoryManager/index.mjs\");\n/* harmony import */ var _Tests_Shared_index_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tests/Shared/index.mjs */ \"(app-pages-browser)/./app/@munezero/floparser/Tests/Shared/index.mjs\");\n\n\n\n\n\n//npm publish --access=public\nconst execute = async (glue, module)=>{\n    let key;\n    for (const [iKey, value] of Object.entries(glue.procedures)){\n        const { name, path } = value;\n        if (name === 'main' && path === 'Module') {\n            key = iKey;\n            break;\n        }\n    }\n    if (key) {\n        try {\n            const memory = new WebAssembly.Memory({\n                initial: 128\n            });\n            const state = (0,_Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createMemoryManager)(memory);\n            const drawer = (0,_Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDrawer)(memory, outputElement);\n            const dates = (0,_Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDate)();\n            const descriptionImports = Object.freeze({\n                imports: {}\n            });\n            const memoryImport = 'memory';\n            Object.keys(glue.imports).forEach((importKey)=>{\n                if (state[importKey]) {\n                    descriptionImports.imports[importKey] = state[importKey];\n                }\n                if (drawer[importKey]) {\n                    descriptionImports.imports[importKey] = drawer[importKey];\n                }\n                if (dates[importKey]) {\n                    descriptionImports.imports[importKey] = dates[importKey];\n                }\n                if (importKey === memoryImport) {\n                    descriptionImports.imports[importKey] = memory;\n                }\n            });\n            const moduleCompiled = await WebAssembly.compile(module);\n            const moduleInstance = await WebAssembly.instantiate(moduleCompiled, descriptionImports);\n            const procedure = moduleInstance.exports[key];\n            if (procedure) {\n                if (!outputElement) {\n                    failures.push({\n                        message: 'Error: Output element not found. Click \"Run\" again for re-evaluation',\n                        type: 100,\n                        position: 0,\n                        length: 0\n                    });\n                }\n                if (outputElement) {\n                    outputElement.innerHTML = '';\n                }\n                let value = procedure();\n                if (outputElement) {\n                    output = outputElement.innerHTML;\n                }\n                return output;\n            }\n        } catch (e) {\n            failures.push({\n                message: e.message,\n                type: 100,\n                position: 0,\n                length: 0\n            });\n            return null;\n        }\n    } else {\n        failures.push({\n            message: 'Error: Missing main function. Every Flogram program must include an entry point defined as the main function.',\n            type: 101,\n            position: 0,\n            length: 0\n        });\n        return null;\n    }\n};\nconst run = (value)=>new Promise(async (resolve, reject)=>{\n        let output1 = '';\n        const errors = [];\n        let representation = null;\n        const ENCODER = new TextEncoder();\n        const tokenizer = new _Tokenizer_index_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        const parser = _SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n            path: 'Module',\n            imports: _Tests_Shared_index_mjs__WEBPACK_IMPORTED_MODULE_4__.SIMPLE_IMPORTS\n        });\n        parser.on(_SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].EVENT_FAIL, (failure)=>{\n            failures = [\n                ...failures,\n                failure\n            ];\n            representation = null;\n        });\n        parser.on(_SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].EVENT_DONE, (data)=>{\n            representation = data;\n        });\n        tokenizer.on('token', (position, array, index, length)=>{\n            parser.feed(position, array, index, length);\n        });\n        tokenizer.feed(ENCODER.encode(value));\n        tokenizer.done();\n        parser.done();\n        if (representation) {\n            const compilerOptions = Object.freeze({\n                memory: true\n            });\n            const [glue, module] = _Compilers_SimplerWASM_index_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].compile(representation, compilerOptions);\n            const value = await execute(glue, module);\n            return {\n                failures,\n                value\n            };\n        } else {\n            //couldn't parse, return parsing errors\n            return {\n                failures,\n                value: null\n            };\n        }\n    });\n// const runner = async ({value, outputElement}) => {\n//     let output = '';\n//     let failures = [];\n//     let representation = null;\n//     const ENCODER = new TextEncoder();\n//     const tokenizer = new Tokenizer();\n//     const parser = Parser.create({\n//         path: 'Module',\n//         imports: SIMPLE_IMPORTS\n//     });\n//     parser.on(Parser.EVENT_FAIL, (failure) => {\n//         failures = [...failures, failure];\n//         representation = null;\n//     });\n//     parser.on(Parser.EVENT_DONE, (data) => {\n//         representation = data;\n//     });\n//     tokenizer.on('token', (position, array, index, length) => {\n//         parser.feed(position, array, index, length);\n//     });\n//     tokenizer.feed(ENCODER.encode(value));\n//     tokenizer.done();\n//     parser.done();\n//     if (representation) {\n//         const compilerOptions = Object.freeze({\n//             memory: true\n//         });\n//         const [glue, module] = Compiler.compile(representation, compilerOptions);\n//         const value = await execute(glue, module);\n//         return { failures, value }\n//     }\n//     else{\n//         //couldn't parse, return parsing errors\n//         return { failures, value: null}\n//     }\n// };\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/@munezero/floparser/index.js\n"));

/***/ })

});