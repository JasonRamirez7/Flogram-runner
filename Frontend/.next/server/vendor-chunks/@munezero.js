"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@munezero";
exports.ids = ["vendor-chunks/@munezero"];
exports.modules = {

/***/ "(ssr)/./node_modules/@munezero/floparser/Compilers/MemoryManager/index.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@munezero/floparser/Compilers/MemoryManager/index.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDate: () => (/* binding */ Eo),\n/* harmony export */   createDrawer: () => (/* binding */ _o),\n/* harmony export */   createMemoryManager: () => (/* binding */ To)\n/* harmony export */ });\nvar y=\"as\",Z=\"=\",G=\"break\",D=\"else\",K=\"enum\",V=\"export\",z=\"if\",m=\"import\",k=\"->\",j=\"is\",J=\"loop\",W=\"mut\",Q=\"native\",v=\"object\",X=\"fn\",$=\"return\",q=\"self\",tt=\"template\",et=Object.freeze({ALIAS:y,ASSIGN:Z,BREAK:G,ELSE:D,ENUMERATION:K,EXPORT:V,IF:z,IMPORT:m,INTO:k,IS:j,LOOP:J,MUTABLE:W,NATIVE:Q,OBJECT:v,PROCEDURE:X,RETURN:$,SELF:q,TEMPLATE:tt}),L=et;var ot=\"assign\",nt=\"arity_match\",rt=\"arity_status\",st=\"array_assignment\",ct=\"branch-match\",Tt=\"branch-default\",Et=\"condition\",_t=\"loop\",it=\"data\",pt=\"generics\",xt=\"enumeration\",St=\"expression\",at=\"instance\",ft=\"Link\",At=\"local\",Rt=\"object\",Ot=\"procedure\",It=\"return\",lt=\"compare\",ut=\"select\",Nt=\"member\",Pt=\"store\",Yt=\"break\",dt=\"literal\",Ct=\"array_access\",Lt=\"valueLink\",Mt=\"linkValue\",bt=\"self\",gt=\"procedure-call\",Ut=\"Maybe\",wt=\"native\",ht=\"move\",Bt=\"String\",Ft=\"Array\",Ht=\"import\",yt=\"library\",Zt=\"constructor\",Gt=\"destructor\",Dt=\"free\",Kt=\"block-end\",Vt=\"default-block\",zt=\"continue\",mt=\"branch\",kt=\"statement\",jt=\"draw\",Jt=\"now\",Wt=\"size\",Qt=\"concatenation\",vt=\"foreach\",Xt=\"while\",$t=\"when\",qt=\"while-condition\",te=\"foreach-condition\",ee=\"foreach-end\",oe=\"for\",ne=\"up_to\",re=\"down_to\",se=\"almost_up_to\",ce=\"almost_down_to\",Te=\"I32\",Ee=\"U32\",_e=\"FP32\",ie=\"I16\",pe=\"U16\",xe=\"U8\",Se=\"I8\",ae=\"FP64\",fe=\"U64\",Ae=\"I64\",Re=\"Char\",Oe=\"block-start\",Ie=\"function-call\",le=\"Bool\",ue=Object.freeze({TYPES_ASSIGN:ot,TYPES_ARRAY:Ft,TYPES_ARITY_MATCH:nt,TYPES_ARITY_STATUS:rt,TYPES_ARRAY_ASSIGNMENT:st,TYPES_BRANCH_MATCH:ct,TYPES_BRANCH_DEFAULT:Tt,TYPES_CONDITION:Et,TYPES_LOOP:_t,TYPES_FOREACH_END:ee,TYPES_WHILE_CONDITION:qt,TYPES_FOREACH_CONDITION:te,TYPES_DATA:it,TYPES_COMPARE:lt,TYPES_GENERICS:pt,TYPES_ENUMERATION:xt,TYPES_EXPRESSION:St,TYPES_INSTANCE:at,TYPES_LINK:ft,TYPES_IMPORT:Ht,TYPES_LOCAL:At,TYPES_OBJECT:Rt,TYPES_PROCEDURE:Ot,TYPES_RETURN:It,TYPES_SELECT:ut,TYPES_MEMBER:Nt,TYPES_STORE:Pt,TYPES_BREAK:Yt,TYPES_LITERAL:dt,TYPES_ARRAY_ACCESS:Ct,TYPES_LINK_TO:Lt,TYPES_VALUE_AT:Mt,TYPES_SELF:bt,TYPES_LIBRARY:yt,TYPES_DROP:gt,TYPES_MAYBE:Ut,TYPES_NATIVE:wt,TYPES_MOVE:ht,TYPES_STRING:Bt,TYPES_CONSTRUCTOR:Zt,TYPES_FREE:Dt,TYPES_DEFAULT_BLOCK:Vt,TYPES_BLOCK_END:Kt,TYPES_CONTINUE:zt,TYPES_BRANCH:mt,TYPES_STATEMENT:kt,TYPES_DESTRUCTOR:Gt,TYPES_DRAW:jt,TYPES_NOW:Jt,TYPES_SIZE:Wt,TYPES_CONCAT:Qt,TYPES_FOREACH:vt,TYPES_WHILE:Xt,TYPES_WHEN:$t,TYPES_FOR:oe,TYPES_UP_TO:ne,TYPES_DOWN_TO:re,TYPES_ALMOST_UP_TO:se,TYPES_ALMOST_DOWN_TO:ce,TYPES_I32:Te,TYPES_FP32:_e,TYPES_FP64:ae,TYPES_U32:Ee,TYPES_I64:Ae,TYPES_U64:fe,TYPES_I16:ie,TYPES_U16:pe,TYPES_I8:Se,TYPES_U8:xe,TYPES_CHAR:Re,TYPES_BOOL:le,TYPES_BLOCK_BEGIN:Oe,TYPES_FUNCTION_CALL:Ie}),M=ue;var Ne=Object.freeze({COLON:58,COMMA:44,DIGIT_ZERO:48,DIGIT_NINE:57,DOT:46,HASHTAG:35,HORIZONTAL_TAB:9,HYPHEN_MINUS:45,LEFT_CURLY_BRACKET:123,LEFT_PARENTHESIS:40,LEFT_SQUARE_BRACKET:91,LINE_BREAK:10,NULL:0,PLUS_SIGN:43,RIGHT_CURLY_BRACKET:125,RIGHT_PARENTHESIS:41,RIGHT_SQUARE_BRACKET:93,SEMICOLON:59,SPACE:32,E_SIGN:101}),b=Ne;var Pe=\"assignment\",Ye=\"Flogram\",de=Object.freeze({K_ASSIGNMENT:Pe,K_FLOGRAM:Ye}),g=de;var Ce=Object.freeze([[43],[45],[42],[47],[37],[110,111,116],[60],[62],[94],[111,114],[33],[61,61],[60,61],[62,61],[33,61],[120,111,114],[97,110,100]]),Le=Ce,U=Le;var Me=Object.freeze({INT_ARRAY_START:9999991,FLOAT_ARRAY_START:9999981,STRING_START:8888891,CHAR_START:8888881,NAT_ON_HORIZON:7777791,BIG_NAT_ON_HORIZON:7777591,FLOAT_ON_HORIZON:7777771,BIG_FLOAT_ON_HORIZON:7777731,END_OF_LINE:66666661}),w=Me;var be=Object.freeze({ENUM_MEMORY_SIZE:12,ENUM_STACK_SIZE:3,ARRAY_MEMORY_SIZE:12,ARRAY_STACK_SIZE:3,ARRAY_DEFAULT_CAPACITY:4,STRING_MEMORY_SIZE:8,STRING_STACK_SIZE:2,OBJECT_MEMORY_SIZE:8,OBJECT_STACK_SIZE:2,NATIVE_MEMORY_SIZE:4,NATIVE_STACK_SIZE:1,NATIVE_SIZE:4,STEP:4,DOUBLE_STEP:8,TRIPPLE_STEP:12}),h=be;var ge=Object.freeze([]),Ue=Object.freeze({}),we=\"\",he=\"\t\",Be=`\n`,Fe=\"UTF-8\";var He=Object.freeze({EMPTY_ARRAY:ge,EMPTY_OBJECT:Ue,EMPTY_STRING:we,HORIZONTAL_TAB:he,LINE_BREAK:Be,UNICODE_TEXT:Fe,Codes:b,Keys:L,Types:M,Keywords:g,Operators:U,DrawStates:w,Sizes:h}),B=He;var{INT_ARRAY_START:ye,FLOAT_ARRAY_START:F,STRING_START:H,CHAR_START:Ze,END_OF_LINE:Ge,NAT_ON_HORIZON:De,BIG_NAT_ON_HORIZON:Ke,FLOAT_ON_HORIZON:Ve,BIG_FLOAT_ON_HORIZON:ze}=B.DrawStates;function To(r){let c=[{start:r.buffer.byteLength/2,size:r.buffer.byteLength/2}],E=new Map,x=[],S=[];function _(){return c}function A(){return E}function R(e){let o=0;for(;o<c.length&&c[o].start<e.start;)o++;c.splice(o,0,e)}let O;function Y(e){O===void 0?O=e:(S.push({first:O,second:e}),O=void 0)}function d(){if(!S.length)return[0,0];let e=S.pop();return[e.first,e.second]}function I(){if(S.length<2)return[0,0];let[e]=S.splice(S.length-2,1);return[e.first,e.second]}function s(e){let o=E.get(e);if(!o)throw new Error(\"Invalid pointer: \"+e);let t=i(o.size),p=new Uint8Array(r.buffer,e,o.size);return new Uint8Array(r.buffer,t,o.size).set(p),t}function T(){let e=Array.from(E.entries());if(e.length<2)return;let[o,t]=e[e.length-2],[p,n]=e[e.length-1]}function i(e){for(let t=0;t<c.length;t++)if(c[t].size>=e){let p=c.splice(t,1);if(p.length>0){let n=p[0];if(n.size>e){let C={start:n.start+e,size:n.size-e};R(C)}return n.size=e,E.set(n.start,n),n.start}}if(r.buffer.byteLength+e>r.buffer.byteLength*r.buffer.byteLength/65536){let t=Math.ceil(e/65536);r.grow(t)}let o={start:r.buffer.byteLength,size:e};return E.set(o.start,o),o.start}function f(e){let o=E.get(e);if(!o){console.error(\"Unable to find block\");return}E.delete(e);for(let t=0;t<c.length;t++)c[t].start+c[t].size===o.start?(o.start=c[t].start,o.size+=c[t].size,c.splice(t,1),t--):o.start+o.size===c[t].start&&(o.size+=c[t].size,c.splice(t,1),t--);R(o)}function a(e){return x.find(o=>o.dataPtr===e)}function l(e){let o=i(4*e).start,t={dataPtr:o,length:0,capacity:4,elementTypeSize:e};return x.push(t),o}function u(e,o){let t=a(e);if(!t)throw new Error(\"Vector not found\");if(t.length>=t.capacity){let n=t.dataPtr;t.dataPtr=i(2*t.capacity*t.elementTypeSize).start,t.capacity*=2;let C=new Uint8Array(r.buffer,n,t.length*t.elementTypeSize);new Uint8Array(r.buffer,t.dataPtr,t.capacity*t.elementTypeSize).set(C),f(n)}let p=new Uint8Array(r.buffer,t.dataPtr+t.length*t.elementTypeSize,t.elementTypeSize);for(let n=0;n<t.elementTypeSize;n++)p[n]=o>>n*8&255;t.length+=1}function N(e,o=4){let t=i(o),p=new Uint8Array(r.buffer,t.start,o);for(let n=0;n<o;n++)p[n]=e>>n*8&255;return t.start}function P(e,o=4){let t=new Uint8Array(r.buffer,e,o),p=0;for(let n=0;n<o;n++)p|=t[n]<<n*8;return p}return{alloc:i,dealloc:f,merge:T,save:Y,undo:d,undoPenultimate:I,createVector:l,pushToVector:u,allocateValue:N,readValue:P,getFreeList:_,getUsedBlocks:A,copy:s}}function Eo(){function r(){return BigInt(Date.now())}return{now:r}}function _o(r,c=void 0){let E=[],x=\"default\",S,_,A,R,O;function Y(s,T,i){let f;return i===F?f=new Float32Array(r.buffer,s,T):f=new Int32Array(r.buffer,s,T),Array.from(f)}function d(s,T){let i=new Int32Array(r.buffer,s,T),f=new Float32Array(r.buffer,s,T),a=\"\",l=!1,u=!1,N=!1,P=!1;for(let e=0;e<i.length;e++){let o=i[e];if(l){a+=o.toString(),l=!1;continue}if(u){a+=f[e].toString(),u=!1;continue}if(N){let t=o,p=i[e+1],n=BigInt(t)+(BigInt(p)<<32n);a+=n.toString(),N=!1,e++;continue}if(P){let t=new Float64Array(r.buffer,s+e*4,1);a+=t[0].toString(),P=!1,e++;continue}if(o===De){l=!0;continue}if(o===Ve){u=!0;continue}if(o===Ke){N=!0;continue}if(o===ze){P=!0;continue}o>=32&&o<=126?a+=String.fromCharCode(o):a+=o.toString()}return a}function I(s){if(s===Ge){if(E.length>0){let T=E.join(\" \");if(c){let i=document.createElement(\"p\");i.innerHTML=T,c.appendChild(i)}else console.log(T);E=[]}return}if(x===\"default\"){if(s===ye||s===F){x=\"array\",O=s,S=void 0,_=void 0;return}if(s===H){x=\"string\",A=void 0,_=void 0;return}if(s===Ze){x=\"char\",R=void 0;return}E.push(s)}else if(x===\"array\"){if(_==null){_=s;return}if(!S){S=s;let T=Y(S,_,O);E.push(T),S=void 0,_=void 0,x=\"default\"}}else if(x===\"string\"){if(s===H)return;if(_==null){_=s;return}if(!A){A=s;let T=d(A,_);E.push(T),A=void 0,_=void 0,x=\"default\"}}else if(x===\"char\"&&!R){R=s;let T=String.fromCharCode(R);E.push(`${T}`),x=\"default\"}}return{draw:I,drawI64:I,drawFP32:I,drawFP64:I,receiveParams:I,readArrayFromMemory:Y}}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@munezero/floparser/Compilers/MemoryManager/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@munezero/floparser/Compilers/SimplerWASM/index.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@munezero/floparser/Compilers/SimplerWASM/index.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Qu)\n/* harmony export */ });\nvar _c=\"as\",Oc=\"=\",bc=\"break\",dc=\"else\",mc=\"enum\",Tc=\"export\",gc=\"if\",yc=\"import\",xc=\"->\",Ic=\"is\",Ac=\"loop\",Nc=\"mut\",Rc=\"native\",Sc=\"object\",Pc=\"fn\",zc=\"return\",jc=\"self\",Cc=\"template\",Fc=Object.freeze({ALIAS:_c,ASSIGN:Oc,BREAK:bc,ELSE:dc,ENUMERATION:mc,EXPORT:Tc,IF:gc,IMPORT:yc,INTO:xc,IS:Ic,LOOP:Ac,MUTABLE:Nc,NATIVE:Rc,OBJECT:Sc,PROCEDURE:Pc,RETURN:zc,SELF:jc,TEMPLATE:Cc}),$n=Fc;var Dc=\"assign\",Uc=\"arity_match\",kc=\"arity_status\",Lc=\"array_assignment\",Yc=\"branch-match\",wc=\"branch-default\",Vc=\"condition\",vc=\"loop\",Mc=\"data\",Bc=\"generics\",Kc=\"enumeration\",Gc=\"expression\",Hc=\"instance\",Zc=\"Link\",Xc=\"local\",Wc=\"object\",qc=\"procedure\",$c=\"return\",Jc=\"compare\",Qc=\"select\",ea=\"member\",ta=\"store\",sa=\"break\",na=\"literal\",oa=\"array_access\",ca=\"valueLink\",aa=\"linkValue\",ra=\"self\",ia=\"procedure-call\",pa=\"Maybe\",la=\"native\",ua=\"move\",fa=\"String\",ha=\"Array\",Ea=\"import\",_a=\"library\",Oa=\"constructor\",ba=\"destructor\",da=\"free\",ma=\"block-end\",Ta=\"default-block\",ga=\"continue\",ya=\"branch\",xa=\"statement\",Ia=\"draw\",Aa=\"now\",Na=\"size\",Ra=\"concatenation\",Sa=\"foreach\",Pa=\"while\",za=\"when\",ja=\"while-condition\",Ca=\"foreach-condition\",Fa=\"foreach-end\",Da=\"for\",Ua=\"up_to\",ka=\"down_to\",La=\"almost_up_to\",Ya=\"almost_down_to\",wa=\"I32\",Va=\"U32\",va=\"FP32\",Ma=\"I16\",Ba=\"U16\",Ka=\"U8\",Ga=\"I8\",Ha=\"FP64\",Za=\"U64\",Xa=\"I64\",Wa=\"Char\",qa=\"block-start\",$a=\"function-call\",Ja=\"Bool\",Qa=Object.freeze({TYPES_ASSIGN:Dc,TYPES_ARRAY:ha,TYPES_ARITY_MATCH:Uc,TYPES_ARITY_STATUS:kc,TYPES_ARRAY_ASSIGNMENT:Lc,TYPES_BRANCH_MATCH:Yc,TYPES_BRANCH_DEFAULT:wc,TYPES_CONDITION:Vc,TYPES_LOOP:vc,TYPES_FOREACH_END:Fa,TYPES_WHILE_CONDITION:ja,TYPES_FOREACH_CONDITION:Ca,TYPES_DATA:Mc,TYPES_COMPARE:Jc,TYPES_GENERICS:Bc,TYPES_ENUMERATION:Kc,TYPES_EXPRESSION:Gc,TYPES_INSTANCE:Hc,TYPES_LINK:Zc,TYPES_IMPORT:Ea,TYPES_LOCAL:Xc,TYPES_OBJECT:Wc,TYPES_PROCEDURE:qc,TYPES_RETURN:$c,TYPES_SELECT:Qc,TYPES_MEMBER:ea,TYPES_STORE:ta,TYPES_BREAK:sa,TYPES_LITERAL:na,TYPES_ARRAY_ACCESS:oa,TYPES_LINK_TO:ca,TYPES_VALUE_AT:aa,TYPES_SELF:ra,TYPES_LIBRARY:_a,TYPES_DROP:ia,TYPES_MAYBE:pa,TYPES_NATIVE:la,TYPES_MOVE:ua,TYPES_STRING:fa,TYPES_CONSTRUCTOR:Oa,TYPES_FREE:da,TYPES_DEFAULT_BLOCK:Ta,TYPES_BLOCK_END:ma,TYPES_CONTINUE:ga,TYPES_BRANCH:ya,TYPES_STATEMENT:xa,TYPES_DESTRUCTOR:ba,TYPES_DRAW:Ia,TYPES_NOW:Aa,TYPES_SIZE:Na,TYPES_CONCAT:Ra,TYPES_FOREACH:Sa,TYPES_WHILE:Pa,TYPES_WHEN:za,TYPES_FOR:Da,TYPES_UP_TO:Ua,TYPES_DOWN_TO:ka,TYPES_ALMOST_UP_TO:La,TYPES_ALMOST_DOWN_TO:Ya,TYPES_I32:wa,TYPES_FP32:va,TYPES_FP64:Ha,TYPES_U32:Va,TYPES_I64:Xa,TYPES_U64:Za,TYPES_I16:Ma,TYPES_U16:Ba,TYPES_I8:Ga,TYPES_U8:Ka,TYPES_CHAR:Wa,TYPES_BOOL:Ja,TYPES_BLOCK_BEGIN:qa,TYPES_FUNCTION_CALL:$a}),tn=Qa;var er=Object.freeze({COLON:58,COMMA:44,DIGIT_ZERO:48,DIGIT_NINE:57,DOT:46,HASHTAG:35,HORIZONTAL_TAB:9,HYPHEN_MINUS:45,LEFT_CURLY_BRACKET:123,LEFT_PARENTHESIS:40,LEFT_SQUARE_BRACKET:91,LINE_BREAK:10,NULL:0,PLUS_SIGN:43,RIGHT_CURLY_BRACKET:125,RIGHT_PARENTHESIS:41,RIGHT_SQUARE_BRACKET:93,SEMICOLON:59,SPACE:32,E_SIGN:101}),Jn=er;var tr=\"assignment\",sr=\"Flogram\",nr=Object.freeze({K_ASSIGNMENT:tr,K_FLOGRAM:sr}),Qn=nr;var or=Object.freeze([[43],[45],[42],[47],[37],[110,111,116],[60],[62],[94],[111,114],[33],[61,61],[60,61],[62,61],[33,61],[120,111,114],[97,110,100]]),cr=or,eo=cr;var ar=Object.freeze({INT_ARRAY_START:9999991,FLOAT_ARRAY_START:9999981,STRING_START:8888891,CHAR_START:8888881,NAT_ON_HORIZON:7777791,BIG_NAT_ON_HORIZON:7777591,FLOAT_ON_HORIZON:7777771,BIG_FLOAT_ON_HORIZON:7777731,END_OF_LINE:66666661}),to=ar;var rr=Object.freeze({ENUM_MEMORY_SIZE:12,ENUM_STACK_SIZE:3,ARRAY_MEMORY_SIZE:12,ARRAY_STACK_SIZE:3,ARRAY_DEFAULT_CAPACITY:4,STRING_MEMORY_SIZE:8,STRING_STACK_SIZE:2,OBJECT_MEMORY_SIZE:8,OBJECT_STACK_SIZE:2,NATIVE_MEMORY_SIZE:4,NATIVE_STACK_SIZE:1,NATIVE_SIZE:4,STEP:4,DOUBLE_STEP:8,TRIPPLE_STEP:12}),so=rr;var ir=Object.freeze([]),pr=Object.freeze({}),lr=\"\",ur=\"\t\",fr=`\n`,hr=\"UTF-8\",Ns=tn,Er=Object.freeze({EMPTY_ARRAY:ir,EMPTY_OBJECT:pr,EMPTY_STRING:lr,HORIZONTAL_TAB:ur,LINE_BREAK:fr,UNICODE_TEXT:hr,Codes:Jn,Keys:$n,Types:tn,Keywords:Qn,Operators:eo,DrawStates:to,Sizes:so}),Rt=Er;var _r=Object.freeze([\"FP64\",\"U64\",\"I64\",\"FP32\",\"U32\",\"I32\",\"U16\",\"I16\",\"U8\",\"I8\",\"Bool\",\"Char\",\"Array\",\"String\",\"Link\",\"Maybe\"]),qt=[\"U8\",\"U16\",\"U32\"],ps=[...qt,\"I8\",\"I16\",\"I32\"],sn=[\"I64\",\"U64\"],ls=[...ps,...sn],Rs=[\"FP32\",\"FP64\"],us=[...ls,...Rs],fs=_r;var{EMPTY_STRING:Or,UNICODE_TEXT:an}=Rt;var br=48,dr=57,mr=46,no=45,oo=43,Tr=65,gr=90,yr=\"e\".charCodeAt(0),xr=\"E\".charCodeAt(0),Ir=-1,Ar=1,co=new TextDecoder(an),Nr=new TextEncoder,Rr=Rt.Operators,Sr=(c,s,r=0,h=c.length|0,D=0,ce=s.length|0)=>{for(D=D|0,r=r|0,ce=ce|0,h=h|0;;){let e=r>=h,pe=D>=ce;if(e||pe)break;let Oe=c[r],$=s[D];if(r=r+1|0,D=D+1|0,Oe<$)return Ir;if(Oe>$)return Ar}return 0},Pr=(c,s,r=0,h=c.length|0,D=0,ce=s.length|0)=>{for(D=D|0,r=r|0,ce=ce|0,h=h|0;;){let e=D>=ce,pe=r>=h;if(e||pe)break;s[D]=c[r],D=D+1|0,r=r+1|0}},io=(c,s,r=0,h=c.length|0,D=0,ce=s.length|0)=>{r=r|0,D=D|0,h=h|0,ce=ce|0;let e=h-r|0,pe=ce-D|0;if(e!==pe)return!1;for(;;){let me=r>=h,Oe=D>=ce;if(me||Oe)break;let Re=c[r],lt=s[D];if(r=r+1|0,D=D+1|0,Re!==lt)return!1}return!0},zr=c=>{c=c>>>0;let s=0,r=0;for(;r=(r<<1|1)>>>0,!(r>c);)s=s+1|0;return s},po=Object.freeze([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]),cn=(c,s,r,h)=>{for(c=c>>>0,h=h??s.length|0,r=r|0,h=h|0;c>0&&h>r;)h=h-1|0,s[h]=po[c&15],c=c>>>4},jr=(c,s,r,h)=>{let D=r|0,ce=r+h|0;if(h===0)return!1;let e=!1,pe=!1,me=!1,Oe=$=>$===oo||$===no;for(;D<ce;){let $=s[D];D=D+1|0;let Re=br<=$&&$<=dr,lt=oo===$||$===no,ut=mr===$,Ye=Br===$,nt=$===yr||$===xr;if(Re){me=!0;continue}else if(lt){if((D===r+1||e&&!pe)&&!me)continue}else if((Ye||ut)&&!e&&!pe||nt&&!e)nt&&(e=!0,D<ce&&Oe(s[D])&&(D=D+1|0,pe=!0));else return!1}return me&&(!e||e&&pe)},Cr={I8:[...ps],U8:[...qt],I16:[...ps],U16:[...qt],I32:[...ps],U32:[...qt],I64:[...ls],U64:[...qt],FP32:us,FP64:us},Fr=(c,s)=>!us.includes(c)||!us.includes(s)?!1:Cr[c].includes(s),Dr=c=>{let s=c>=Tr,r=c<=gr;return s&&r},Ps=128,zs=127,lo=-1,$t=64,rn=c=>{c=c|0;let s=[];for(;;){let r=c&zs;c=c>>7;let h=c===0,D=(r&$t)===0,ce=h&&D,e=c===-1,pe=(r&$t)!==0;if(ce||e&&pe){s.push(r);break}r=r|Ps,s.push(r)}return s},Ur=c=>{let s=[],r=!0;for(;r;){let h=c&zs;c>>=7,c===0&&!(h&$t)||c===-1&&h&$t?r=!1:h|=Ps,s.push(h)}return s},uo=(c,s)=>{s=s|0;let r=0,h=0;for(;;){let D=c[s]|0;s=s+1|0;let ce=(D&zs)<<h;if(h=h+7|0,r=r|ce,(D&Ps)===0){let pe=(D&$t)!==0,me=h<32;if(pe&&me){let $=lo<<h;r=r|$}break}}return r},kr=(c,s)=>{s=s|0;let r=0,h=0;for(;;){let D=c[s]|0;s=s+1|0;let ce=(D&zs)<<h;if(h=h+7|0,r=r|ce,!(D&Ps)){if(D&$t){let e=lo<<h;r=r|e}break}}return r},Lr=c=>{try{return co.decode(c)}catch{return co.decode(new Uint8Array([c]))}},Yr=c=>Nr.encode(c),wr=(c=Or)=>{let s=c.length|0,r=rn(s),h=Buffer.from(c,an);return Object.freeze([...r,...h])},Vr=(c,s)=>{s=s|0;let r=uo(c,s),h=rn(r).length;return s=s+h|0,c.subarray(s,s+r|0).toString(an)},vr=58,Mr=46,Br=95,hs=32,nn=48,Kr=67,Ut=new Uint8Array(Kr),ao=Ut.subarray(0,8),Ss=Ut.subarray(10,49),ro=Ut.subarray(51,68),on=16,Gr=2;Ut[8]=vr;Ut[9]=hs;Ut[49]=hs;Ut[50]=hs;var Hr=(c,s)=>{s=s??console.log;let r=32,h=126,D=c.length|0,ce=0;for(;D>0;){ao.fill(nn),cn(ce,ao),Ss.fill(hs),ro.fill(hs);let e=D>=on?on:D;D=D-on|0;let pe=0,me=0;for(let $=1;$<=e;$=$+1|0){let Re=c[ce]&255;Ss[pe+0|0]=nn,Ss[pe+1|0]=nn,cn(Re,Ss,pe,pe+2|0);let lt=Mr;r<=Re&&Re<=h&&(lt=Re),ro[me]=lt,ce=ce+1|0,pe=pe+2|0,me=me+1|0,$%Gr===0&&(pe=pe+1|0)}let Oe=String.fromCodePoint(...Ut);s(Oe)}},Zr=function*(c,s){let r=c.length|0,h=s.length|0,D=0;for(;D<r&&D<h;){let ce=c[D],e=s[D];yield[ce,e],D=D+1|0}},Xr=function*(c,s,r){let h=c.length|0,D=s.length|0,ce=r.length|0,e=0;for(;e<h&&e<D&&e<ce;){let pe=c[e],me=s[e],Oe=r[e];yield[pe,me,Oe],e=e+1|0}},Wr=c=>{for(let s of Rr)if(io(c,s))return!0;return!1},qr=Object.freeze({ARRAY_COMPARE:Sr,ARRAY_COPY:Pr,ARRAY_EQUAL:io,BIT_DEPTH:zr,HEX_DIGITS:po,HEX_ENCODE:cn,IS_NUMBER:jr,IS_UPPERCASE:Dr,IS_VALID_AUTO_CAST:Fr,LEB128_DECODE:uo,LEB128_DECODE_SIGNED:kr,LEB128_ENCODE:rn,LEB128_ENCODE_SIGNED:Ur,UTF8_DECODE:Lr,UTF8_ENCODE:Yr,WASM_STRING_ENCODE:wr,WASM_STRING_DECODE:Vr,XXD_DUMP_HEX:Hr,ZIP2:Zr,ZIP3:Xr,IS_OPERATOR:Wr}),Jt=qr;var ct=(c,s=2)=>{let r=\"\";switch(c){case\"+\":r=\"add\";break;case\"-\":r=s===2?\"sub\":\"neg\";break;case\"*\":r=\"mul\";break;case\"/\":r=\"div\";break;case\"%\":r=\"rem\";break;case\"==\":r=\"eq\";break;case\">\":r=\"gt\";break;case\"<\":r=\"lt\";break;case\">=\":r=\"ge\";break;case\"<=\":r=\"le\";break;case\"!=\":r=\"ne\";break;case\"and\":r=\"and\";break;case\"or\":r=\"or\";break;case\"xor\":r=\"xor\";break;case\"not\":r=\"not\";break;case\"I32\":r=\"toi32\";break;case\"U32\":r=\"tou32\";break;case\"I64\":r=\"toi64\";break;case\"U64\":r=\"tou64\";break;case\"FP64\":r=\"tofp64\";break;case\"FP32\":r=\"tofp32\";break}return r};var $r=Object.freeze({type:\"native\",body:Object.freeze([160]),lengths:Object.freeze({inputs:2,outputs:1})}),Jr=Object.freeze({type:\"native\",body:Object.freeze([163]),lengths:Object.freeze({inputs:2,outputs:1})}),Qr=Object.freeze({type:\"native\",body:Object.freeze([162]),lengths:Object.freeze({inputs:2,outputs:1})}),ei=Object.freeze({type:\"native\",body:Object.freeze([68,0,0,0,0,0,0,240,191,162]),lengths:Object.freeze({inputs:1,outputs:1})}),ti=Object.freeze({type:\"native\",body:Object.freeze([161]),lengths:Object.freeze({inputs:2,outputs:1})}),si=Object.freeze({type:\"native\",body:Object.freeze([124]),lengths:Object.freeze({inputs:2,outputs:1})}),ni=Object.freeze({type:\"native\",body:Object.freeze([128]),lengths:Object.freeze({inputs:2,outputs:1})}),oi=Object.freeze({type:\"native\",body:Object.freeze([126]),lengths:Object.freeze({inputs:2,outputs:1})}),ci=Object.freeze({type:\"native\",body:Object.freeze([66,255,255,255,255,255,255,255,255,126]),lengths:Object.freeze({inputs:1,outputs:1})}),ai=Object.freeze({type:\"native\",body:Object.freeze([125]),lengths:Object.freeze({inputs:2,outputs:1})}),ri=Object.freeze({type:\"native\",body:Object.freeze([124]),lengths:Object.freeze({inputs:2,outputs:1})}),ii=Object.freeze({type:\"native\",body:Object.freeze([127]),lengths:Object.freeze({inputs:2,outputs:1})}),pi=Object.freeze({type:\"native\",body:Object.freeze([126]),lengths:Object.freeze({inputs:2,outputs:1})}),xu=Object.freeze({type:\"native\",body:Object.freeze([66,255,255,255,255,255,255,255,255,126]),lengths:Object.freeze({inputs:2,outputs:1})}),li=Object.freeze({type:\"native\",body:Object.freeze([125]),lengths:Object.freeze({inputs:2,outputs:1})}),fo=Object.freeze({type:\"native\",body:Object.freeze([146]),lengths:Object.freeze({inputs:2,outputs:1})}),ho=Object.freeze({type:\"native\",body:Object.freeze([149]),lengths:Object.freeze({inputs:2,outputs:1})}),Eo=Object.freeze({type:\"native\",body:Object.freeze([148]),lengths:Object.freeze({inputs:2,outputs:1})}),ui=Object.freeze({type:\"native\",body:Object.freeze([67,0,0,128,191,148]),lengths:Object.freeze({inputs:2,outputs:1})}),_o=Object.freeze({type:\"native\",body:Object.freeze([140]),lengths:Object.freeze({inputs:2,outputs:1})}),pn=Object.freeze({type:\"native\",body:Object.freeze([106]),lengths:Object.freeze({inputs:2,outputs:1})}),ln=Object.freeze({type:\"native\",body:Object.freeze([110]),lengths:Object.freeze({inputs:2,outputs:1})}),un=Object.freeze({type:\"native\",body:Object.freeze([108]),lengths:Object.freeze({inputs:2,outputs:1})}),fn=Object.freeze({type:\"native\",body:Object.freeze([107]),lengths:Object.freeze({inputs:2,outputs:1})}),hn=Object.freeze({type:\"native\",body:Object.freeze([106]),lengths:Object.freeze({inputs:2,outputs:1})}),En=Object.freeze({type:\"native\",body:Object.freeze([109]),lengths:Object.freeze({inputs:2,outputs:1})}),_n=Object.freeze({type:\"native\",body:Object.freeze([108]),lengths:Object.freeze({inputs:2,outputs:1})}),On=Object.freeze({type:\"native\",body:Object.freeze([65,1,0,0,0,108]),lengths:Object.freeze({inputs:1,outputs:1})}),bn=Object.freeze({type:\"native\",body:Object.freeze([107]),lengths:Object.freeze({inputs:2,outputs:1})}),fi=Object.freeze({type:\"native\",body:Object.freeze([130]),lengths:Object.freeze({inputs:2,outputs:1})}),hi=Object.freeze({type:\"native\",body:Object.freeze([129]),lengths:Object.freeze({inputs:2,outputs:1})}),dn=Object.freeze({type:\"native\",body:Object.freeze([112]),lengths:Object.freeze({inputs:2,outputs:1})}),mn=Object.freeze({type:\"native\",body:Object.freeze([111]),lengths:Object.freeze({inputs:2,outputs:1})}),Ei=Object.freeze({type:\"native\",body:Object.freeze([86]),lengths:Object.freeze({inputs:2,outputs:1})}),_i=Object.freeze({type:\"native\",body:Object.freeze([85]),lengths:Object.freeze({inputs:2,outputs:1})}),Oi=Object.freeze({type:\"native\",body:Object.freeze([100]),lengths:Object.freeze({inputs:2,outputs:1})}),js=Object.freeze({type:\"native\",body:Object.freeze([75]),lengths:Object.freeze({inputs:2,outputs:1})}),Tn=Object.freeze({type:\"native\",body:Object.freeze([74]),lengths:Object.freeze({inputs:2,outputs:1})}),bi=Object.freeze({type:\"native\",body:Object.freeze([94]),lengths:Object.freeze({inputs:2,outputs:1})}),di=Object.freeze({type:\"native\",body:Object.freeze([84]),lengths:Object.freeze({inputs:2,outputs:1})}),mi=Object.freeze({type:\"native\",body:Object.freeze([83]),lengths:Object.freeze({inputs:2,outputs:1})}),Ti=Object.freeze({type:\"native\",body:Object.freeze([99]),lengths:Object.freeze({inputs:2,outputs:1})}),Cs=Object.freeze({type:\"native\",body:Object.freeze([73]),lengths:Object.freeze({inputs:2,outputs:1})}),gn=Object.freeze({type:\"native\",body:Object.freeze([72]),lengths:Object.freeze({inputs:2,outputs:1})}),gi=Object.freeze({type:\"native\",body:Object.freeze([93]),lengths:Object.freeze({inputs:2,outputs:1})}),yi=Object.freeze({type:\"native\",body:Object.freeze([87]),lengths:Object.freeze({inputs:2,outputs:1})}),xi=Object.freeze({type:\"native\",body:Object.freeze([88]),lengths:Object.freeze({inputs:2,outputs:1})}),Ii=Object.freeze({type:\"native\",body:Object.freeze([101]),lengths:Object.freeze({inputs:2,outputs:1})}),yn=Object.freeze({type:\"native\",body:Object.freeze([76]),lengths:Object.freeze({inputs:2,outputs:1})}),Fs=Object.freeze({type:\"native\",body:Object.freeze([77]),lengths:Object.freeze({inputs:2,outputs:1})}),Ai=Object.freeze({type:\"native\",body:Object.freeze([95]),lengths:Object.freeze({inputs:2,outputs:1})}),Ni=Object.freeze({type:\"native\",body:Object.freeze([89]),lengths:Object.freeze({inputs:2,outputs:1})}),Ri=Object.freeze({type:\"native\",body:Object.freeze([90]),lengths:Object.freeze({inputs:2,outputs:1})}),Si=Object.freeze({type:\"native\",body:Object.freeze([102]),lengths:Object.freeze({inputs:2,outputs:1})}),xn=Object.freeze({type:\"native\",body:Object.freeze([78]),lengths:Object.freeze({inputs:2,outputs:1})}),Ds=Object.freeze({type:\"native\",body:Object.freeze([79]),lengths:Object.freeze({inputs:2,outputs:1})}),Pi=Object.freeze({type:\"native\",body:Object.freeze([96]),lengths:Object.freeze({inputs:2,outputs:1})}),zi=Object.freeze({type:\"native\",body:Object.freeze([81]),lengths:Object.freeze({inputs:2,outputs:1})}),ji=Object.freeze({type:\"native\",body:Object.freeze([81]),lengths:Object.freeze({inputs:2,outputs:1})}),Ci=Object.freeze({type:\"native\",body:Object.freeze([97]),lengths:Object.freeze({inputs:2,outputs:1})}),In=Object.freeze({type:\"native\",body:Object.freeze([70]),lengths:Object.freeze({inputs:2,outputs:1})}),Es=Object.freeze({type:\"native\",body:Object.freeze([70]),lengths:Object.freeze({inputs:2,outputs:1})}),Fi=Object.freeze({type:\"native\",body:Object.freeze([91]),lengths:Object.freeze({inputs:2,outputs:1})}),Di=Object.freeze({type:\"native\",body:Object.freeze([82]),lengths:Object.freeze({inputs:2,outputs:1})}),Ui=Object.freeze({type:\"native\",body:Object.freeze([82]),lengths:Object.freeze({inputs:2,outputs:1})}),ki=Object.freeze({type:\"native\",body:Object.freeze([98]),lengths:Object.freeze({inputs:2,outputs:1})}),_s=Object.freeze({type:\"native\",body:Object.freeze([71]),lengths:Object.freeze({inputs:2,outputs:1})}),An=Object.freeze({type:\"native\",body:Object.freeze([71]),lengths:Object.freeze({inputs:2,outputs:1})}),Li=Object.freeze({type:\"native\",body:Object.freeze([92]),lengths:Object.freeze({inputs:2,outputs:1})}),Yi=Object.freeze({type:\"native\",body:Object.freeze([113]),lengths:Object.freeze({inputs:2,outputs:1})}),wi=Object.freeze({type:\"native\",body:Object.freeze([114]),lengths:Object.freeze({inputs:2,outputs:1})}),Vi=Object.freeze({type:\"native\",body:Object.freeze([115]),lengths:Object.freeze({inputs:2,outputs:1})}),vi=Object.freeze({type:\"native\",body:Object.freeze([69]),lengths:Object.freeze({inputs:1,outputs:1})}),Oo=Object.freeze({type:\"native\",body:Object.freeze([167]),lengths:Object.freeze({inputs:1,outputs:1})}),bo=Object.freeze({type:\"native\",body:Object.freeze([167]),lengths:Object.freeze({inputs:1,outputs:1})}),Mi=Object.freeze({type:\"native\",body:Object.freeze([170]),lengths:Object.freeze({inputs:1,outputs:1})}),Bi=Object.freeze({type:\"native\",body:Object.freeze([171]),lengths:Object.freeze({inputs:1,outputs:1})}),Ki=Object.freeze({type:\"native\",body:Object.freeze([168]),lengths:Object.freeze({inputs:1,outputs:1})}),Gi=Object.freeze({type:\"native\",body:Object.freeze([169]),lengths:Object.freeze({inputs:1,outputs:1})}),mo=Object.freeze({type:\"native\",body:Object.freeze([]),lengths:Object.freeze({inputs:1,outputs:1})}),Us=Object.freeze({type:\"native\",body:Object.freeze([193]),lengths:Object.freeze({inputs:1,outputs:1})}),ks=Object.freeze({type:\"native\",body:Object.freeze([192]),lengths:Object.freeze({inputs:1,outputs:1})}),Hi=Object.freeze({type:\"native\",body:Object.freeze([]),lengths:Object.freeze({inputs:1,outputs:1})}),Zi=Object.freeze({type:\"native\",body:Object.freeze([]),lengths:Object.freeze({inputs:1,outputs:1})}),Xi=Object.freeze({type:\"native\",body:Object.freeze([176]),lengths:Object.freeze({inputs:1,outputs:1})}),Wi=Object.freeze({type:\"native\",body:Object.freeze([177]),lengths:Object.freeze({inputs:1,outputs:1})}),qi=Object.freeze({type:\"native\",body:Object.freeze([175]),lengths:Object.freeze({inputs:1,outputs:1})}),$i=Object.freeze({type:\"native\",body:Object.freeze([174]),lengths:Object.freeze({inputs:1,outputs:1})}),Ji=Object.freeze({type:\"native\",body:Object.freeze([172]),lengths:Object.freeze({inputs:1,outputs:1})}),Qi=Object.freeze({type:\"native\",body:Object.freeze([196]),lengths:Object.freeze({inputs:1,outputs:1})}),ep=Object.freeze({type:\"native\",body:Object.freeze([173]),lengths:Object.freeze({inputs:1,outputs:1})}),tp=Object.freeze({type:\"native\",body:Object.freeze([196]),lengths:Object.freeze({inputs:1,outputs:1})}),To=Object.freeze({type:\"native\",body:Object.freeze([195]),lengths:Object.freeze({inputs:1,outputs:1})}),go=Object.freeze({type:\"native\",body:Object.freeze([195]),lengths:Object.freeze({inputs:1,outputs:1})}),yo=Object.freeze({type:\"native\",body:Object.freeze([194]),lengths:Object.freeze({inputs:1,outputs:1})}),xo=Object.freeze({type:\"native\",body:Object.freeze([194]),lengths:Object.freeze({inputs:1,outputs:1})}),sp=Object.freeze({type:\"native\",body:Object.freeze([185]),lengths:Object.freeze({inputs:1,outputs:1})}),np=Object.freeze({type:\"native\",body:Object.freeze([186]),lengths:Object.freeze({inputs:1,outputs:1})}),Nn=Object.freeze({type:\"native\",body:Object.freeze([183]),lengths:Object.freeze({inputs:1,outputs:1})}),Rn=Object.freeze({type:\"native\",body:Object.freeze([184]),lengths:Object.freeze({inputs:1,outputs:1})}),op=Object.freeze({type:\"native\",body:Object.freeze([187]),lengths:Object.freeze({inputs:1,outputs:1})}),cp=Object.freeze({type:\"native\",body:Object.freeze([180]),lengths:Object.freeze({inputs:1,outputs:1})}),ap=Object.freeze({type:\"native\",body:Object.freeze([181]),lengths:Object.freeze({inputs:1,outputs:1})}),Sn=Object.freeze({type:\"native\",body:Object.freeze([178]),lengths:Object.freeze({inputs:1,outputs:1})}),Pn=Object.freeze({type:\"native\",body:Object.freeze([179]),lengths:Object.freeze({inputs:1,outputs:1})}),rp=Object.freeze({type:\"native\",body:Object.freeze([182]),lengths:Object.freeze({inputs:1,outputs:1})}),Os=Object.freeze(Object.assign({\"Flogram./\":ho,\"Flogram.*\":Eo,\"Flogram.+\":fo,\"Flogram.-\":_o},{\"Flogram.fp64.div\":Jr,\"Flogram.fp64.mul\":Qr,\"Flogram.fp64.add\":$r,\"Flogram.fp64.sub\":ti,\"Flogram.fp64.neg\":ei,\"Flogram.fp64.gt\":Oi,\"Flogram.fp64.lt\":Ti,\"Flogram.fp64.le\":Ii,\"Flogram.fp64.ge\":Si,\"Flogram.fp64.ne\":ki,\"Flogram.fp64.eq\":Ci,\"Flogram.fp64.toi32\":Mi,\"Flogram.fp64.tou32\":Bi,\"Flogram.fp64.tou64\":Wi,\"Flogram.fp64.toi64\":Xi,\"Flogram.fp64.tofp32\":rp},{\"Flogram.u64.add\":si,\"Flogram.u64.sub\":ai,\"Flogram.u64.mul\":oi,\"Flogram.u64.div\":ni,\"Flogram.u64.rem\":fi,\"Flogram.u64.gt\":Ei,\"Flogram.u64.lt\":di,\"Flogram.u64.le\":xi,\"Flogram.u64.ge\":Ri,\"Flogram.u64.ne\":Ui,\"Flogram.u64.eq\":ji,\"Flogram.u64.toi32\":bo,\"Flogram.u64.tou32\":bo,\"Flogram.u64.toi64\":Hi,\"Flogram.u64.tofp32\":ap,\"Flogram.u64.tofp64\":np},{\"Flogram.i64.add\":ri,\"Flogram.i64.sub\":li,\"Flogram.i64.neg\":ci,\"Flogram.i64.mul\":pi,\"Flogram.i64.div\":ii,\"Flogram.i64.rem\":hi,\"Flogram.i64.gt\":_i,\"Flogram.i64.lt\":mi,\"Flogram.i64.le\":yi,\"Flogram.i64.ge\":Ni,\"Flogram.i64.ne\":Di,\"Flogram.i64.eq\":zi,\"Flogram.i64.toi32\":Oo,\"Flogram.i64.tou32\":Oo,\"Flogram.i64.tou64\":Zi,\"Flogram.i64.tofp32\":cp,\"Flogram.i64.tofp64\":sp},{\"Flogram.fp32.div\":ho,\"Flogram.fp32.mul\":Eo,\"Flogram.fp32.add\":fo,\"Flogram.fp32.sub\":_o,\"Flogram.fp32.neg\":ui,\"Flogram.fp32.gt\":bi,\"Flogram.fp32.lt\":gi,\"Flogram.fp32.le\":Ai,\"Flogram.fp32.ge\":Pi,\"Flogram.fp32.ne\":Li,\"Flogram.fp32.eq\":Fi,\"Flogram.fp32.toi32\":Ki,\"Flogram.fp32.tou32\":Gi,\"Flogram.fp32.tou64\":qi,\"Flogram.fp32.toi64\":$i,\"Flogram.fp32.tofp64\":op},{\"Flogram.u32.add\":pn,\"Flogram.u32.sub\":fn,\"Flogram.u32.mul\":un,\"Flogram.u32.div\":ln,\"Flogram.u32.rem\":dn,\"Flogram.u32.gt\":js,\"Flogram.u32.lt\":Cs,\"Flogram.u32.le\":Fs,\"Flogram.u32.ge\":Ds,\"Flogram.u32.ne\":An,\"Flogram.u32.eq\":Es,\"Flogram.u32.toi32\":mo,\"Flogram.u32.toi64\":ep,\"Flogram.u32.tou64\":tp,\"Flogram.u32.tofp32\":Pn,\"Flogram.u32.tofp64\":Rn},{\"Flogram.i32.add\":hn,\"Flogram.i32.sub\":bn,\"Flogram.i32.neg\":On,\"Flogram.i32.mul\":_n,\"Flogram.i32.div\":En,\"Flogram.i32.rem\":mn,\"Flogram.i32.gt\":Tn,\"Flogram.i32.lt\":gn,\"Flogram.i32.le\":yn,\"Flogram.i32.ge\":xn,\"Flogram.i32.ne\":_s,\"Flogram.i32.eq\":In,\"Flogram.i32.toi64\":Ji,\"Flogram.i32.tou64\":Qi,\"Flogram.i32.tou32\":mo,\"Flogram.i32.tofp32\":Sn,\"Flogram.i32.tofp64\":Nn},{\"Flogram.i16.add\":hn,\"Flogram.i16.sub\":bn,\"Flogram.i16.neg\":On,\"Flogram.i16.mul\":_n,\"Flogram.i16.div\":En,\"Flogram.i16.rem\":mn,\"Flogram.i16.gt\":Tn,\"Flogram.i16.lt\":gn,\"Flogram.i16.le\":yn,\"Flogram.i16.ge\":xn,\"Flogram.i16.ne\":_s,\"Flogram.i16.eq\":In,\"Flogram.i16.toi32\":Us,\"Flogram.i16.tou32\":Us,\"Flogram.i16.toi64\":To,\"Flogram.i16.tou64\":go,\"Flogram.i16.tofp32\":Sn,\"Flogram.i16.tofp64\":Nn},{\"Flogram.u16.add\":pn,\"Flogram.u16.sub\":fn,\"Flogram.u16.mul\":un,\"Flogram.u16.div\":ln,\"Flogram.u16.rem\":dn,\"Flogram.u16.gt\":js,\"Flogram.u16.lt\":Cs,\"Flogram.u16.le\":Fs,\"Flogram.u16.ge\":Ds,\"Flogram.u16.ne\":An,\"Flogram.u16.eq\":Es,\"Flogram.u16.toi32\":Us,\"Flogram.u16.tou32\":Us,\"Flogram.u16.toi64\":To,\"Flogram.u16.tou64\":go,\"Flogram.u16.tofp32\":Pn,\"Flogram.u16.tofp64\":Rn},{\"Flogram.i8.add\":hn,\"Flogram.i8.sub\":bn,\"Flogram.i16.neg\":On,\"Flogram.i8.mul\":_n,\"Flogram.i8.div\":En,\"Flogram.i8.rem\":mn,\"Flogram.i8.gt\":Tn,\"Flogram.i8.lt\":gn,\"Flogram.i8.le\":yn,\"Flogram.i8.ge\":xn,\"Flogram.i8.ne\":_s,\"Flogram.i8.eq\":In,\"Flogram.i8.toi32\":ks,\"Flogram.i8.tou32\":ks,\"Flogram.i8.toi64\":yo,\"Flogram.i8.tou64\":xo,\"Flogram.i8.tofp32\":Sn,\"Flogram.i8.tofp64\":Nn},{\"Flogram.u8.add\":pn,\"Flogram.u8.sub\":fn,\"Flogram.u8.mul\":un,\"Flogram.u8.div\":ln,\"Flogram.u8.rem\":dn,\"Flogram.u8.gt\":js,\"Flogram.u8.lt\":Cs,\"Flogram.u8.le\":Fs,\"Flogram.u8.ge\":Ds,\"Flogram.u8.ne\":An,\"Flogram.u8.eq\":Es,\"Flogram.u8.toi32\":ks,\"Flogram.u8.tou32\":ks,\"Flogram.u8.toi64\":yo,\"Flogram.u8.tou64\":xo,\"Flogram.u8.tofp32\":Pn,\"Flogram.u8.tofp64\":Rn},{\"Flogram.bool.and\":Yi,\"Flogram.bool.or\":wi,\"Flogram.bool.xor\":Vi,\"Flogram.bool.not\":vi,\"Flogram.bool.eq\":Es,\"Flogram.bool.ne\":_s},{\"Flogram.char.gt\":js,\"Flogram.char.lt\":Cs,\"Flogram.char.le\":Fs,\"Flogram.char.ge\":Ds,\"Flogram.char.eq\":Es,\"Flogram.char.ne\":_s}));var{LEB128_ENCODE:ht}=Jt,Nu=new Int8Array(1),Ru=new Uint8Array(1),ip=c=>{let s=[],r=!0;for(;r;){let h=c&127;c>>=7,c===0&&!(h&64)||c===-1&&h&64?r=!1:h|=128,s.push(h)}return new Uint8Array(s)},pp=c=>{let s=[],r=!0;for(;r;){let h=c&127;c>>=7,c===0?r=!1:h|=128,s.push(h)}return new Uint8Array(s)},lp=c=>{let s=[];for(;c>=128;)s.push(c&127|128),c>>>=7;return s.push(c),new Uint8Array(s)},up=128,fp=127,Io=64,hp=c=>{c=c<<16>>16;let s=[];for(;;){let r=c&fp;c=c>>7;let h=c===0,D=(r&Io)===0,ce=h&&D,e=c===-1,pe=(r&Io)!==0;if(ce||e&&pe){s.push(r);break}r=r|up,s.push(r)}return s};var Ep=c=>{let s=new Float32Array(1);return s[0]=parseFloat(c),new Uint8Array(s.buffer)},Ao=c=>{let s=[],r=!0;for(;r;){let h=c&127;c>>=7,c===0&&!(h&64)||c===-1&&h&64?r=!1:h|=128,s.push(h)}return new Uint8Array(s)},_p=c=>ht(c),Op=c=>{let s=new Float64Array(1);return s[0]=c,new Uint8Array(s.buffer)},bp=c=>{let s=[];for(;c>=128;)s.push(c&127|128),c>>>=7;return s.push(c),new Uint8Array(s)},dp=c=>{let s=[],r=!0;for(;r;){let h=c&127;c>>=7,c===0&&!(h&64)||c===-1&&h&64?r=!1:h|=128,s.push(h)}return new Uint8Array(s)},mp=c=>{let s=new Uint8Array(1);return s[0]=c===\"TRUE\"?1:c===\"FALSE\"?0:c,s},Tp=c=>{let s=c.charCodeAt(0);return ht(s)},No=()=>{let c=new ArrayBuffer(4);return new Float32Array(c)[0]=-0,[...new Uint8Array(c)]},gp=Object.freeze({type:\"native\",identity:127,opcode:65,encode:Ao,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})}),yp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-1),encode:Tp,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})}),xp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-1),encode:mp,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4}),values:{TRUE:1,FALSE:0}})}),Ip=Object.freeze({type:\"native\",identity:124,opcode:68,none:No(),encode:Op,link:Object.freeze({load:Object.freeze({opcode:43,align:2,offset:0,size:8}),store:Object.freeze({opcode:57,align:2,offset:0,size:8})})}),Ap=Object.freeze({type:\"native\",identity:126,opcode:66,none:ht(-1),encode:bp,link:Object.freeze({load:Object.freeze({opcode:53,align:2,offset:0,size:8}),store:Object.freeze({opcode:55,align:2,offset:0,size:8})})}),Np=Object.freeze({type:\"native\",identity:126,opcode:66,none:ht(-9223372036854776e3),encode:dp,link:Object.freeze({load:Object.freeze({opcode:52,align:2,offset:0,size:8}),store:Object.freeze({opcode:55,align:2,offset:0,size:8})})}),Rp=Object.freeze({type:\"native\",identity:125,opcode:67,none:No(),encode:Ep,link:Object.freeze({load:Object.freeze({opcode:42,align:2,offset:0,size:4}),store:Object.freeze({opcode:56,align:2,offset:0,size:4})})}),Sp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-1),encode:_p,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})}),Pp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-2147483648),encode:Ao,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})}),zp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-32768),encode:hp,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})}),jp=Object.freeze({type:\"native\",identity:127,opcode:65,encode:lp,none:ht(-1),link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})}),Cp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-128),encode:ip,decode:c=>new Int8Array([c])[0],link:Object.freeze({load:Object.freeze({opcode:40,align:0,offset:0,size:4}),store:Object.freeze({opcode:54,align:0,offset:0,size:4})})}),Fp=Object.freeze({type:\"native\",identity:127,opcode:65,none:ht(-1),encode:pp,link:Object.freeze({load:Object.freeze({opcode:40,align:0,offset:0,size:4}),store:Object.freeze({opcode:54,align:0,offset:0,size:4})})}),kt=Object.freeze({\"Flogram.String\":gp,\"Flogram.Char\":yp,\"Flogram.Bool\":xp,\"Flogram.FP64\":Ip,\"Flogram.U64\":Ap,\"Flogram.I64\":Np,\"Flogram.FP32\":Rp,\"Flogram.U32\":Sp,\"Flogram.I32\":Pp,\"Flogram.I16\":zp,\"Flogram.U16\":jp,\"Flogram.I8\":Cp,\"Flogram.U8\":Fp});var{TYPES_ASSIGN:Ro,TYPES_DRAW:Dp,TYPES_NOW:So,TYPES_ARRAY:q,TYPES_ARRAY_ASSIGNMENT:Up,TYPES_BRANCH_MATCH:Po,TYPES_BRANCH_DEFAULT:zo,TYPES_CONDITION:Ls,TYPES_LOOP:bs,TYPES_WHILE:kp,TYPES_FOREACH:Lp,TYPES_DATA:St,TYPES_COMPARE:jo,TYPES_ENUMERATION:at,TYPES_EXPRESSION:Lt,TYPES_LINK:Bt,TYPES_LOCAL:Je,TYPES_CONCAT:Co,TYPES_OBJECT:de,TYPES_RETURN:Ys,TYPES_SELECT:Pt,TYPES_MEMBER:ds,TYPES_STORE:Fo,TYPES_BREAK:Yp,TYPES_LITERAL:ve,TYPES_ARRAY_ACCESS:ws,TYPES_LINK_TO:zn,TYPES_VALUE_AT:Vs,TYPES_DROP:Do,TYPES_MAYBE:Qt,TYPES_MOVE:Uo,TYPES_NATIVE:He,TYPES_STRING:re,TYPES_FREE:wp,TYPES_FOR:Vp,TYPES_UP_TO:ko,TYPES_DOWN_TO:vp,TYPES_ALMOST_UP_TO:Lo,TYPES_ALMOST_DOWN_TO:Mp,TYPES_BRANCH:Yo,TYPES_CONTINUE:wo,TYPES_DEFAULT_BLOCK:jn,TYPES_BLOCK_END:zt,TYPES_STATEMENT:Vo,TYPES_DESTRUCTOR:vo,TYPES_SIZE:Mo,TYPES_WHILE_CONDITION:Cn,TYPES_FOREACH_CONDITION:Bo,TYPES_FOREACH_END:Ko,TYPES_FP32:Go,TYPES_I32:mt,TYPES_I64:Bp,TYPES_FP64:Kp,TYPES_CHAR:Fn,TYPES_BOOL:Dn,TYPES_BLOCK_BEGIN:Ho,TYPES_WHEN:Gp,TYPES_FUNCTION_CALL:Zo,TYPES_PROCEDURE:Hp,TYPES_CONSTRUCTOR:Zp,TYPES_UNREACHABLE:Xp}=Ns,{K_ASSIGNMENT:es,K_FLOGRAM:Qe}=Rt.Keywords,{ENUM_MEMORY_SIZE:Lu,ENUM_STACK_SIZE:Un,ARRAY_MEMORY_SIZE:ms,ARRAY_STACK_SIZE:Et,ARRAY_DEFAULT_CAPACITY:Wp,STRING_MEMORY_SIZE:kn,STRING_STACK_SIZE:Kt,OBJECT_MEMORY_SIZE:vs,OBJECT_STACK_SIZE:ts,NATIVE_MEMORY_SIZE:At,NATIVE_STACK_SIZE:Ts,NATIVE_SIZE:Yu,STEP:Tt,DOUBLE_STEP:_t,TRIPPLE_STEP:wu}=Rt.Sizes,jt=2,Gt=3,ss=12,ns=13,et=16,_e=26,i=65,Xo=71,qp=113,$p=114,gs=70,Wo=76,tt=32,Ct=33,F=35,le=36,Jp=15,Ht=11,qo=4,Qp=5,Xe=64,pt=127,Me=108,el=109,H=106,tl=107,Be=54,st=40,sl=0,ue=0,fe=2,Yt=4,nl=\"alloc\",Ln=\"dealloc\",$o=\"merge\",Jo=\"save\",ol=\"undo\",cl=\"undoPenultimate\",al=\"draw\",rl=\"drawI64\",il=\"drawFP32\",pl=\"drawFP64\",ll=\"now\",g=0,Le=1,Qo=\"Flogram.draw\",ul=\"Flogram.now\",ys=new Set([\"==\",\"!=\",\">\",\">=\",\"<\",\"<=\",\"or\",\"and\",\"or\",\"not\"]),fl=new Set([\"I32\",\"U32\",\"Bool\",\"FP32\",\"I64\",\"U64\",\"FP64\"]),{LEB128_ENCODE:l}=Jt,{INT_ARRAY_START:hl,FLOAT_ARRAY_START:El,STRING_START:ec,CHAR_START:_l,END_OF_LINE:Ol,NAT_ON_HORIZON:bl,BIG_NAT_ON_HORIZON:dl,FLOAT_ON_HORIZON:ml,BIG_FLOAT_ON_HORIZON:Tl}=Rt.DrawStates,Yn,N=(c,s)=>`${s}.${c}`,tc=(c,s,r)=>{let h=r.get(c);if(h&&h.length===1)return h[0];if(h&&h.length>1)return h[0];throw console.log(c),console.log(s),Error(\"No Callees were found\")};function Ms(c,s,r,h,D){c?.description?.inputs.length>0?Yn=c.description.inputs[0].data.name:c?.description?.outputs.length>0&&(Yn=c.description.outputs[0].data.name);let ce=t=>{Ie(t.collection).length},e=[],pe=new Set,me=!1,Oe=t=>{pe.add(t)},$=()=>{e.push(et,nl),Oe(\"alloc\")},Re=t=>{t===Go?(e.push(et,il),Oe(\"drawFP32\")):t===Kp?(e.push(et,pl),Oe(\"drawFP64\")):t?.includes(\"64\")?(e.push(et,rl),Oe(\"drawI64\")):(e.push(et,al),Oe(\"draw\"))},lt=()=>{Oe(\"now\"),e.push(et,ll)},ut=(t=g)=>{e.push(i,0),$(),e.push(le,t)},Ye=()=>{e.push(F,g),e.push(F,Le),e.push(et,Jo),e.push(F,Le),e.push(F,g),e.push(et,Jo),Oe(\"save\")},nt=()=>{e.push(et,ol),e.push(le,Le),e.push(le,g),Oe(\"undo\")},dt=()=>{e.push(et,cl),e.push(le,Le),e.push(le,g),Oe(\"undoPenultimate\")},ft=()=>{e.push(et,$o),Oe(\"merge\")},yt=(t,n=!1)=>{let o=t.path===Qe&&t.name!==re&&t.layout!==q&&t.type!==q;return n?o&&t.mutable:o},{description:Zs}=c,{inputs:Xs,locals:Vt,statements:xs}=Zs,Ce=new Map,Fe=new Map,Dt=new Map;{let t=0,n=o=>{for(let p of o){let{name:_,data:b}=p;switch(Ce.set(_,t),Fe.set(_,p),b.type){case Qt:case St:{let{name:R,path:j}=b,U=N(R,j);switch(R){case re:{t=t+Kt|0;break}default:{let x=s.get(U);if(!x)throw new Error(\"Key not found: \",U);switch(x.type){case He:{t=t+Ts|0;break}case at:{t=t+Un|0;break}case de:{let{length:ee}=x;t=t+ts|0;break}}break}}break}case q:{t=t+Et|0;break}case Bt:{let R=s.get(N(b.name,b.path));b.name===re?t=t+Kt|0:b.name===q||b.layout===q?t=t+Et|0:R.type===de?t=t+ts|0:t=t+Ts|0;break}}}};n(Xs),n(Vt)}let ge=0,Ke=[];for(let t of Vt){let{data:n}=t,o=()=>{Ke.push(1,pt),ge=ge+1|0},p=()=>{Ke.push(1,pt),ge=ge+1|0,Ke.push(1,pt),ge=ge+1|0,Ke.push(1,pt),ge=ge+1|0},_=()=>{Ke.push(1,pt),ge=ge+1|0,Ke.push(1,pt),ge=ge+1|0},b=()=>{Ke.push(1,pt),ge=ge+1|0,Ke.push(1,pt),ge=ge+1|0},R=U=>{let{identity:x}=U;Ke.push(1,x),ge=ge+1|0},j=()=>{Ke.push(1,pt),ge=ge+1|0,Ke.push(1,pt),ge=ge+1|0,Ke.push(1,pt),ge=ge+1|0};if(yt(n,!0)){o();continue}switch(n.type){case q:{p();break}case Bt:{let U=s.get(N(n.name,n.path));n.name===q?p():n.name===re?_():U&&U.type===de?b():o();break}case Qt:case St:{let{name:U,path:x}=n;switch(U){case re:{p();break}default:{let ee=N(U,x),ie=s.get(ee);switch(ie.type){case He:{R(ie);break}case at:{j();break}case de:{b();break}}break}}break}}}((t,n)=>{for(let[o,p]of t)if(p.type==n){Ke.push(1,pt),ge=ge+1|0;break}})(s,de);let Ws=l(ge);e.push(...Ws,...Ke);let qe=t=>{if(typeof t!==de)return t;switch(t.type){case Je:return t.name;case zn:return qe(t.value);case Vs:return qe(t.link);case ds:return`${t.type}_${t.trail.join(\"_\")}`;case ws:return t.array.name;case Pt:return qe(t.value);case Fo:return qe(t.link)}return null},Ie=t=>{if(!t)return null;switch(t.type){case ve:return t;case Je:return Fe.get(t.name)?.data;case Vs:return Ie(t.link);case zn:return Ie(t.value);case Uo:return Ie(t.value);case Qt:return t;case Mo:{if(t.value.type===Je)return{name:mt,path:Qe,type:St};break}case ws:{let n=Ie(t.array);if(n.name===re)return{name:n.type===q?re:Fn,path:Qe,type:St};let o=Fe.get(qe(t));return o.details||o.data.details||{...o.data,type:o.data.name===q?q:St}}case Pt:{let{value:n,trail:o}=t,{name:p}=n,_=Fe.get(p||qe(n)),{data:b}=_,R=N(b.name,b.path),j=s.get(R);if(j.type===at){let{labels:ie}=j,je=ie.find(T=>T.props.includes(o[0]));if(!je){console.error(\"Get Type: Unknown enum label value.....\");return}let k=s.get(N(je.name,R)).members.get(o[0]);if(o.length>1)for(;o.length>0;){let T=o.shift();k=s.get(N(k.name,k.path)).members.get(T)}return k}let{indivisibles:U}=j,x=JSON.parse(JSON.stringify(o)),ee=j;for(;x.length>0;){let ie=x.shift();if(x.length>0){let je=ee.members.get(ie),Ze=N(je.name,je.path);ee=s.get(Ze);continue}ee=ee.members.get(ie)}return ee}case Lt:{let n=h.find(R=>R.name===t.name&&R.path===t.path);if(n)return n.description.outputs[0].data;let o=[...c.description.locals,...c.description.inputs],p=R=>h.find(j=>j.type===Hp&&j.name===R.name)?.description.outputs[0],_=(R,j)=>{let U;for(let x=0;x<R.name.length-1;x++)j=Fe.get(R.name[0]);if(j){let x=N(j.data.name,j.data.path),ee=h.find(ie=>ie.name===R.name[R.name.length-1]&&ie.path===x);if(ee)return ee.description.outputs[0];console.error(\"Unable to find shape: \",j,x)}return U?.description.members?.find(x=>x.name===R.name[R.name.length-1])?.description.outputs[0]},b;if(t.path!==Qe){if(b=p(t),typeof t.name==\"object\"){let R=o.find(U=>U.name===t.name[0]).data;b=_(t,R);let j=t.name.length;t.name[j-1]===Zp&&(b={data:R})}return b&&b.data}else{if(t.name===So)return{type:St,name:Bp,path:Qe};if(ys.has(t.name))return{type:St,name:Dn,path:Qe};{let R=t.inputs.map(U=>Ie(U)),j=h.find(U=>U.description&&Array.isArray(U.description.inputs)?U.description.inputs.length!==R.length||U.name!==t.name||U.path!==t.path?!1:U.description.inputs.every((x,ee)=>x.data.name===R[ee].name):!1);if(j){let{description:U}=j,{outputs:x}=U;return x[0].data}else{console.error(\"Not found:: \",t);return}}}break}}},Wn=t=>{Ie(t)?.mutable&&e.push(st,fe,ue)},I=(t,n=Ys)=>{let o=0,p=[],_=(k,T)=>{let K={type:\"call\",key:k,inputs:T};p.unshift(K)},b=k=>{let T={type:\"value\",value:k};p.unshift(T)},R=k=>{let T={type:ds,member:k};p.unshift(T)},j=(k,T,K,B,G)=>{let Z={key:null,stop:!1},M;if(k&&fs.includes(k.name))if(k.name===re)e.push(i,Math.floor(Math.random()*2)),e.push(i,Math.floor(Math.random()*2)),e.push(Xo),Z.stop=!0;else{let{name:X}=k;M=N(X.toLowerCase()+\".\"+ct(B),K),Yn=X}else if(k){let{name:X,path:Q}=k,Ue=N(X,Q),O=s.get(Ue);if(O.type===at){let{labels:a}=O,z=Ie(T);if(N(z.name,z.path)===Ue){let E=a.find(S=>S.props.includes(T.trail[0])),f=s.get(N(E.name,Ue)).indivisibles.mapTrail.get(T.trail[0]);M=N(f.data.name.toLowerCase()+\".\"+ct(B),K)}else M=N(z.name.toLowerCase()+\".\"+ct(B),K)}else{let{indivisibles:a}=O,{mapTrail:z}=a,E=G.every(f=>{let S=Ie(f),m=N(S.name,S.path);return s.get(m).type===de}),C=Ie(T);if((B==\"==\"||B==\"!=\")&&E){let f=z.size-1;for(let[S,m]of z){p.unshift({type:jo,currentIndex:f,name:B}),M=N(m.data.name.toLowerCase()+\".\"+ct(B),m.data.path);let L=G.map(v=>({type:Pt,value:{type:Je,name:v.name||qe(v)},trail:[m.trail]}));_(M,L);var Ne=L.length-1|0;for(let v=Ne;v>=0;v=v-1|0){let ne=L[v];b(ne)}f--}Z.stop=!0}else G.every(f=>Ie(f).name===re)?Z.stop=!0:M=N(C.name.toLowerCase()+\".\"+ct(B),K)}}return Z.key=M,Z},U=k=>{let{name:T,path:K,inputs:B}=k;if(ys.has(k.name))return Dn;if(fl.has(k.name))return k.name;let G=h.filter(M=>M.name===T&&M.path===K&&M.description.inputs.filter(Ne=>Ne.name.startsWith(\"member_\")?!Ne.data.type===Bt&&!K.includes(\".\"):!0).length===B.length);if(G.length===1)return G[0].description.outputs[0]?.data.name??\"\";if(B.find(M=>M.type==Lt)){let M=B.map(X=>{if(X.type===Je)return Fe.get(X.name);if(X.type===ve)return{data:X};if(X.type===Lt)return{data:{name:U(X)}}}),Ne=h.find(X=>X.description&&Array.isArray(X.description.inputs)?X.description.inputs.length!==M.length?!1:X.description.inputs.every((Q,Ue)=>Q.data.name===M[Ue].data.name):!1);return Ne?ys.has(Ne.name)?Ne.description.inputs[0].data.name:Ne.description.outputs[0].data.name:\"unknown\"}else{let M=B.map(X=>({data:Ie(X)})),Ne=h.find(X=>X.description&&Array.isArray(X.description.inputs)?X.description.inputs.length!==M.length?!1:X.description.inputs.every((Q,Ue)=>Q.data.name===M[Ue].data.name):!1);if(Ne)return ys.has(Ne.name)?Ne.description.inputs[0].data.name:Ne.description.outputs[0].data.name;throw console.log(k),new Error(\"could not find the type for procedure: \",k.name)}},x=k=>{let{inputs:T,name:K,path:B}=k,G=N(K,B),Z=[B],M;if(typeof K===de){let X=K[0];if(M=Fe.get(X),M){Z.push(M.data.name);for(let Ue=1;Ue<=K.length-2;Ue++)X=K[Ue],M=Fe.get(X),M&&Z.push(M.data.name)}let Q=K.length-1|0;G=N(K[Q],Z.join(\".\"))}if(B===\"Flogram\"&&K!==Dp&&K!==So){let X=T.find(a=>a.type===Lt),Q=T.find(a=>a.type===ve),Ue,O;for(let a of T){let z=Ie(a);if(z){Ue=z,O=a;break}}if(Ue){let a=j(Ue,O,B,K,T);if(G=a.key,a.stop)return}else if(Q)G=N(`${Q.name.toLowerCase()}.${ct(K)}`,B);else if(X)G=N(`${U(X).toLowerCase()}.${ct(K)}`,B);else{let a=h.find(E=>E.name===k.name&&E.path===k.path&&E.description.inputs.length===k.inputs.length),z=h.filter(E=>E.name===k.name&&E.path===k.path&&E.description.inputs.length===k.inputs.length);G=N(`${ys.has(a.name)?a.description.inputs[0]?.data.name.toLowerCase():a.description.outputs[0]?.data.name.toLowerCase()}.${ct(a.name)}`,B)}}if(_(G,T),typeof K===de){let X=tc(G,T,r);if(X){let{procedure:Q}=X,{description:Ue}=Q,{self:O}=Ue,a=Fe.get(K[0]),z=N(a.data.name,a.data.path),E=s.get(z);if(E){let C=Ce.get(K[0]),{indivisibles:f,members:S}=E,{mapTrail:m}=f;for(let L=O.length-1|0;L>=0;L--){let v=O[L];if(v.type===ds){let ne=v.trail.join(\".\");if(m.get(ne)){let{data:Pe,address:oe}=m.get(ne),Ve=N(Pe.name,Pe.path),ae={isObject:s.get(Ve).type===de,index:C,address:oe};R(ae)}else throw Error(\"TODO: Using objects of depth greater than one.\")}else b(t)}}}}if(G!==Qo){var Ne=T.length-1|0;for(let X=Ne;X>=0;X=X-1|0){let Q=T[X];b(Q)}}},ee=k=>{let{key:T,inputs:K}=k;if(T===Qo){for(let Z of K){let M=Ie(Z);Z.type===Pt?M?.name===re?(e.push(i,...l(ec)),Re(),I(Z),e.push(le,g),e.push(st,fe,ue),Re(),e.push(F,g),e.push(st,fe,ue),Re()):(I(Z),Re(M?.name)):M?.name===re||Z.type===Co?(e.push(i,...l(ec)),Re(),I(Z),Re(),Re()):M?.type===q||M?.name===q||M?.layout===q?(Rs.includes(M.name)?e.push(i,...l(El)):e.push(i,...l(hl)),Re(),I(Z),e.push(_e),Re(),Re()):M?.name===Fn?(e.push(i,...l(_l)),Re(),I(Z),Re()):s.get(N(M.name,M.path))?.type===at?(I(Z),e.push(_e,_e),Re()):(I(Z),Re(M?.name))}e.push(i,...l(Ol)),Re(),o=o-K.length|0;return}if(T===ul){lt();return}let B=tc(T,K,r);switch(B.type){case He:{let{body:Z}=B;e.push(...Z);break}case\"artificial\":{let{index:Z}=B;e.push(et,Z);break}}let{lengths:G}=B;o=o-G.inputs|0,o=o+G.outputs|0},ie=k=>{let{value:T}=k,K=O=>{let a=0;me=!0;let z=qe(O),E,C;if(O.type===Pt){let{value:f,trail:S}=JSON.parse(JSON.stringify(O)),{name:m}=f,L=Fe.get(m),{data:v}=L,ne=N(v.name,v.path),Pe=s.get(ne),{indivisibles:oe}=Pe,{mapTrail:Ve}=oe,ae=S.join(\".\"),be=JSON.parse(JSON.stringify(S)),Te=Pe;for(;be.length>0;){let xt=be.shift();if(be.length>0){let ot=Te.members.get(xt),$e=N(ot.name,ot.path);Te=s.get($e);continue}Te=Te.members.get(xt)}let ke=N(Te.name,Te.path);E=s.get(ke)}else{let f=Fe.get(z),{data:S}=f,{name:m,path:L,segment:v}=S,ne=N(m,L);E=s.get(ne),C=m===re}if(E){switch(E.type){case He:{ie({value:O});let{link:f}=E,{load:S}=f;C||e.push(S.opcode,S.align,S.offset),a=a+1|0;break}case de:{let f=0,S=ne=>{ie({value:O});let{link:Pe}=ne,{load:oe}=Pe;e.push(oe.opcode,oe.align,oe.offset+f|0),a=a+1|0,f=f+oe.size|0},m=()=>{},{indivisibles:L}=E,{mapTrail:v}=L;for(let ne of v.values()){if(ne.type===Bt){m();continue}let{data:Pe}=ne,{name:oe,path:Ve}=Pe,ae=N(oe,Ve),be=s.get(ae);switch(be.type){case He:{S(be);break}case at:{ie({value:O}),e.push(st,fe,ue+f),a=a+1|0,f=f+Yt|0,ie({value:O}),e.push(i,...l(Tt)),e.push(st,fe,ue+f),e.push(H),a=a+1|0,f=f+Yt|0,ie({value:O}),e.push(i,...l(_t)),e.push(st,fe,ue+f),e.push(H),a=a+1|0,f=f+Yt|0;break}}}break}}return a}},B=(O,a=!0,z=!0)=>{let E=0;me=!0;function C(f){let{literal:S,name:m,path:L,vSize:v}=f,ne=v||S.length;f.quantity.capacity&&!v&&f.quantity.capacity.type===ve&&(ne=parseInt(f.quantity.capacity.literal,10));let Pe=N(m,L),oe=s.get(Pe),Ve=oe.type===de||m===re&&f.layout===q||f.contains===q;if(!f.quantity.capacity)if(f.literal)f.quantity.capacity={type:ve,name:mt,path:Qe,literal:`${Math.max(f.literal?.length||0,Wp)}`};else throw Error(\"Value without length provided for array container.\");if(Ve)I(f.quantity.capacity),m===re&&f.layout===q?e.push(i,...l(kn)):f.contains===q?e.push(i,...l(ms)):oe.type===de&&e.push(i,...l(vs)),e.push(Me),$(),e.push(le,g),Ye();else{Ye(),I(f.quantity.capacity);let ae=N(f.name,f.path),be=s.get(ae),{store:Te}=be.link;e.push(i,...l(Te.size)),e.push(Me),$(),e.push(le,g)}for(let ae=0;ae<ne;ae++){let be=S[ae];if(be)if(be.name===re&&f.layout===q||be.layout===q&&oe.type!==de){let Te=[];if(be.layout===q)e.push(F,g),e.push(F,g),e.push(F,g),e.push(F,g),e.push(i,...l(ae)),e.push(i,...l(ms)),e.push(Me),e.push(H),Te.push(be.literal),C(be),e.push(F,g),e.push(Be,fe,ue),e.push(i,...l(Tt)),e.push(i,...l(ae)),e.push(i,...l(_t)),e.push(Me),e.push(H),e.push(H),I(be.quantity.size),e.push(Be,fe,ue),e.push(i,...l(_t)),e.push(i,...l(ae)),e.push(i,...l(_t)),e.push(Me),e.push(H),e.push(H),I(be.quantity.size),e.push(Be,fe,ue),e.push(le,g);else{let ke=be.size||be.literal.length;for(let ot=0;ot<ke;ot++)Te.push({type:be.type,path:be.path,name:\"I32\",literal:be.literal[ot].charCodeAt().toString()});let xt={type:ve,name:mt,layout:q,path:be.path,literal:Te,quantity:{size:{literal:Te.length.toString(),type:ve,name:mt,path:Qe},capacity:{literal:Te.length.toString(),type:ve,name:mt,path:Qe}}};e.push(F,g),e.push(F,g),e.push(F,g),e.push(i,...l(ae)),e.push(i,...l(vs)),e.push(Me),e.push(H),C(xt),e.push(F,g),e.push(Be,fe,ue),e.push(i,...l(Tt)),e.push(i,...l(ae)),e.push(i,...l(_t)),e.push(Me),e.push(H),e.push(H),e.push(i,...l(ke)),e.push(Be,fe,ue),e.push(le,g)}}else switch(oe.type){case He:{let{link:Te}=oe,{store:ke}=Te;e.push(F,g),e.push(i,...l(At)),e.push(i,...l(ae)),e.push(Me),e.push(H),!be||be.type===ve?e.push(oe.opcode,...oe.encode(be?.literal||0)):I(be),e.push(ke.opcode,ke.align,ke.offset),ft(),E=3;break}case de:{e.push(F,g),e.push(F,g),e.push(i,...l(ae)),e.push(i,...l(8)),e.push(Me),e.push(H),I(be),e.push(le,Le),e.push(Be,fe,ue),e.push(le,g),e.push(F,g),e.push(i,...l(Tt)),e.push(i,...l(ae)),e.push(i,...l(_t)),e.push(Me),e.push(H),e.push(H),e.push(F,Le),e.push(Be,fe,ue);break}}}}return C(O),a&&(e.push(F,g),E=1),z&&(I(O.quantity.size),I(O.quantity.capacity),E=2),E},G=(O,a,z=!0)=>{let E=s.get(a);ut();let C=(m,L,v=null,ne=!1)=>{if(Ye(),dt(),e.push(F,g),e.push(F,g),e.push(F,g),ne&&e.push(F,g),nt(),e.push(i,...l(L)),e.push(H),e.push(F,g),e.push(Be,fe,ue),e.push(i,...l(L)),e.push(i,...l(Tt)),e.push(H),e.push(H),v!=null)Q(v,v+1|0);else if(m)I(ne?m.size:m);else throw new Error(\"Unable to read object length\");if(e.push(Be,fe,ue),ne){if(e.push(i,...l(L)),e.push(i,...l(_t)),e.push(H),e.push(H),v!=null)Q(v+1,v+2|0);else if(m)I(m.capacity);else throw new Error(\"Unable to read object length\");e.push(Be,fe,ue)}e.push(le,g)},f=[];for(let[m,L]of E.members){if(!L)continue;let v=O.find(oe=>oe.name===m)||{name:m,value:L.value},ne=N(L.name,L.path),Pe=s.get(ne);if(L.type===q){e.push(i,...l(ms)),$(),e.push(_e),f.push({data:{keyName:m,keyData:L},literal:v});continue}switch(Pe.type){case He:{let{link:oe}=Pe,{store:Ve}=oe;if(L.type===Bt)Ye(),e.push(i,...l(At)),$(),I(v.value),e.push(Ve.opcode,Ve.align,Ve.offset),nt();else if(L.name===re)e.push(i,...l(_t)),$(),e.push(_e),f.push({data:{keyName:m,keyData:L},literal:v});else{e.push(i,...l(Ve.size)),$();let ae=JSON.parse(JSON.stringify(v.value));ae.literal&&(ae.name!==L.name||ae.path!==L.path)&&(ae={...ae,name:L.name,path:L.path}),I(ae),e.push(Ve.opcode,Ve.align,Ve.offset)}ft();break}case de:{e.push(i,...l(_t)),$(),e.push(_e),f.push({data:{keyName:m,keyData:L},literal:v});break}}}if(f.length>0){let m=f[0],{data:L,literal:v}=m,{keyName:ne,keyData:Pe}=L,{type:oe,name:Ve,layout:ae,path:be}=Pe,ke=($e=>{let It=E.indivisibles.mapTrail;if(It.has($e))return It.get($e).address;let Mt=Array.from(It.entries()).filter(([en])=>en.startsWith(`${$e}.`));return Mt.length?(Mt.sort((en,Ec)=>en[1].address-Ec[1].address),Mt[0][1].address-8):null})(ne),xt=N(Ve,be),ot=s.get(xt);if(Ve===re){Ye(),I(v.value),e.push(_e),e.push(le,g);let $e={type:ve,name:mt,literal:v.value.size||v.value.literal.length,path:Qe};C($e,ke),ft()}else if(ot.type===de){Ye();let $e=G(v.value.literal,xt,!1);C({type:ve,name:mt,literal:$e,path:Qe},ke),ft()}else if(oe===q||ae===q)if(v.value.type===Je){let $e=Ce.get(v.value.name);Ye(),M(Pe,$e),C(Pe.quantity,ke,$e+1,!0),ft()}else Ye(),B(v.value,!1,!1),C(v.value.quantity,ke,null,!0),ft();else throw Error(\"Error: Unable to identify type: \",ot.type)}let S=E.indivisibles.mapTrail.size+f.length;return z&&(e.push(F,g),e.push(i,...l(S))),S},Z=(O,a)=>{let z=0;me=!0;let E=Fe.get(a),C;if(E){let{data:S}=E,{name:m,path:L,segment:v}=S;C=N(m,L)}else{let S=Ie(O);C=N(S?.name,S?.path)}let f=s.get(C);switch(f.type){case He:{let{link:S}=f,{store:m}=S;e.push(i,...l(m.size)),$(),e.push(le,g),e.push(F,g),I(O),e.push(m.opcode,m.align,m.offset),e.push(F,g),z=z+7|0;break}case de:{let S=0,{indivisibles:m}=f,{mapTrail:L}=m,v=O.trail.join(\".\");switch(O.type){case Pt:{let ne=L.get(v);if(ne&&yt(ne.data)){let Pe=N(ne.data.name,ne.data.path),oe=s.get(Pe),{link:Ve}=oe,{store:ae}=Ve;e.push(i,...l(ae.size)),$(),e.push(le,g),e.push(F,g),I(O),e.push(ae.opcode,ae.align,ae.offset),e.push(F,g);break}}default:{I(O);break}}break}}return z},M=(O,a=0,z=2)=>{let{name:E,path:C}=O,f=N(E,\"Flogram\"),S=s.get(f),{link:m}=S,{store:L,load:v}=m,ne=a;return ut(),e.push(i,0),e.push(le,Le),e.push(jt,Xe),e.push(Gt,Xe),Q(ne+z,ne+z+1|0),e.push(F,Le),e.push(Wo),e.push(ns,1),e.push(i,...l(L.size)),$(),Q(ne,ne+1|0),e.push(F,Le),e.push(i,v.size),e.push(Me),e.push(H),e.push(v.opcode,v.align,v.offset),e.push(L.opcode,L.align,L.offset),ft(),e.push(F,Le),e.push(i,1),e.push(H),e.push(le,Le),e.push(ss,0),e.push(Ht),e.push(Ht),O.length},Ne=(O,a=2)=>{let{name:z,path:E}=O,C=N(z,\"Flogram\"),f=s.get(C),{link:S}=f,{store:m,load:L}=S;return ut(),Ye(),dt(),e.push(i,0),e.push(le,Le),e.push(jt,Xe),e.push(Gt,Xe),e.push(F,g),e.push(i,...l(At*a)),e.push(H),e.push(st,fe,ue),e.push(F,Le),e.push(Wo),e.push(ns,1),e.push(i,...l(m.size)),$(),e.push(F,g),e.push(st,fe,ue),e.push(F,Le),e.push(i,L.size),e.push(Me),e.push(H),e.push(L.opcode,L.align,L.offset),e.push(m.opcode,m.align,m.offset),ft(),e.push(F,Le),e.push(i,1),e.push(H),e.push(le,Le),e.push(ss,0),e.push(Ht),e.push(Ht),nt(),O.length},X=(O,a)=>{let z=s.get(a);if(!z)throw new Error(\"No shape found\");let{opcode:E}=z,C=z.encode(O);e.push(E,...C)},Q=(O,a)=>{for(;O<a;)e.push(tt,O),O=O+1|0};if(!T)throw new Error(\"Invalid value provided to actionValue\");switch(T.type){case Lt:{x(T);break}case\"instance\":{let{path:O,members:a}=T;var Ue=a.length-1|0;for(let z=Ue;z>=0;z=z-1|0){let E=a[z],{path:C,value:f}=E;b(f)}break}case Qt:{let{data:O}=T,{name:a,path:z}=O,E=N(a,z),C=s.get(E);T.layout===\"NONE\"?e.push(C.opcode,...C.none):I(T.value),o=o+1|0;break}case Vs:{let{link:O}=T;D.optimization;let a=K(O);o=o+a|0;break}case zn:{let{value:O}=T,a=qe(O);if(Fe.get(a)?.data.type===q){I({name:a,type:Je});return}if(Ie(O)?.name===re){I(O);return}let E=Z(O,a);o=o+E|0;break}case Mo:{let{value:O}=T;switch(O.type){case Je:{if(Dt.get(O.name)&&D.linkValueLoad){let a=Dt.get(O.name),z=a.source.length;typeof a.source.literal===re.toLowerCase()&&(z=literal.value.literal.length),e.push(i,...l(z))}else{let a=Ce.get(O.name);Q(a+1|0,a+2|0)}break}}break}case Co:{let{values:O}=T;ut(Le),Ye(),Ye();for(let a of O){let z=Ie(a),E=N(z.name,z.path),C=s.get(E);if(z.name===re)I(a,es),e.push(_e),e.push(_e);else if(z.type===q||z.layout===q)I(a,es),e.push(_e),e.push(_e),e.push(_e);else if(C?.type===at)console.log(Ie(a));else if(ls.includes(z.name)){let{link:f}=C,{store:S,load:m}=f;e.push(i,...l(Yt)),$(),e.push(i,...l(sn.includes(z.name)?dl:bl)),e.push(Be,fe,ue),e.push(i,...l(S.size)),$(),I(a),z.mutable&&e.push(m.opcode,m.align,m.offset),e.push(S.opcode,S.align,S.offset)}else if(Rs.includes(z.name)){let{link:f}=C,{store:S,load:m}=f;e.push(i,...l(Yt)),$(),e.push(i,...l(z.name===Go?ml:Tl)),e.push(Be,fe,ue),e.push(i,...l(S.size)),$(),I(a),z.mutable&&e.push(m.opcode,m.align,m.offset),e.push(S.opcode,S.align,S.offset)}else if(z.name===Fn){let{link:f}=C,{store:S,load:m}=f;e.push(i,...l(S.size)),$(),I(a),z.mutable&&e.push(m.opcode,m.align,m.offset),e.push(S.opcode,S.align,S.offset)}else{let{link:f}=C,{store:S,load:m}=f;e.push(i,...l(S.size)),$(),I(a),z.mutable&&e.push(m.opcode,m.align,m.offset),e.push(S.opcode,S.align,S.offset)}ft()}nt(),nt(),ut(),e.push(F,Le),e.push(F,g),e.push(F,Le),e.push(tl),e.push(i,...l(At)),e.push(el),o=o+2|0;break}case ve:{let{literal:O,name:a,path:z}=T,E=N(a,z),C=s.get(E);if(T.layout===q){B(T),o=o+3|0;return}else if(a===re){let f=[];for(let m of O)f.push({type:ve,literal:m.charCodeAt(0).toString(),name:mt,path:\"Flogram\"});let S={...T,name:mt,layout:q,contains:null,quantity:{capacity:{literal:f.length.toString(),type:ve,name:mt,path:Qe},size:{literal:f.length.toString(),type:ve,name:mt,path:Qe}},literal:f};B(S),e.push(_e),o=o+2|0;return}if(C)if(C.type===de)G(O,E),o=o+2|0;else if(C.type===at){if(X(O,E),o=o+3|0,T.props?.length>0){let f=N(a,z),S=N(O,f),L=s.get(S).indivisibles.mapIndex,v=Object.freeze({type:ve,name:O,literal:T.props.map(ne=>({name:L.get(T.props.indexOf(ne)).trail,value:ne})),path:f});G(v.literal,S)}else e.push(i,0),e.push(i,0);return}else X(O,E),o=o+1|0;else throw console.log(E),new Error(\"NO SHAPE FOUND!!!!!!!!!\",T);break}case ws:{let{array:O,index:a}=T,z=qe(O),E=Ce.get(z),C=Ie(O);E!=null;let f=()=>{I(O),e.push(_e),e.push(_e)},S=N(C.name,C.path);me=!0;let m=s.get(S);switch(m.type){case He:if(C.contains===q||C?.type===q&&C?.layout===q||C?.name===re&&C.contains)E!=null?Q(E,E+1|0):f(),I(a),e.push(i,...l(At)),e.push(Me),e.push(H),e.push(le,g),Ye(),Ne(C);else if(C.name===re&&C.type===q)E!=null?Q(E,E+1|0):f(),I(a),e.push(i,...l(At)),e.push(Me),e.push(H),e.push(le,g),Ye(),Ne(C,2);else{let{link:L}=m,{load:v}=L;E!=null?Q(E,E+1|0):f(),I(a),e.push(i,...l(v.size)),e.push(Me),e.push(H),e.push(v.opcode,v.align,v.offset),o=o+1|0;break}case de:{E?Q(E,E+1|0):f(),I(a),C?.type===q?C?.name!==re&&!C?.contains?e.push(i,...l(At)):C.name===re?e.push(i,...l(kn)):e.push(i,...l(ms)):e.push(i,...l(vs)),e.push(Me),e.push(H),e.push(st,fe,ue),Q(E,E+1|0),e.push(i,...l(At)),I(a),C?.type===q?C?.name!==re&&!C?.contains?e.push(i,...l(At)):C.name===re?e.push(i,...l(kn)):e.push(i,...l(ms)):e.push(i,...l(vs)),e.push(Me),e.push(H),e.push(H),e.push(st,fe,ue),o=o+2|0;break}}break}case Uo:{I(T.value);break}case Je:{let{name:O}=T,a=Ce.get(O),z=Fe.get(O);if(D.optimization){let f=Dt.get(z.name);if(f){let S=m=>m.name===Dn?m.literal===\"FALSE\"||m.literal==\"0\"?0:1:parseInt(f.source.literal,10);if(f.source.name!==re&&f.source.layout!==q){let m=S(f.source);e.push(i,...l(m));return}}}let{data:E}=z,C=s.get(N(E.name,E.path));switch(E.type){case Bt:{E.name===q?(Q(a,a+Et|0),o=o+Et|0):C.type===de?(Q(a,a+ts|0),o=o+ts|0):E.name===re?(Q(a,a+Kt|0),o=o+Kt|0):(Q(a,a+Ts|0),o=o+Ts|0);break}case q:{n===es&&E.quantity.capacity?(M(E,a),e.push(F,g),E.quantity.capacity?(I(E.quantity.size),I(E.quantity.capacity)):Q(a+1,a+Et|0)):(Q(a,a+Et|0),o=o+Et|0);break}case Qt:case St:{let{name:f,path:S}=E,m=N(f,S),L=s.get(m);switch(E.layout){case q:{Q(a,a+Et|0),o=o+Et|0;break}default:{switch(L.type){case He:{if(f===re){n===es?(ut(),Ye(),Oe(\"save\"),e.push(i,0),e.push(le,g),e.push(jt,Xe),e.push(Gt,Xe),e.push(i,Yt),$(),e.push(tt,a),e.push(F,g),e.push(i,...l(At)),e.push(Me),e.push(H),e.push(st,fe,ue),e.push(Be,fe,ue),e.push(F,g),e.push(i,1),e.push(H),e.push(le,g),e.push(et,$o),Oe(\"merge\"),e.push(F,g),e.push(tt,a+1),e.push(gs),e.push(ns,1),e.push(ss,0),e.push(Ht),e.push(Ht),nt(),Oe(\"undo\"),e.push(F,g),e.push(tt,a+1)):(Q(a,a+2|0),o=o+2|0);break}else Q(a,a+1|0);break}case at:{Q(a,a+Un|0),o=o+Un|0;break}case de:{Q(a,a+ts|0),o=o+ts|0;break}}break}}break}}break}case Pt:{let{value:O,trail:a}=T,z=O.name||O.link||O.value;me=!0;let E=Fe.get(z),C;if(E){let{data:Te}=E;C=N(Te.name,Te.path)}else{let Te=Ie(O);C=N(Te.data?.name,Te.data?.path)}let f=s.get(C);if(f.type===at){let{opcode:Te}=f;Ye(),I(O),e.push(_e),e.push(le,g);let ke=f.labels.find(Mt=>Mt.props.includes(a[0]));if(e.push(_e),e.push(F,g),!ke){console.error(\"Load value: Unknown enum label value.....\");return}let ot=s.get(N(ke.name,C)).indivisibles.mapTrail.get(a[0]);e.push(i,...l(ot.address)),e.push(H);let $e=s.get(N(ot.data.name,ot.data.path)),{load:It}=$e.link;e.push(It.opcode,It.align,It.offset),nt();return}let{indivisibles:S}=f,{mapTrail:m}=S,L=JSON.parse(JSON.stringify(a)),v=m.get(a[0]),{address:ne}=v,Pe=[ne],oe=f;for(;L.length>0;){let Te=L.shift();if(L.length>0){let ke=oe.members.get(Te),xt=N(ke.name,ke.path);if(oe=s.get(xt),oe.indivisibles){let{indivisibles:ot}=oe,{mapTrail:$e}=ot,It=$e.get(L[0]),{address:Mt}=It;Pe.push(Mt)}continue}oe=oe.members.get(Te)}let Ve=N(oe.name,oe.path),ae=s.get(Ve),be=Ce.get(z);for(e.push(tt,...l(be));Pe.length>1;){let Te=Pe.shift();e.push(i,...l(Te)),e.push(H),e.push(st,fe,ue)}if(e.push(i,...l(Pe[0])),e.push(H),oe.type===q||oe.layout===q)e.push(le,g),e.push(F,g),e.push(i,...l(_t)),e.push(H),e.push(F,g),e.push(i,...l(Tt)),e.push(H),e.push(F,g);else if(oe.name===re){if(e.push(le,g),n===es){Ye(),Ne(oe,1),e.push(i,0),e.push(i,0);return}e.push(F,g),e.push(i,...l(Tt)),e.push(H),e.push(F,g)}else if(ae.type===de)e.push(le,g),e.push(F,g),e.push(i,...l(Tt)),e.push(H),e.push(F,g);else if(ae.type===at)e.push(le,g),e.push(F,g),e.push(st,fe,ue),e.push(F,g),e.push(st,fe,ue),e.push(F,g),e.push(st,fe,ue);else if(ae.link){let{link:Te}=ae,{load:ke}=Te;e.push(ke.opcode,ke.align,ke.offset)}else throw Error(\"Unhandled Case: Could read to program not running!!!!\");break}}},je=k=>{let{name:T,currentIndex:K}=k;if(K===0)e.push(Ct,Ce.size+1);else if(e.push(tt,Ce.size+1),T===\"==\")e.push(qp);else if(T===\"!=\")e.push($p);else throw new Error(`Unknown operator ${T} for objects`)},Ze=k=>{let{member:T}=k,{isObject:K,index:B,address:G}=T;if(K){e.push(tt,...l(B)),e.push(i,...l(G)),e.push(H),e.push(tt,...l(B)),e.push(i,...l(G+Tt)),e.push(H);return}e.push(tt,...l(B)),e.push(i,...l(G)),e.push(H)};for(b(t);p.length>0;){let k=p.shift();switch(k.type){case\"call\":{ee(k);break}case\"value\":{ie(k);break}case ds:{Ze(k);break}case jo:{je(k);break}}}return o},Xt=t=>{let n=(p,_)=>{for(;p<_;)_=_-1|0,e.push(Ct,_)},o=(p,_)=>{if(yt(_,!0)){n(p,p+1|0);return}switch(_.type){case Bt:{_.name===q?n(p,p+Et|0):_.name===re?n(p,p+Kt|0):n(p,p+Ts|0);break}case re:{n(p,p+Kt|0);break}case q:{n(p,p+Et|0);break}case Qt:case St:{let{name:b,path:R}=_,j=N(b,R),U=s.get(j);switch(b){case re:{n(p,p+2|0);break}case q:{n(p,p+Number(_.quantity.capacity.literal)|0);break}default:{switch(U.type){case He:{b===re?n(p,p+2|0):n(p,p+1|0);break}case at:{n(p,p+3|0);break}case de:{n(p,p+2|0);break}}break}}break}}};switch(t.type){case Je:{let{name:p}=t,_=Ce.get(p),b=Fe.get(p),{data:R}=b;o(_,R);break}case Pt:{let{value:p,trail:_}=t,{name:b}=p,R=Fe.get(b),{data:j}=R,U=N(j.name,j.path),x=s.get(U),{indivisibles:ee}=x,{mapTrail:ie}=ee,je=_.join(\".\"),Ze=JSON.parse(JSON.stringify(_)),k=ie.get(je),{index:T}=k,K=x;for(;Ze.length>0;){let G=Ze.shift();K=K.members.get(G)}let B=Ce.get(b);K.type==q?n(B+T|0,B+T+Et|0):K.type==re?n(B+T|0,B+T+Kt|0):n(B+T|0,B+T+1|0);break}}},y=(t,n)=>{let{array:o,index:p}=t;me=!0;let _=0,b=Ce.get(o.name),R=()=>{e.push(tt,b)},j=Fe.get(qe(o)),{data:U}=j,{name:x,path:ee}=U,ie=N(x,ee),je=s.get(ie);switch(je.type){case He:{R(),I(p);let{link:Ze}=je,{store:k}=Ze;e.push(i,k.size),e.push(Me),e.push(H);let T=Ie(n);I(n),T.mutable&&e.push(st,fe,ue),e.push(k.opcode,k.align,k.offset),_=_+4|0;break}case de:{R(),I(p),e.push(i,Yt),e.push(Me),e.push(H),e.push(le,g),e.push(F,g),e.push(F,g),e.push(i,Yt),e.push(H),I(n),e.push(Be,fe,ue),e.push(Be,fe,ue),_=_+4|0;break}}return _},u=(t,n)=>{let{value:o,trail:p}=t,{name:_}=o;me=!0;let b=Fe.get(_),{data:R}=b,j=N(R.name,R.path),U=s.get(j),{indivisibles:x}=U,{mapTrail:ee}=x,ie=p.join(\".\"),je=JSON.parse(JSON.stringify(p)),Ze=ee.get(ie),{address:k}=Ze,T=U;for(;je.length>0;){let G=je.shift();if(je.length>0){let Z=T.members.get(G),M=N(Z.name,Z.path);T=s.get(M);continue}T=T.members.get(G)}let K=N(T.name,T.path),B=s.get(K);switch(B.type){case He:{let{link:G}=B,{store:Z}=G,M=Ce.get(_);e.push(tt,...l(M)),e.push(i,...l(k)),e.push(H),I(n),e.push(Z.opcode,Z.align,Z.offset);break}}},P=(t,n)=>{let{link:o}=t;me=!0;let p=0,{name:_,path:b,layout:R}=Ie(o),j=N(_,b),U=s.get(j);if(_===q||R===q){I(o),e.push(_e),e.push(le,g);let x=Ce.get(qe(o));I(n),e.push(Ct,x+2|0),e.push(Ct,x+1|0),e.push(Ct,x),e.push(F,g),e.push(et,Ln),Oe(\"dealloc\")}else if(_===re){I(o),e.push(_e),e.push(le,g);let x=Ce.get(qe(o));I(n),e.push(Ct,x+1|0),e.push(Ct,x),e.push(F,g),e.push(et,Ln),Oe(\"dealloc\");return}switch(U.type){case He:{I(o),I(n);let{link:x}=U,{store:ee}=x;e.push(ee.opcode,ee.align,ee.offset),p=p+1|0;break}case de:{let x=0,ee=(G,Z,M=\"\")=>{let Ne=M?`${M}.${G.name}`:G.name,X=Z.get(Ne);if(X){let{data:Q}=X,Ue=N(Q.name,Q.path),O=s.get(Ue),{store:a}=O.link;I(o),e.push(_e),e.push(i,...l(X.address)),e.push(H),I(G.value),e.push(a.opcode,a.align,a.offset)}else if(G.value&&G.value.literal)for(let Q of G.value.literal)ee(Q,Z,Ne)};if(n.type===Je){let{name:G}=n;if(x=Ce.get(G),t.link.name.startsWith(ds)){let Z=Ce.get(t.link.name),{name:M,path:Ne}=Fe.get(G),X=N(M,Ne),Q=s.get(X),{indivisibles:Ue}=Q,{mapTrail:O}=Ue;for(let a of O){let{data:z}=a,E=N(z.name,z.path),C=s.get(E),{load:f,store:S}=C.link;e.push(i,...l(Z)),e.push(i,...l(a.address)),e.push(H),e.push(i,...l(x)),e.push(i,...l(a.address)),e.push(H),e.push(f.opcode,f.align,f.offset),e.push(S.opcode,S.align,S.offset)}return}return I(o),e.push(_e),e.push(tt,...l(x)),e.push(Be,fe,ue),I(o),e.push(_e),e.push(i,...l(Tt)),e.push(H),e.push(tt,...l(x+1|0)),e.push(Be,fe,ue),p=p+2|0,p}let{literal:ie,name:je,path:Ze}=n,k=N(je,Ze),T=s.get(k),{indivisibles:K}=T,{mapTrail:B}=K;for(let G of ie)ee(G,B)}}return p},Y=(t,n)=>{let{type:o,link:p}=n,_=0,b=ee=>{let ie=Array.from(ee.members.values()).reduce((K,B)=>B?K+1:K,0);ut();let{indivisibles:je}=ee,{mapTrail:Ze}=je,k=(K,B)=>{let{store:G,load:Z}=K.link,{address:M}=Ze.get(B);e.push(i,...l(G.size)),$(),I(p),e.push(_e),e.push(i,...l(M)),e.push(H),e.push(Z.opcode,Z.align,Z.offset),e.push(G.opcode,G.align,G.offset)},T=(K,B)=>{e.push(i,...l(_t)),$(),e.push(le,Le);for(let[Z,M]of K.members){if(!M)continue;let Ne=N(M.name,M.path),X=s.get(Ne);if(X.type===de){Ye(),T(X,`${B}.${Z}`);continue}let Q=`${B}.${Z}`;k(X,Q)}e.push(F,Le),e.push(F,Le),e.push(i,...l(_t)),e.push(H),e.push(Be,fe,ue);let G=Array.from(K.members.values()).reduce((Z,M)=>M?Z+1:Z,0);e.push(F,Le),e.push(i,...l(Tt)),e.push(H),e.push(i,...l(G)),e.push(Be,fe,ue),nt()};for(let[K,B]of ee.members){if(!B)continue;let G=N(B.name,B.path),Z=s.get(G);if(Z.type===de){T(Z,K);continue}k(Z,K)}e.push(F,g),e.push(i,...l(ie))},{name:R,path:j}=Ie(p||n),U=N(R,j),x=s.get(U);switch(x.type){case He:case de:{if(t.type===Je)return b(x),Xt(t),_;break}}return _},J=(t,n,o)=>{let p=s.get(t),_=R=>{switch(R.type){case Je:{let{name:j}=R,U=Ce.get(j);e.push(tt,U);break}case ve:{let{literal:j}=R,U=p.type===He?j:p.evaluate(j),x=l(U);e.push(i,...x);break}}},b=()=>{switch(p.type){case at:case He:{e.push(Xo),e.push(ns,0);break}}};switch(p.type){case at:{I(n),e.push(_e),e.push(_e),I(o),e.push(_e),e.push(_e),b();break}case He:{I(n),I(o),b();break}}},w=[],W=t=>{let n={type:Vo,statement:t};w.unshift(n)},ye=()=>{let t={type:Ho};w.unshift(t)};w.unshift({type:zt});let ze=(t,n)=>{if(t.members)for(let[o,p]of t.members.entries()){let _=N(p?.name,p?.path),b=s.get(_);if(b&&b.type===de){let R=ze(b,_,n);R&&he.push(R)}}return t.members&&t.members.has(vo)?n:null},he=[];Vt.forEach(t=>{let n=N(t.data.name,t.data.path),o=s.get(n);if(o&&o.type===de){let p=ze(o,n);p&&he.push(p)}});let xe=he.map(t=>({type:Do,expression:{type:Lt,name:vo,path:t,inputs:[]}}));for(let t of xe)W(t);var Ee=xs.length-1|0;for(let t=Ee;t>=0;t=t-1|0){let n=xs[t];W(n)}let we=t=>{let{target:n,source:o}=t;if(D.optimization){if(o.type===ve&&o.path===Qe){let b=qe(n);b&&Dt.set(b,{target:n,source:o})}o.type!==ve&&Dt.get(n.name||\"\")&&Dt.delete(n.name)}if(n.type===Fo){P(n,o);return}if(n.type===Up){y(n,o);return}if(n.type===Pt){u(n,o);return}let p,_=Ie(o);if(_&&(p=s.get(N(_.name,_.path))),p&&p.type===de&&_.type!==ve){let b=o;if(o.type===Vs){I(o.link),Xt(n);return}b={type:\"value_copy\",link:o},Y(n,b);return}I(o,es),Xt(n)},Ge=t=>{let{statements:n}=t;e.push(jt,Xe),e.push(Gt,Xe);let o={type:zt,layout:bs};w.unshift(o),w.unshift(o),w.unshift({type:wo});var p=n.length-1|0;for(let _=p;_>=0;_=_-1|0){let b=n[_];W(b)}},rs=t=>{let{statements:n,condition:o}=t;e.push(jt,Xe),e.push(Gt,Xe);let p={type:zt,layout:bs};w.unshift(p),w.unshift(p),w.unshift({type:Cn,condition:o});var _=n.length-1|0;for(let b=_;b>=0;b=b-1|0){let R=n[b];W(R)}},vt=t=>{let{statements:n,collection:o,index:p,iterator:_}=t;e.push(i,0),p?e.push(Ct,Ce.get(p)):e.push(le,g),e.push(jt,Xe),e.push(Gt,Xe);let b={type:zt,layout:bs};w.unshift(b),w.unshift(b),w.unshift({type:Ko,index:p});var R=n.length-1|0;for(let j=R;j>=0;j=j-1|0){let U=n[j];W(U)}w.unshift({type:Bo,collection:o,iterator:_,index:p})},De=t=>{let{statements:n}=t;t.initializer&&we(t.initializer),e.push(jt,Xe),e.push(Gt,Xe);let o={type:zt,layout:bs};w.unshift(o),w.unshift(o);let p={type:Lt,name:t.modifier===ko?\"<=\":t.modifier===Lo?\"<\":t.modifier===vp?\">=\":t.modifier===Mp?\">\":\"\",path:Qe,inputs:[t.variable,t.limit]};w.unshift({type:Cn,condition:p});let _={type:Lt,name:t.modifier===ko||t.modifier===Lo?\"+\":\"-\",path:Qe,inputs:[t.variable,t.step]},b={type:Ro,source:_,target:t.variable};W(b);var R=n.length-1|0;for(let j=R;j>=0;j=j-1|0){let U=n[j];W(U)}},qs=t=>{e.push(ss,2)},is=t=>{let{branches:n}=t;w.unshift({type:zt});for(let o=n.length-1;o>=0;o--){let p=n[o];switch(p.type){case Po:{let{statements:_}=p,b=_.length;for(let j=b-1;j>=0;j--){let U=_[j];W(U)}let R=_.find(j=>j.type===Ys);w.unshift({type:Ls,stop:R}),I(p.values[0]);break}case zo:{let{statements:_}=p,b=_.length;for(let R=b-1;R>=0;R--){let j=_[R];W(j)}w.unshift({type:jn});break}}}},Wt=(t,n)=>{w.unshift({type:zt});let o=n[0];if(n.length>=2){if(n[1].type===Po)Wt(t,n.slice(1));else if(n[1].type===zo){let{statements:x}=n[1],ee=x.length;for(let ie=ee-1;ie>=0;ie--)W(x[ie])}}let{statements:p}=o;w.unshift({type:jn});let _=p.length;for(let x=_-1;x>=0;x--)W(p[x]);let b=p.find(x=>x.type===Ys),R=Object.freeze({type:Ls,stop:b});w.unshift(R);let U=Object.freeze({type:Zo,function:()=>{let{name:x,path:ee}=Ie(t);s.get(N(x,ee)).type===at?(I(t),e.push(_e),e.push(_e),I(o.value),e.push(_e),e.push(_e),e.push(gs)):(I(t),I(o.value),e.push(gs))}});w.unshift(U)},$s=t=>{let{value:n,matches:o}=t;Wt(n,o)},Is=t=>{let n=t,{branches:o,values:p}=n;if(o.length>0&&p.length===0)return is(t);e.push(jt,Xe);let b={type:zt};w.unshift(b);let R=[];for(let U of p)switch(U.type){case Je:{let{name:x}=U,ee=Fe.get(x),{data:ie}=ee,{name:je,path:Ze}=ie,k=N(je,Ze);R.push(k);break}}var j=o.length-1|0;for(let U=j;U>=0;U=U-1|0){let x=o[U],ee={type:Yo,branch:x,condition:n,commonKeys:R};w.unshift(ee)}},As=t=>{let{expression:n}=t;var p=I(n)|0;for(let _=0;_<p;_=_+1|0)e.push(_e)},it=t=>{let{value:n}=t;I(n),e.push(et,Ln),Oe(\"dealloc\"),e.push(i,0),Xt(n)},Js=t=>{let{values:n}=t;for(let o of n)I(o);e.push(Jp)},Qs=()=>{e.push(sl)},qn=t=>{e.push(Ht)},d=t=>{e.push(12,0)},A=t=>{e.push(Qp)},V=t=>{t.stop?(e.push(qo),e.push(pt)):(e.push(qo),e.push(Xe))},Se=t=>{let{branch:n,commonKeys:o,condition:p}=t,{values:_}=n,{values:b}=p;var R=o.length|0;for(let x=0;x<R;x=x+1|0){let ee=o[x],ie=_[x],je=b[x];J(ee,ie,je)}let{statements:j}=n;var U=j.length-1|0;for(let x=U;x>=0;x=x-1|0){let ee=j[x];W(ee)}},se=t=>{let{condition:n}=t;I(n);let o=Ie(n);if(o?.mutable){let p=N(o.name,o.path),_=s.get(p),{load:b}=_.link;e.push(b.opcode,b.align,b.offset)}e.push(i,0),e.push(gs),e.push(ns,1),e.push(ss,0)},Ae=t=>{let{collection:n,iterator:o,index:p}=t;I(n),e.push(_e),me=!0;let _=Ce.get(p);p?e.push(tt,_):e.push(F,g),e.push(gs),e.push(ns,1),e.push(_e);let b=Object.freeze({type:ws,array:n,index:{type:Je,name:p}}),R=Object.freeze({type:Je,name:o}),j=Object.freeze({type:Ro,target:R,source:b});W(j)},te=t=>{let{index:n}=t,o=Ce.get(n);n?e.push(tt,o):e.push(F,g),e.push(i,1),e.push(H),n?e.push(Ct,o):e.push(le,g),e.push(ss,0)},rt=t=>{let{statement:n}=t;switch(n.type){case\"assign\":{we(n);break}case Ls:{Is(n);break}case Gp:{$s(n);break}case bs:{Ge(n);break}case kp:{rs(n);break}case Lp:{vt(n);break}case Vp:{De(n);break}case Yp:{qs(n);break}case Do:{As(n);break}case wp:{it(n);break}case Ys:{Js(n);break}case Xp:{Qs();break}default:throw new Error(`can not handle statement type ${n.type}`)}};for(;w.length>0;){let t=w.shift();switch(t.type){case zt:{qn(t);break}case wo:{d(t);break}case jn:{A(t);break}case Ls:{V(t);break}case Yo:{Se(t);break}case Vo:{rt(t);break}case Cn:{se(t);break}case Bo:{Ae(t);break}case Ko:{te(t);break}case Ho:{e.push(jt,Xe);break}case Zo:{t.function();break}default:break}}return{totalOctets:e,nativeImports:pe,loads:me}}var{ENUM_MEMORY_SIZE:gl,ENUM_STACK_SIZE:sc,ARRAY_MEMORY_SIZE:yl,ARRAY_STACK_SIZE:wn,STRING_MEMORY_SIZE:xl,STRING_STACK_SIZE:Vn,OBJECT_MEMORY_SIZE:Xu,OBJECT_STACK_SIZE:nc,NATIVE_MEMORY_SIZE:Wu,NATIVE_STACK_SIZE:oc,NATIVE_SIZE:qu,STEP:$u,DOUBLE_STEP:Il,TRIPPLE_STEP:Ju}=Rt.Sizes,{HEX_ENCODE:vn,LEB128_ENCODE:Nt}=Jt,{TYPES_ASSIGN:Mn,TYPES_ARRAY:wt,TYPES_DATA:Bs,TYPES_GENERICS:Al,TYPES_ENUMERATION:Zt,TYPES_EXPRESSION:Nl,TYPES_LINK:Ks,TYPES_LOCAL:os,TYPES_OBJECT:Ft,TYPES_PROCEDURE:Bn,TYPES_RETURN:cc,TYPES_SELECT:Rl,TYPES_ARRAY_ACCESS:ac,TYPES_ARRAY_ASSIGNMENT:rc,TYPES_MEMBER:ic,TYPES_STORE:Kn,TYPES_LITERAL:pc,TYPES_LINK_TO:Gs,TYPES_VALUE_AT:Hs,TYPES_SELF:lc,TYPES_NATIVE:cs,TYPES_STRING:as,TYPES_CONDITION:Sl,TYPES_BRANCH_MATCH:uc,TYPES_WHILE:Pl,TYPES_WHEN:zl,TYPES_FOR:jl,TYPES_FOREACH:Cl,TYPES_SIZE:fc,TYPES_DROP:Fl,TYPES_CONCAT:Dl,TYPES_UNREACHABLE:Ul}=Ns,Gn=\"\",We=(c,s)=>`${s}.${c}`,kl=c=>[\">\",\"<\",\">=\",\"<=\",\"!=\",\"==\"].includes(c),Ll=c=>[\"FP64\",\"I64\",\"U64\",\"FP32\",\"I32\",\"U32\",\"I16\",\"U16\",\"I8\",\"U8\",\"Bool\"].includes(c),Hn=48,Yl=Object.freeze([0,127]),wl=Object.freeze({}),Vl=Object.freeze([127]),hc=0;var vl=2;var Ml=10,Bl=7,Kl=3,Gl=2,Hl=1,Zl=6,Ot=96,gt=127,Zn=Object.freeze([7,105,109,112,111,114,116,115]),Xl=Object.freeze([6,109,101,109,111,114,121]),Wl=0;var ql=65,bt=new Uint8Array(8),$l=Object.freeze([0,97,115,109]),Jl=Object.freeze([1,0,0,0]),Ql=(c,s)=>{s=s??wl;let r={},{data:h,code:D}=c,ce=D.filter(y=>!y.description.generics||y.description.generics.length===0),e=new Map,pe=new Map,me=y=>{let u=0;for(let P of y){let{data:Y}=P;switch(Y.type){case\"Maybe\":case Bs:{let{name:J,path:w}=Y,W=We(J,w),ye=e.get(W);if(!ye)console.error(\"No shape found for key:\",W);else switch(ye.type){case cs:if(J===as){u=u+Vn|0;break}case Zt:{u=u+sc|0;break}case Ft:{u=u+nc|0;break}}break}case Ks:{let J=e.get(We(Y.name,Y.path));Y.name===as?u=u+Vn|0:Y.name===wt?u=u+wn|0:J.type===Ft?u=u+nc|0:u=u+oc|0;break}case wt:{u=u+wn|0;break}}}return u},Oe=(y,u)=>{let{labels:P}=u,Y=new Map,J=[];var w=P.length|0;for(let he=0;he<w;he=he+1|0){let{name:xe,props:Ee}=P[he];if(Ee.length>0){let we={type:Ft,name:xe,path:y,description:{members:Ee,generics:[]}};h.push(we),J.push({name:xe,props:Ee.map(Ge=>Ge.name)})}Y.set(xe,he)}return Object.freeze({type:Zt,encode:he=>{let xe=Y.get(he);return typeof xe>\"u\"?Vl:Nt(xe)},evaluate:he=>Y.get(he),opcode:ql,labels:J,link:Object.freeze({load:Object.freeze({opcode:40,align:2,offset:0,size:4}),store:Object.freeze({opcode:54,align:2,offset:0,size:4})})})},$=y=>{let u=[],P=[],Y=0,J=()=>{let d=Object.freeze({type:\"back\"});u.unshift(d)},w=d=>{let A={type:Bs,data:d};u.unshift(A)},W=d=>{let A={type:\"name\",name:d};u.unshift(A)},ye=(d,A)=>{A&&(J(),w(A),W(d))},ze=d=>h.find(A=>A.name===d),he=(d,A)=>A.find(V=>V.name===d),xe=(d,{inputs:A})=>A.find(V=>V.name===d),Ee=(d,A)=>{let V=d;for(let Se of A){let se=he(Se,V.description.members),Ae=ze(se.data.name);if(Ae&&Ae.type===Ft)V=Ae;else return se}return null},we=(d,A)=>{let V=d.trail,Se=he(V[0],A.members);if(!Se)return null;if(V.length===1)return Se.data;let se=ze(Se.data.name);return Ee(se,V.slice(1)).data},Ge=(d,A,V,Se)=>{if(xe(A,V.description))return;V.description.self.push(d);let se=Object.seal({name:A,data:{...we({trail:d.trail||d.value?.trail||d.link?.trail||[]},Se)}});d.type!==Gs&&(se.data.type=Ks),V.description.inputs.push(se)},rs=(d,A,V)=>{let Se=d.inputs.map(Ae=>De(Ae,A,V)),se=typeof d.name==\"object\"&&d.name[0]===ic?d.name.slice(1).join(\"_\"):d.name;return{...d,name:se,inputs:Se}},vt=(d,A,V)=>{if(!(d.value.link===lc||d.value.value===lc))return d;let Se=`${d.type}_${d.trail.join(\"_\")}`;if(Ge(d,Se,A,V),d.value.value)return{type:Gs,value:Se};if(d.value.link)return{type:Hs,link:Se}},De=(d,A,V,Se=\"\")=>{switch(d.type){case os:case pc:return d;case ic:{let se=`${d.type}_${d.trail.join(\"_\")}`;return Ge(d,se,A,V),Se===\"target\"?{type:Kn,link:{type:os,name:se}}:{type:Hs,link:{type:os,name:se}}}case Gs:{if(d.value.type===pc)return d.value;{let se=`${d.value.type}_${d.value.trail.join(\"_\")}`;return Ge(d,se,A,V),{type:Gs,value:{type:os,name:se}}}}case Hs:{let se=`${d.link.type}_${d.link.trail.join(\"_\")}`;return Ge(d,se,A,V),{type:Hs,link:{type:os,name:se}}}case Kn:{let se=`${d.link.type}_${d.link.trail.join(\"_\")}`;return Ge(d,se,A,V),{type:Kn,link:{type:os,name:se}}}case Rl:return vt(d,A,V);case Nl:return rs(d,A,V);case ac:{let se=De(d.array,A,V),Ae=De(d.index,A,V);return Object.freeze({type:ac,index:Ae,array:se})}case rc:{let se=De(d.array,A,V),Ae=De(d.index,A,V);return Object.freeze({type:rc,index:Ae,array:se})}case fc:{let se=De(d.value,A,V);return Object.freeze({type:fc,value:se})}case Dl:{let se=d.values.map(Ae=>De(Ae,A,V));return Object.freeze({...d,values:se})}default:throw Error(`Unhandled type(checkObjectValues): ${d.type}`)}},qs=(d,A)=>{let V=JSON.parse(JSON.stringify(d));V.description.self=[];let Se=Ae=>{Ae.type===Mn?(Ae.target=De(Ae.target,V,A,\"target\"),Ae.source=De(Ae.source,V,A)):Ae.type===cc&&(Ae.values=Ae.values.map(te=>De(te,V,A)))},se=Ae=>{Ae.forEach(te=>{if(te.type===Mn||te.type===cc)Se(te);else if(te.type===Sl)te.branches.forEach(rt=>{se(rt.statements),rt.type===uc&&(rt.values=rt.values.map(t=>De(t,V,A)))});else if(te.type===Pl)te.condition=De(te.condition,V,A),se(te.statements);else if(te.type===zl)te.value=De(te.value,V,A),te.matches.forEach(rt=>{rt.type===uc&&(rt.value=De(rt.value,V,A)),se(rt.statements)});else if(te.type===jl)te.limit=De(te.limit,V,A),te.variable=De(te.variable,V,A),te.initializer.type===Mn&&(te.initializer.target=De(te.initializer.target,V,A),te.initializer.source=De(te.initializer.source,V,A)),te.step=De(te.step,V,A),se(te.statements);else if(te.type===Cl)te.collection=De(te.collection,V,A),se(te.statements);else if(te.type===Fl)te.expression=De(te.expression,V,A);else if(te.type!==Ul)throw new Error(\"unhandled statement type: \",te.type)})};se(V.description.statements),ce.push(V)},{members:is}=y,Wt=new Map;for(let d of is){let{name:A,data:V,value:Se}=d;Wt.set(A,V),Se&&Wt.set(A,{...V,value:Se})}var $s=is.length-1|0;for(let d=$s;d>=0;d=d-1|0){let A=is[d],{name:V,data:Se}=A;if(A.type&&A.type===Bn){qs(A,y);continue}ye(V,Se)}let Is=new Map,As=new Map,it=0;for(;u.length>0;){let d=u.shift();switch(d.type){case\"back\":{P.pop();break}case Bs:{let{data:A}=d,V=()=>{let rt=P.join(\".\"),t=We(A.name,A.path),n=e.get(t),{link:o}=n,p=Object.freeze({data:A,index:it,address:Y,trail:rt}),_=e.get(We(A.name,A.path));A.name===as?Y+=xl:A.type===wt||A.layout===wt?Y+=yl:_.type===Zt?Y+=gl:Y+=o?.load.size||Il,Is.set(rt,p),As.set(it,p),A.name===as?it=it+Vn|0:A.type===wt||A.layout===wt?it=it+wn|0:_.type===Zt?it=it+sc|0:it=it+oc|0};if(A.type===Ks){V();break}let{name:Se,path:se}=A,Ae=We(Se,se),te=e.get(Ae);if(!te)throw new Error(\"Shape not found: \",Ae);switch(te.type){case cs:{V();break}case Zt:{V();break}case Ft:{V();break}}break}case\"name\":{let{name:A}=d;P.push(A);break}}}let Js=it|0,Qs=Object.freeze({mapTrail:Is,mapIndex:As});return{type:Ft,length:Js,members:Wt,indivisibles:Qs}},Re={};for(let y of h){let{path:u}=y;switch(y.type){case cs:{let{name:P,path:Y}=y,J=We(P,Y);if(Object.hasOwn(kt,J)){let w=kt[J];e.set(J,w);continue}break}case\"import\":{if(Object.hasOwn(kt,u)){let P=kt[u];e.set(u,P);continue}break}case Al:{let{name:P,path:Y}=y,J=We(P,Y),w=kt[\"Flogram.FP32\"];e.set(J,w);break}case Zt:{let{name:P,path:Y,description:J}=y,w=We(P,Y),W=Oe(w,J);e.set(w,W);break}case Ft:{let{name:P,path:Y,description:J}=y,{generics:w}=J,W=We(P,Y);if(!w||w.length===0){let ye=$(J);e.set(W,ye)}break}}}r.structures=Re;let lt=0,ut=(y,u)=>{let P=pe.get(y);if(typeof P>\"u\"){pe.set(y,[u]);return}(P.length==0||P.length>0&&P[0].body!==u.body)&&pe.set(y,[u,...P])},Ye=y=>{let{name:u,path:P}=y,Y=We(u,P);switch(P===\"Flogram\"&&(Ll(u)?Y=We(y.description.inputs[0]?.data?.name?.toLowerCase()+\".\"+ct(u),P):y.description.outputs&&y.description.outputs.length>=1&&!kl(y.name)?y.description.outputs[0]?.data?.name&&(Y=We(y.description.outputs[0]?.data?.name?.toLowerCase()+\".\"+ct(u,y.description.inputs?.length),P)):(fs.includes(y.description.inputs[1]?.data?.name)&&(Y=We(y.description.inputs[1]?.data?.name+\".\"+ct(u),P),Gn=y.description.inputs[1]?.data?.name),Gn&&(Y=We(Gn.toLowerCase()+\".\"+ct(u),P)))),y.type){case cs:{if(Object.hasOwn(Os,Y)){let J=Os[Y];ut(Y,J);return}break}case Bn:{let{description:J}=y,{inputs:w,outputs:W}=J,ye=We(u,P),ze={type:\"artificial\",index:\"artificial\"+lt,procedure:y,lengths:Object.freeze({inputs:me(w),outputs:me(W)})};ut(ye,ze);break}}lt=lt+1|0},nt=[],dt=[];for(let y of ce){if(y.description.generics?.length>0)continue;let{description:u}=y,{inputs:P,outputs:Y}=u,J=[...P,...Y];if(!(y.type===cs&&J.some(w=>!fs.includes(w.data.name))))switch(Ye(y),y.type){case\"import\":{let{path:w}=y;if(Object.hasOwn(Os,w))continue;nt.push(y);break}case Bn:{dt.push(y);break}}}let ft=y=>{let u=0,P=[];for(let Y of y){let J=()=>{P.push(gt),u=u+1|0,P.push(gt),u=u+1|0,P.push(gt),u=u+1|0},w=we=>{let{identity:Ge}=we;P.push(Ge),u=u+1|0},W=()=>{P.push(gt),u=u+1|0},ye=()=>{P.push(gt),u=u+1|0,P.push(gt),u=u+1|0,P.push(gt),u=u+1|0},ze=()=>{P.push(gt),u=u+1|0,P.push(gt),u=u+1|0},he=()=>{P.push(gt),u=u+1|0,P.push(gt),u=u+1|0},{name:xe,data:Ee}=Y;switch(Ee.type){case\"\":case Bs:{let{name:we,path:Ge}=Ee,rs=We(we,Ge),vt=e.get(rs);if(!vt)w(kt[\"Flogram.FP32\"]);else switch(vt.type){case cs:{we===as?he():w(vt);break}case Zt:{J();break}case Ft:{ze();break}}break}case Ks:{let we=e.get(We(Ee.name,Ee.path));Ee.name===wt?ye():Ee.name===as?he():we.type===Ft?ze():W();break}case wt:{ye();break}}}return[u,P]},yt=(y,u)=>{let P=u.length|0,Y=Nt(P);u.unshift(y,...Y)},Zs=y=>{let u=[],P=[...nt,...dt],Y=new Map([[\"alloc\",[Ot,1,127,1,127]],[\"dealloc\",[Ot,1,127,0]],[\"merge\",[Ot,0,0]],[\"save\",[Ot,2,127,127,0]],[\"undo\",[Ot,0,2,127,127]],[\"undoPenultimate\",[Ot,0,2,127,127]],[\"draw\",[Ot,1,127,0]],[\"drawI64\",[Ot,1,126,0]],[\"drawFP32\",[Ot,1,125,0]],[\"drawFP64\",[Ot,1,124,0]],[\"now\",[Ot,0,1,126]]]);for(let W of y)if(Y.has(W))u.push(...Y.get(W));else throw new Error(\"Procedure not found:\",W);for(let W of P){let{description:ye}=W,{inputs:ze,outputs:he}=ye,[xe,Ee]=ft(ze),[we,Ge]=ft(he);u.push(Ot,xe,...Ee,we,...Ge)}let J=P.length|0,w=Nt(J+y.size);return u.unshift(...w),yt(Hl,u),u},Xs=y=>{let u=[];return y&&y.size>0&&(u.push(2),u.push(127,1),u.push(65,0,11),u.push(127,1),u.push(65,0,11),yt(Zl,u)),u},Vt=0,xs=(y,u)=>{let P=[],Y=0,J={};if(s.memory){let ye=xe=>{let Ee=[...xe].map(we=>we.charCodeAt(0));return[Ee.length,...Ee]},ze=[];(u||y.size>0)&&(J.memory={path:\"memory\",description:{inputs:[],outputs:[]}});for(let xe of y)ze.push(ye(xe)),J[xe]={path:xe,description:{inputs:[],outputs:[]}};let he=Array.from(y);for(let xe of y)bt.fill(Hn),vn(Y,bt),P.push(...Zn,...ze[he.indexOf(xe)],hc,he.indexOf(xe)),Y=Y+1|0}for(let ye of nt){bt.fill(Hn),vn(Y,bt);let ze=String.fromCodePoint(...bt);J[ze]={path:ye.path,description:ye.description};let he=Y|0;P.push(...Zn,bt.length|0,...bt,hc,he),Y=Y+1|0}Vt=Y|0,(u||y.size>0)&&(P.push(...Zn,...Xl,vl,...Yl),Y=Y+1|0);let w=Y|0,W=Nt(w);return P.unshift(...W),yt(Gl,P),r.imports=J,P},Ce=()=>{let y=[];var u=dt.length|0;for(let J=0;J<u;J=J+1|0){let w=J|0,W=Vt+w|0,ye=Nt(W);y.push(...ye)}let P=dt.length|0,Y=Nt(P);return y.unshift(...Y),yt(Kl,y),y},Fe=()=>{let y=[],u=0,P={};var Y=dt.length|0;for(let W=0;W<Y;W=W+1|0){let ye=W+Vt|0,ze=Nt(ye);bt.fill(Hn),vn(u,bt);let{name:he,path:xe,description:Ee}=dt[W];Ee={inputs:Ee.inputs,outputs:Ee.outputs};let we=String.fromCodePoint(...bt);P[we]={name:he,path:xe,description:Ee},y.push(bt.length|0,...bt,Wl,...ze),u=u+1|0}let J=u|0,w=Nt(J);return y.unshift(...w),yt(Bl,y),r.procedures=P,y},Dt=()=>{let y=[],u=new Set,P=!1;for(let W of dt){let{totalOctets:ye,nativeImports:ze,loads:he}=Ms(W,e,pe,ce,s);u=new Set([...u,...ze]),he&&!P&&(P=he);let xe=ye.length|0,Ee=Nt(xe);y.push(...Ee,...ye)}let Y=dt.length|0,J=Nt(Y);return y.unshift(...J),yt(Ml,y),y=((W,ye,ze)=>{let he=Array.from(ze),xe=\"artificial\";return W.map(Ee=>{if(typeof Ee==\"string\"){if(Ee.startsWith(xe)){let we=Ee.slice(xe.length),Ge=parseInt(we,10);if(!isNaN(Ge))return Ge+ye}if(he.includes(Ee))return he.indexOf(Ee)}return Ee})})(y,u.size,u),{totalOctets:y,allImports:u,loads:P}},{totalOctets:ge,allImports:Ke,loads:Xn}=Dt(),Ws=Zs(Ke),qe=xs(Ke,Xn),Ie=Ce(),Wn=Xs(Ke),I=Fe(),Xt=new Uint8Array([...$l,...Jl,...Ws,...qe,...Ie,...Wn,...I,...ge]);return[r,Xt]},eu=Object.freeze({compile:Ql}),Qu=eu;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@munezero/floparser/Compilers/SimplerWASM/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@munezero/floparser/SimpleParser/index.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@munezero/floparser/SimpleParser/index.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Rm)\n/* harmony export */ });\nvar cf=Object.create;var Oa=Object.defineProperty;var uf=Object.getOwnPropertyDescriptor;var lf=Object.getOwnPropertyNames;var ff=Object.getPrototypeOf,Ef=Object.prototype.hasOwnProperty;var hn=(k,S)=>()=>(S||k((S={exports:{}}).exports,S),S.exports);var _f=(k,S,D,W)=>{if(S&&typeof S==\"object\"||typeof S==\"function\")for(let X of lf(S))!Ef.call(k,X)&&X!==D&&Oa(k,X,{get:()=>S[X],enumerable:!(W=uf(S,X))||W.enumerable});return k};var Ta=(k,S,D)=>(D=k!=null?cf(ff(k)):{},_f(S||!k||!k.__esModule?Oa(D,\"default\",{value:k,enumerable:!0}):D,k));var Ia=hn((Aa,da)=>{(function(k){var S=Object.hasOwnProperty,D=Array.isArray?Array.isArray:function(A){return Object.prototype.toString.call(A)===\"[object Array]\"},W=10,X=typeof process==\"object\"&&typeof process.nextTick==\"function\",ae=typeof Symbol==\"function\",Ee=typeof Reflect==\"object\",be=typeof setImmediate==\"function\",ve=be?setImmediate:setTimeout,he=ae?Ee&&typeof Reflect.ownKeys==\"function\"?Reflect.ownKeys:function(p){var A=Object.getOwnPropertyNames(p);return A.push.apply(A,Object.getOwnPropertySymbols(p)),A}:Object.keys;function Oe(){this._events={},this._conf&&Le.call(this,this._conf)}function Le(p){p&&(this._conf=p,p.delimiter&&(this.delimiter=p.delimiter),p.maxListeners!==k&&(this._maxListeners=p.maxListeners),p.wildcard&&(this.wildcard=p.wildcard),p.newListener&&(this._newListener=p.newListener),p.removeListener&&(this._removeListener=p.removeListener),p.verboseMemoryLeak&&(this.verboseMemoryLeak=p.verboseMemoryLeak),p.ignoreErrors&&(this.ignoreErrors=p.ignoreErrors),this.wildcard&&(this.listenerTree={}))}function Re(p,A){var P=\"(node) warning: possible EventEmitter memory leak detected. \"+p+\" listeners added. Use emitter.setMaxListeners() to increase limit.\";if(this.verboseMemoryLeak&&(P+=\" Event name: \"+A+\".\"),typeof process<\"u\"&&process.emitWarning){var L=new Error(P);L.name=\"MaxListenersExceededWarning\",L.emitter=this,L.count=p,process.emitWarning(L)}else console.error(P),console.trace&&console.trace()}var Ze=function(p,A,P){var L=arguments.length;switch(L){case 0:return[];case 1:return[p];case 2:return[p,A];case 3:return[p,A,P];default:for(var v=new Array(L);L--;)v[L]=arguments[L];return v}};function Rt(p,A){for(var P={},L,v=p.length,C=A?A.length:0,g=0;g<v;g++)L=p[g],P[L]=g<C?A[g]:k;return P}function ye(p,A,P){this._emitter=p,this._target=A,this._listeners={},this._listenersCount=0;var L,v;if((P.on||P.off)&&(L=P.on,v=P.off),A.addEventListener?(L=A.addEventListener,v=A.removeEventListener):A.addListener?(L=A.addListener,v=A.removeListener):A.on&&(L=A.on,v=A.off),!L&&!v)throw Error(\"target does not implement any known event API\");if(typeof L!=\"function\")throw TypeError(\"on method must be a function\");if(typeof v!=\"function\")throw TypeError(\"off method must be a function\");this._on=L,this._off=v;var C=p._observers;C?C.push(this):p._observers=[this]}Object.assign(ye.prototype,{subscribe:function(p,A,P){var L=this,v=this._target,C=this._emitter,g=this._listeners,K=function(){var G=Ze.apply(null,arguments),_={data:G,name:A,original:p};if(P){var J=P.call(v,_);J!==!1&&C.emit.apply(C,[_.name].concat(G));return}C.emit.apply(C,[A].concat(G))};if(g[p])throw Error(\"Event '\"+p+\"' is already listening\");this._listenersCount++,C._newListener&&C._removeListener&&!L._onNewListener?(this._onNewListener=function(G){G===A&&g[p]===null&&(g[p]=K,L._on.call(v,p,K))},C.on(\"newListener\",this._onNewListener),this._onRemoveListener=function(G){G===A&&!C.hasListeners(G)&&g[p]&&(g[p]=null,L._off.call(v,p,K))},g[p]=null,C.on(\"removeListener\",this._onRemoveListener)):(g[p]=K,L._on.call(v,p,K))},unsubscribe:function(p){var A=this,P=this._listeners,L=this._emitter,v,C,g=this._off,K=this._target,G;if(p&&typeof p!=\"string\")throw TypeError(\"event must be a string\");function _(){A._onNewListener&&(L.off(\"newListener\",A._onNewListener),L.off(\"removeListener\",A._onRemoveListener),A._onNewListener=null,A._onRemoveListener=null);var J=V.call(L,A);L._observers.splice(J,1)}if(p){if(v=P[p],!v)return;g.call(K,p,v),delete P[p],--this._listenersCount||_()}else{for(C=he(P),G=C.length;G-- >0;)p=C[G],g.call(K,p,P[p]);this._listeners={},this._listenersCount=0,_()}}});function Nt(p,A,P,L){var v=Object.assign({},A);if(!p)return v;if(typeof p!=\"object\")throw TypeError(\"options must be an object\");var C=Object.keys(p),g=C.length,K,G,_;function J(Pe){throw Error('Invalid \"'+K+'\" option value'+(Pe?\". Reason: \"+Pe:\"\"))}for(var de=0;de<g;de++){if(K=C[de],!L&&!S.call(A,K))throw Error('Unknown \"'+K+'\" option');G=p[K],G!==k&&(_=P[K],v[K]=_?_(G,J):G)}return v}function ut(p,A){return(typeof p!=\"function\"||!p.hasOwnProperty(\"prototype\"))&&A(\"value must be a constructor\"),p}function kt(p){var A=\"value must be type of \"+p.join(\"|\"),P=p.length,L=p[0],v=p[1];return P===1?function(C,g){if(typeof C===L)return C;g(A)}:P===2?function(C,g){var K=typeof C;if(K===L||K===v)return C;g(A)}:function(C,g){for(var K=typeof C,G=P;G-- >0;)if(K===p[G])return C;g(A)}}var ue=kt([\"function\"]),jt=kt([\"object\",\"function\"]);function Ve(p,A,P){var L,v,C=0,g,K=new p(function(G,_,J){P=Nt(P,{timeout:0,overload:!1},{timeout:function(De,U){return De*=1,(typeof De!=\"number\"||De<0||!Number.isFinite(De))&&U(\"timeout must be a positive number\"),De}}),L=!P.overload&&typeof p.prototype.cancel==\"function\"&&typeof J==\"function\";function de(){v&&(v=null),C&&(clearTimeout(C),C=0)}var Pe=function(De){de(),G(De)},ke=function(De){de(),_(De)};L?A(Pe,ke,J):(v=[function(De){ke(De||Error(\"canceled\"))}],A(Pe,ke,function(De){if(g)throw Error(\"Unable to subscribe on cancel event asynchronously\");if(typeof De!=\"function\")throw TypeError(\"onCancel callback must be a function\");v.push(De)}),g=!0),P.timeout>0&&(C=setTimeout(function(){var De=Error(\"timeout\");De.code=\"ETIMEDOUT\",C=0,K.cancel(De),_(De)},P.timeout))});return L||(K.cancel=function(G){if(v){for(var _=v.length,J=1;J<_;J++)v[J](G);v[0](G),v=null}}),K}function V(p){var A=this._observers;if(!A)return-1;for(var P=A.length,L=0;L<P;L++)if(A[L]._target===p)return L;return-1}function B(p,A,P,L,v){if(!P)return null;if(L===0){var C=typeof A;if(C===\"string\"){var g,K,G=0,_=0,J=this.delimiter,de=J.length;if((K=A.indexOf(J))!==-1){g=new Array(5);do g[G++]=A.slice(_,K),_=K+de;while((K=A.indexOf(J,_))!==-1);g[G++]=A.slice(_),A=g,v=G}else A=[A],v=1}else C===\"object\"?v=A.length:(A=[A],v=1)}var Pe=null,ke,De,U,u,a,Yt=A[L],Wt=A[L+1],Ke,T;if(L===v)P._listeners&&(typeof P._listeners==\"function\"?(p&&p.push(P._listeners),Pe=[P]):(p&&p.push.apply(p,P._listeners),Pe=[P]));else if(Yt===\"*\"){for(Ke=he(P),K=Ke.length;K-- >0;)ke=Ke[K],ke!==\"_listeners\"&&(T=B(p,A,P[ke],L+1,v),T&&(Pe?Pe.push.apply(Pe,T):Pe=T));return Pe}else if(Yt===\"**\"){for(a=L+1===v||L+2===v&&Wt===\"*\",a&&P._listeners&&(Pe=B(p,A,P,v,v)),Ke=he(P),K=Ke.length;K-- >0;)ke=Ke[K],ke!==\"_listeners\"&&(ke===\"*\"||ke===\"**\"?(P[ke]._listeners&&!a&&(T=B(p,A,P[ke],v,v),T&&(Pe?Pe.push.apply(Pe,T):Pe=T)),T=B(p,A,P[ke],L,v)):ke===Wt?T=B(p,A,P[ke],L+2,v):T=B(p,A,P[ke],L,v),T&&(Pe?Pe.push.apply(Pe,T):Pe=T));return Pe}else P[Yt]&&(Pe=B(p,A,P[Yt],L+1,v));if(De=P[\"*\"],De&&B(p,A,De,L+1,v),U=P[\"**\"],U)if(L<v)for(U._listeners&&B(p,A,U,v,v),Ke=he(U),K=Ke.length;K-- >0;)ke=Ke[K],ke!==\"_listeners\"&&(ke===Wt?B(p,A,U[ke],L+2,v):ke===Yt?B(p,A,U[ke],L+1,v):(u={},u[ke]=U[ke],B(p,A,{\"**\":u},L+1,v)));else U._listeners?B(p,A,U,v,v):U[\"*\"]&&U[\"*\"]._listeners&&B(p,A,U[\"*\"],v,v);return Pe}function M(p,A,P){var L=0,v=0,C,g=this.delimiter,K=g.length,G;if(typeof p==\"string\")if((C=p.indexOf(g))!==-1){G=new Array(5);do G[L++]=p.slice(v,C),v=C+K;while((C=p.indexOf(g,v))!==-1);G[L++]=p.slice(v)}else G=[p],L=1;else G=p,L=p.length;if(L>1){for(C=0;C+1<L;C++)if(G[C]===\"**\"&&G[C+1]===\"**\")return}var _=this.listenerTree,J;for(C=0;C<L;C++)if(J=G[C],_=_[J]||(_[J]={}),C===L-1)return _._listeners?(typeof _._listeners==\"function\"&&(_._listeners=[_._listeners]),P?_._listeners.unshift(A):_._listeners.push(A),!_._listeners.warned&&this._maxListeners>0&&_._listeners.length>this._maxListeners&&(_._listeners.warned=!0,Re.call(this,_._listeners.length,J))):_._listeners=A,!0;return!0}function z(p,A,P,L){for(var v=he(p),C=v.length,g,K,G,_=p._listeners,J;C-- >0;)K=v[C],g=p[K],K===\"_listeners\"?G=P:G=P?P.concat(K):[K],J=L||typeof K==\"symbol\",_&&A.push(J?G:G.join(this.delimiter)),typeof g==\"object\"&&z.call(this,g,A,G,J);return A}function q(p){for(var A=he(p),P=A.length,L,v,C;P-- >0;)v=A[P],L=p[v],L&&(C=!0,v!==\"_listeners\"&&!q(L)&&delete p[v]);return C}function Te(p,A,P){this.emitter=p,this.event=A,this.listener=P}Te.prototype.off=function(){return this.emitter.off(this.event,this.listener),this};function _e(p,A,P){if(P===!0)v=!0;else if(P===!1)L=!0;else{if(!P||typeof P!=\"object\")throw TypeError(\"options should be an object or true\");var L=P.async,v=P.promisify,C=P.nextTick,g=P.objectify}if(L||C||v){var K=A,G=A._origin||A;if(C&&!X)throw Error(\"process.nextTick is not supported\");v===k&&(v=A.constructor.name===\"AsyncFunction\"),A=function(){var _=arguments,J=this,de=this.event;return v?C?Promise.resolve():new Promise(function(Pe){ve(Pe)}).then(function(){return J.event=de,K.apply(J,_)}):(C?process.nextTick:ve)(function(){J.event=de,K.apply(J,_)})},A._async=!0,A._origin=G}return[A,g?new Te(this,p,A):this]}function ne(p){this._events={},this._newListener=!1,this._removeListener=!1,this.verboseMemoryLeak=!1,Le.call(this,p)}ne.EventEmitter2=ne,ne.prototype.listenTo=function(p,A,P){if(typeof p!=\"object\")throw TypeError(\"target musts be an object\");var L=this;P=Nt(P,{on:k,off:k,reducers:k},{on:ue,off:ue,reducers:jt});function v(C){if(typeof C!=\"object\")throw TypeError(\"events must be an object\");var g=P.reducers,K=V.call(L,p),G;K===-1?G=new ye(L,p,P):G=L._observers[K];for(var _=he(C),J=_.length,de,Pe=typeof g==\"function\",ke=0;ke<J;ke++)de=_[ke],G.subscribe(de,C[de]||de,Pe?g:g&&g[de])}return D(A)?v(Rt(A)):v(typeof A==\"string\"?Rt(A.split(/\\s+/)):A),this},ne.prototype.stopListeningTo=function(p,A){var P=this._observers;if(!P)return!1;var L=P.length,v,C=!1;if(p&&typeof p!=\"object\")throw TypeError(\"target should be an object\");for(;L-- >0;)v=P[L],(!p||v._target===p)&&(v.unsubscribe(A),C=!0);return C},ne.prototype.delimiter=\".\",ne.prototype.setMaxListeners=function(p){p!==k&&(this._maxListeners=p,this._conf||(this._conf={}),this._conf.maxListeners=p)},ne.prototype.getMaxListeners=function(){return this._maxListeners},ne.prototype.event=\"\",ne.prototype.once=function(p,A,P){return this._once(p,A,!1,P)},ne.prototype.prependOnceListener=function(p,A,P){return this._once(p,A,!0,P)},ne.prototype._once=function(p,A,P,L){return this._many(p,1,A,P,L)},ne.prototype.many=function(p,A,P,L){return this._many(p,A,P,!1,L)},ne.prototype.prependMany=function(p,A,P,L){return this._many(p,A,P,!0,L)},ne.prototype._many=function(p,A,P,L,v){var C=this;if(typeof P!=\"function\")throw new Error(\"many only accepts instances of Function\");function g(){return--A===0&&C.off(p,g),P.apply(this,arguments)}return g._origin=P,this._on(p,g,L,v)},ne.prototype.emit=function(){if(!this._events&&!this._all)return!1;this._events||Oe.call(this);var p=arguments[0],A,P=this.wildcard,L,v,C,g,K;if(p===\"newListener\"&&!this._newListener&&!this._events.newListener)return!1;if(P&&(A=p,p!==\"newListener\"&&p!==\"removeListener\"&&typeof p==\"object\")){if(v=p.length,ae){for(C=0;C<v;C++)if(typeof p[C]==\"symbol\"){K=!0;break}}K||(p=p.join(this.delimiter))}var G=arguments.length,_;if(this._all&&this._all.length)for(_=this._all.slice(),C=0,v=_.length;C<v;C++)switch(this.event=p,G){case 1:_[C].call(this,p);break;case 2:_[C].call(this,p,arguments[1]);break;case 3:_[C].call(this,p,arguments[1],arguments[2]);break;default:_[C].apply(this,arguments)}if(P)_=[],B.call(this,_,A,this.listenerTree,0,v);else if(_=this._events[p],typeof _==\"function\"){switch(this.event=p,G){case 1:_.call(this);break;case 2:_.call(this,arguments[1]);break;case 3:_.call(this,arguments[1],arguments[2]);break;default:for(L=new Array(G-1),g=1;g<G;g++)L[g-1]=arguments[g];_.apply(this,L)}return!0}else _&&(_=_.slice());if(_&&_.length){if(G>3)for(L=new Array(G-1),g=1;g<G;g++)L[g-1]=arguments[g];for(C=0,v=_.length;C<v;C++)switch(this.event=p,G){case 1:_[C].call(this);break;case 2:_[C].call(this,arguments[1]);break;case 3:_[C].call(this,arguments[1],arguments[2]);break;default:_[C].apply(this,L)}return!0}else if(!this.ignoreErrors&&!this._all&&p===\"error\")throw arguments[1]instanceof Error?arguments[1]:new Error(\"Uncaught, unspecified 'error' event.\");return!!this._all},ne.prototype.emitAsync=function(){if(!this._events&&!this._all)return!1;this._events||Oe.call(this);var p=arguments[0],A=this.wildcard,P,L,v,C,g,K;if(p===\"newListener\"&&!this._newListener&&!this._events.newListener)return Promise.resolve([!1]);if(A&&(P=p,p!==\"newListener\"&&p!==\"removeListener\"&&typeof p==\"object\")){if(C=p.length,ae){for(g=0;g<C;g++)if(typeof p[g]==\"symbol\"){L=!0;break}}L||(p=p.join(this.delimiter))}var G=[],_=arguments.length,J;if(this._all)for(g=0,C=this._all.length;g<C;g++)switch(this.event=p,_){case 1:G.push(this._all[g].call(this,p));break;case 2:G.push(this._all[g].call(this,p,arguments[1]));break;case 3:G.push(this._all[g].call(this,p,arguments[1],arguments[2]));break;default:G.push(this._all[g].apply(this,arguments))}if(A?(J=[],B.call(this,J,P,this.listenerTree,0)):J=this._events[p],typeof J==\"function\")switch(this.event=p,_){case 1:G.push(J.call(this));break;case 2:G.push(J.call(this,arguments[1]));break;case 3:G.push(J.call(this,arguments[1],arguments[2]));break;default:for(v=new Array(_-1),K=1;K<_;K++)v[K-1]=arguments[K];G.push(J.apply(this,v))}else if(J&&J.length){if(J=J.slice(),_>3)for(v=new Array(_-1),K=1;K<_;K++)v[K-1]=arguments[K];for(g=0,C=J.length;g<C;g++)switch(this.event=p,_){case 1:G.push(J[g].call(this));break;case 2:G.push(J[g].call(this,arguments[1]));break;case 3:G.push(J[g].call(this,arguments[1],arguments[2]));break;default:G.push(J[g].apply(this,v))}}else if(!this.ignoreErrors&&!this._all&&p===\"error\")return arguments[1]instanceof Error?Promise.reject(arguments[1]):Promise.reject(\"Uncaught, unspecified 'error' event.\");return Promise.all(G)},ne.prototype.on=function(p,A,P){return this._on(p,A,!1,P)},ne.prototype.prependListener=function(p,A,P){return this._on(p,A,!0,P)},ne.prototype.onAny=function(p){return this._onAny(p,!1)},ne.prototype.prependAny=function(p){return this._onAny(p,!0)},ne.prototype.addListener=ne.prototype.on,ne.prototype._onAny=function(p,A){if(typeof p!=\"function\")throw new Error(\"onAny only accepts instances of Function\");return this._all||(this._all=[]),A?this._all.unshift(p):this._all.push(p),this},ne.prototype._on=function(p,A,P,L){if(typeof p==\"function\")return this._onAny(p,A),this;if(typeof A!=\"function\")throw new Error(\"on only accepts instances of Function\");this._events||Oe.call(this);var v=this,C;return L!==k&&(C=_e.call(this,p,A,L),A=C[0],v=C[1]),this._newListener&&this.emit(\"newListener\",p,A),this.wildcard?(M.call(this,p,A,P),v):(this._events[p]?(typeof this._events[p]==\"function\"&&(this._events[p]=[this._events[p]]),P?this._events[p].unshift(A):this._events[p].push(A),!this._events[p].warned&&this._maxListeners>0&&this._events[p].length>this._maxListeners&&(this._events[p].warned=!0,Re.call(this,this._events[p].length,p))):this._events[p]=A,v)},ne.prototype.off=function(p,A){if(typeof A!=\"function\")throw new Error(\"removeListener only takes instances of Function\");var P,L=[];if(this.wildcard){var v=typeof p==\"string\"?p.split(this.delimiter):p.slice();if(L=B.call(this,null,v,this.listenerTree,0),!L)return this}else{if(!this._events[p])return this;P=this._events[p],L.push({_listeners:P})}for(var C=0;C<L.length;C++){var g=L[C];if(P=g._listeners,D(P)){for(var K=-1,G=0,_=P.length;G<_;G++)if(P[G]===A||P[G].listener&&P[G].listener===A||P[G]._origin&&P[G]._origin===A){K=G;break}if(K<0)continue;return this.wildcard?g._listeners.splice(K,1):this._events[p].splice(K,1),P.length===0&&(this.wildcard?delete g._listeners:delete this._events[p]),this._removeListener&&this.emit(\"removeListener\",p,A),this}else(P===A||P.listener&&P.listener===A||P._origin&&P._origin===A)&&(this.wildcard?delete g._listeners:delete this._events[p],this._removeListener&&this.emit(\"removeListener\",p,A))}return this.listenerTree&&q(this.listenerTree),this},ne.prototype.offAny=function(p){var A=0,P=0,L;if(p&&this._all&&this._all.length>0){for(L=this._all,A=0,P=L.length;A<P;A++)if(p===L[A])return L.splice(A,1),this._removeListener&&this.emit(\"removeListenerAny\",p),this}else{if(L=this._all,this._removeListener)for(A=0,P=L.length;A<P;A++)this.emit(\"removeListenerAny\",L[A]);this._all=[]}return this},ne.prototype.removeListener=ne.prototype.off,ne.prototype.removeAllListeners=function(p){if(p===k)return!this._events||Oe.call(this),this;if(this.wildcard){var A=B.call(this,null,p,this.listenerTree,0),P,L;if(!A)return this;for(L=0;L<A.length;L++)P=A[L],P._listeners=null;this.listenerTree&&q(this.listenerTree)}else this._events&&(this._events[p]=null);return this},ne.prototype.listeners=function(p){var A=this._events,P,L,v,C,g;if(p===k){if(this.wildcard)throw Error(\"event name required for wildcard emitter\");if(!A)return[];for(P=he(A),C=P.length,v=[];C-- >0;)L=A[P[C]],typeof L==\"function\"?v.push(L):v.push.apply(v,L);return v}else{if(this.wildcard){if(g=this.listenerTree,!g)return[];var K=[],G=typeof p==\"string\"?p.split(this.delimiter):p.slice();return B.call(this,K,G,g,0),K}return A?(L=A[p],L?typeof L==\"function\"?[L]:L:[]):[]}},ne.prototype.eventNames=function(p){var A=this._events;return this.wildcard?z.call(this,this.listenerTree,[],null,p):A?he(A):[]},ne.prototype.listenerCount=function(p){return this.listeners(p).length},ne.prototype.hasListeners=function(p){if(this.wildcard){var A=[],P=typeof p==\"string\"?p.split(this.delimiter):p.slice();return B.call(this,A,P,this.listenerTree,0),A.length>0}var L=this._events,v=this._all;return!!(v&&v.length||L&&(p===k?he(L).length:L[p]))},ne.prototype.listenersAny=function(){return this._all?this._all:[]},ne.prototype.waitFor=function(p,A){var P=this,L=typeof A;return L===\"number\"?A={timeout:A}:L===\"function\"&&(A={filter:A}),A=Nt(A,{timeout:0,filter:k,handleError:!1,Promise,overload:!1},{filter:ue,Promise:ut}),Ve(A.Promise,function(v,C,g){function K(){var G=A.filter;if(!(G&&!G.apply(P,arguments)))if(P.off(p,K),A.handleError){var _=arguments[0];_?C(_):v(Ze.apply(null,arguments).slice(1))}else v(Ze.apply(null,arguments))}g(function(){P.off(p,K)}),P._on(p,K,!1)},{timeout:A.timeout,overload:A.overload})};function Ge(p,A,P){P=Nt(P,{Promise,timeout:0,overload:!1},{Promise:ut});var L=P.Promise;return Ve(L,function(v,C,g){var K;if(typeof p.addEventListener==\"function\"){K=function(){v(Ze.apply(null,arguments))},g(function(){p.removeEventListener(A,K)}),p.addEventListener(A,K,{once:!0});return}var G=function(){_&&p.removeListener(\"error\",_),v(Ze.apply(null,arguments))},_;A!==\"error\"&&(_=function(J){p.removeListener(A,G),C(J)},p.once(\"error\",_)),g(function(){_&&p.removeListener(\"error\",_),p.removeListener(A,G)}),p.once(A,G)},{timeout:P.timeout,overload:P.overload})}var bt=ne.prototype;if(Object.defineProperties(ne,{defaultMaxListeners:{get:function(){return bt._maxListeners},set:function(p){if(typeof p!=\"number\"||p<0||Number.isNaN(p))throw TypeError(\"n must be a non-negative number\");bt._maxListeners=p},enumerable:!0},once:{value:Ge,writable:!0,configurable:!0}}),Object.defineProperties(bt,{_maxListeners:{value:W,writable:!0,configurable:!0},_observers:{value:null,writable:!0,configurable:!0}}),typeof define==\"function\"&&define.amd)define(function(){return ne});else if(typeof Aa==\"object\")da.exports=ne;else{var _t=new Function(\"\",\"return this\")();_t.EventEmitter2=ne}})()});var Sa=hn((qp,Na)=>{Na.exports=Ia()});var Pa=hn((Pn,ha)=>{(function(k,S){var D=S(k);if(typeof define==\"function\"&&define.amd)define(\"DeepDiff\",function(){return D});else if(typeof Pn==\"object\"||typeof navigator==\"object\"&&navigator.product.match(/ReactNative/i))ha.exports=D;else{var W=k.DeepDiff;D.noConflict=function(){return k.DeepDiff===D&&(k.DeepDiff=W),D},k.DeepDiff=D}})(Pn,function(k){var S=[\"N\",\"E\",\"A\",\"D\"];function D(V,B){V.super_=B,V.prototype=Object.create(B.prototype,{constructor:{value:V,enumerable:!1,writable:!0,configurable:!0}})}function W(V,B){Object.defineProperty(this,\"kind\",{value:V,enumerable:!0}),B&&B.length&&Object.defineProperty(this,\"path\",{value:B,enumerable:!0})}function X(V,B,M){X.super_.call(this,\"E\",V),Object.defineProperty(this,\"lhs\",{value:B,enumerable:!0}),Object.defineProperty(this,\"rhs\",{value:M,enumerable:!0})}D(X,W);function ae(V,B){ae.super_.call(this,\"N\",V),Object.defineProperty(this,\"rhs\",{value:B,enumerable:!0})}D(ae,W);function Ee(V,B){Ee.super_.call(this,\"D\",V),Object.defineProperty(this,\"lhs\",{value:B,enumerable:!0})}D(Ee,W);function be(V,B,M){be.super_.call(this,\"A\",V),Object.defineProperty(this,\"index\",{value:B,enumerable:!0}),Object.defineProperty(this,\"item\",{value:M,enumerable:!0})}D(be,W);function ve(V,B,M){var z=V.slice((M||B)+1||V.length);return V.length=B<0?V.length+B:B,V.push.apply(V,z),V}function he(V){var B=typeof V;return B!==\"object\"?B:V===Math?\"math\":V===null?\"null\":Array.isArray(V)?\"array\":Object.prototype.toString.call(V)===\"[object Date]\"?\"date\":typeof V.toString==\"function\"&&/^\\/.*\\//.test(V.toString())?\"regexp\":\"object\"}function Oe(V){var B=0;if(V.length===0)return B;for(var M=0;M<V.length;M++){var z=V.charCodeAt(M);B=(B<<5)-B+z,B=B&B}return B}function Le(V){var B=0,M=he(V);if(M===\"array\"){V.forEach(function(ne){B+=Le(ne)});var z=\"[type: array, hash: \"+B+\"]\";return B+Oe(z)}if(M===\"object\"){for(var q in V)if(V.hasOwnProperty(q)){var Te=\"[ type: object, key: \"+q+\", value hash: \"+Le(V[q])+\"]\";B+=Oe(Te)}return B}var _e=\"[ type: \"+M+\" ; value: \"+V+\"]\";return B+Oe(_e)}function Re(V,B,M,z,q,Te,_e,ne){M=M||[],q=q||[],_e=_e||[];var Ge=q.slice(0);if(typeof Te<\"u\"&&Te!==null){if(z){if(typeof z==\"function\"&&z(Ge,Te))return;if(typeof z==\"object\"){if(z.prefilter&&z.prefilter(Ge,Te))return;if(z.normalize){var bt=z.normalize(Ge,Te,V,B);bt&&(V=bt[0],B=bt[1])}}}Ge.push(Te)}he(V)===\"regexp\"&&he(B)===\"regexp\"&&(V=V.toString(),B=B.toString());var _t=typeof V,p=typeof B,A,P,L,v,C=_t!==\"undefined\"||_e&&_e.length>0&&_e[_e.length-1].lhs&&Object.getOwnPropertyDescriptor(_e[_e.length-1].lhs,Te),g=p!==\"undefined\"||_e&&_e.length>0&&_e[_e.length-1].rhs&&Object.getOwnPropertyDescriptor(_e[_e.length-1].rhs,Te);if(!C&&g)M.push(new ae(Ge,B));else if(!g&&C)M.push(new Ee(Ge,V));else if(he(V)!==he(B))M.push(new X(Ge,V,B));else if(he(V)===\"date\"&&V-B!==0)M.push(new X(Ge,V,B));else if(_t===\"object\"&&V!==null&&B!==null){for(A=_e.length-1;A>-1;--A)if(_e[A].lhs===V){v=!0;break}if(v)V!==B&&M.push(new X(Ge,V,B));else{if(_e.push({lhs:V,rhs:B}),Array.isArray(V)){for(ne&&(V.sort(function(_,J){return Le(_)-Le(J)}),B.sort(function(_,J){return Le(_)-Le(J)})),A=B.length-1,P=V.length-1;A>P;)M.push(new be(Ge,A,new ae(void 0,B[A--])));for(;P>A;)M.push(new be(Ge,P,new Ee(void 0,V[P--])));for(;A>=0;--A)Re(V[A],B[A],M,z,Ge,A,_e,ne)}else{var K=Object.keys(V),G=Object.keys(B);for(A=0;A<K.length;++A)L=K[A],v=G.indexOf(L),v>=0?(Re(V[L],B[L],M,z,Ge,L,_e,ne),G[v]=null):Re(V[L],void 0,M,z,Ge,L,_e,ne);for(A=0;A<G.length;++A)L=G[A],L&&Re(void 0,B[L],M,z,Ge,L,_e,ne)}_e.length=_e.length-1}}else V!==B&&(_t===\"number\"&&isNaN(V)&&isNaN(B)||M.push(new X(Ge,V,B)))}function Ze(V,B,M,z,q){var Te=[];if(Re(V,B,Te,z,null,null,null,q),M)for(var _e=0;_e<Te.length;++_e)M(Te[_e]);return Te}function Rt(V,B,M,z,q,Te,_e){return Re(V,B,M,z,q,Te,_e,!0)}function ye(V,B,M,z){var q=z?function(_e){_e&&z.push(_e)}:void 0,Te=Ze(V,B,q,M);return z||(Te.length?Te:void 0)}function Nt(V,B,M,z){var q=z?function(_e){_e&&z.push(_e)}:void 0,Te=Ze(V,B,q,M,!0);return z||(Te.length?Te:void 0)}function ut(V,B,M){if(M.path&&M.path.length){var z=V[B],q,Te=M.path.length-1;for(q=0;q<Te;q++)z=z[M.path[q]];switch(M.kind){case\"A\":ut(z[M.path[q]],M.index,M.item);break;case\"D\":delete z[M.path[q]];break;case\"E\":case\"N\":z[M.path[q]]=M.rhs;break}}else switch(M.kind){case\"A\":ut(V[B],M.index,M.item);break;case\"D\":V=ve(V,B);break;case\"E\":case\"N\":V[B]=M.rhs;break}return V}function kt(V,B,M){if(typeof M>\"u\"&&B&&~S.indexOf(B.kind)&&(M=B),V&&M&&M.kind){for(var z=V,q=-1,Te=M.path?M.path.length-1:0;++q<Te;)typeof z[M.path[q]]>\"u\"&&(z[M.path[q]]=typeof M.path[q+1]<\"u\"&&typeof M.path[q+1]==\"number\"?[]:{}),z=z[M.path[q]];switch(M.kind){case\"A\":M.path&&typeof z[M.path[q]]>\"u\"&&(z[M.path[q]]=[]),ut(M.path?z[M.path[q]]:z,M.index,M.item);break;case\"D\":delete z[M.path[q]];break;case\"E\":case\"N\":z[M.path[q]]=M.rhs;break}}}function ue(V,B,M){if(M.path&&M.path.length){var z=V[B],q,Te=M.path.length-1;for(q=0;q<Te;q++)z=z[M.path[q]];switch(M.kind){case\"A\":ue(z[M.path[q]],M.index,M.item);break;case\"D\":z[M.path[q]]=M.lhs;break;case\"E\":z[M.path[q]]=M.lhs;break;case\"N\":delete z[M.path[q]];break}}else switch(M.kind){case\"A\":ue(V[B],M.index,M.item);break;case\"D\":V[B]=M.lhs;break;case\"E\":V[B]=M.lhs;break;case\"N\":V=ve(V,B);break}return V}function jt(V,B,M){if(V&&B&&M&&M.kind){var z=V,q,Te;for(Te=M.path.length-1,q=0;q<Te;q++)typeof z[M.path[q]]>\"u\"&&(z[M.path[q]]={}),z=z[M.path[q]];switch(M.kind){case\"A\":ue(z[M.path[q]],M.index,M.item);break;case\"D\":z[M.path[q]]=M.lhs;break;case\"E\":z[M.path[q]]=M.lhs;break;case\"N\":delete z[M.path[q]];break}}}function Ve(V,B,M){if(V&&B){var z=function(q){(!M||M(V,B,q))&&kt(V,B,q)};Ze(V,B,z)}}return Object.defineProperties(ye,{diff:{value:ye,enumerable:!0},orderIndependentDiff:{value:Nt,enumerable:!0},observableDiff:{value:Ze,enumerable:!0},orderIndependentObservableDiff:{value:Rt,enumerable:!0},orderIndepHash:{value:Le,enumerable:!0},applyDiff:{value:Ve,enumerable:!0},applyChange:{value:kt,enumerable:!0},revertChange:{value:jt,enumerable:!0},isConflict:{value:function(){return typeof $conflict<\"u\"},enumerable:!0}}),ye.DeepDiff=ye,k&&(k.DeepDiff=ye),ye})});var fl=Ta(Sa(),1),El=Ta(Pa(),1);var pf=\"as\",mf=\"=\",bf=\"break\",Of=\"else\",Tf=\"enum\",Af=\"export\",df=\"if\",If=\"import\",Nf=\"->\",Sf=\"is\",hf=\"loop\",Pf=\"mut\",Lf=\"native\",Rf=\"object\",kf=\"fn\",Cf=\"return\",vf=\"self\",yf=\"template\",Uf=Object.freeze({ALIAS:pf,ASSIGN:mf,BREAK:bf,ELSE:Of,ENUMERATION:Tf,EXPORT:Af,IF:df,IMPORT:If,INTO:Nf,IS:Sf,LOOP:hf,MUTABLE:Pf,NATIVE:Lf,OBJECT:Rf,PROCEDURE:kf,RETURN:Cf,SELF:vf,TEMPLATE:yf}),La=Uf;var Bf=\"assign\",Df=\"arity_match\",Mf=\"arity_status\",Ff=\"array_assignment\",jf=\"branch-match\",Yf=\"branch-default\",wf=\"condition\",gf=\"loop\",Vf=\"data\",Gf=\"generics\",$f=\"enumeration\",Kf=\"expression\",Hf=\"instance\",zf=\"Link\",Xf=\"local\",Wf=\"object\",Jf=\"procedure\",Zf=\"return\",qf=\"compare\",Qf=\"select\",xf=\"member\",eE=\"store\",tE=\"break\",sE=\"literal\",nE=\"array_access\",oE=\"valueLink\",aE=\"linkValue\",rE=\"self\",cE=\"procedure-call\",uE=\"Maybe\",iE=\"native\",lE=\"move\",fE=\"String\",EE=\"Array\",_E=\"import\",pE=\"library\",mE=\"constructor\",bE=\"destructor\",OE=\"free\",TE=\"block-end\",AE=\"default-block\",dE=\"continue\",IE=\"branch\",NE=\"statement\",SE=\"draw\",hE=\"now\",PE=\"size\",LE=\"concatenation\",RE=\"foreach\",kE=\"while\",CE=\"when\",vE=\"while-condition\",yE=\"foreach-condition\",UE=\"foreach-end\",BE=\"for\",DE=\"up_to\",ME=\"down_to\",FE=\"almost_up_to\",jE=\"almost_down_to\",YE=\"I32\",wE=\"U32\",gE=\"FP32\",VE=\"I16\",GE=\"U16\",$E=\"U8\",KE=\"I8\",HE=\"FP64\",zE=\"U64\",XE=\"I64\",WE=\"Char\",JE=\"block-start\",ZE=\"function-call\",qE=\"Bool\",QE=Object.freeze({TYPES_ASSIGN:Bf,TYPES_ARRAY:EE,TYPES_ARITY_MATCH:Df,TYPES_ARITY_STATUS:Mf,TYPES_ARRAY_ASSIGNMENT:Ff,TYPES_BRANCH_MATCH:jf,TYPES_BRANCH_DEFAULT:Yf,TYPES_CONDITION:wf,TYPES_LOOP:gf,TYPES_FOREACH_END:UE,TYPES_WHILE_CONDITION:vE,TYPES_FOREACH_CONDITION:yE,TYPES_DATA:Vf,TYPES_COMPARE:qf,TYPES_GENERICS:Gf,TYPES_ENUMERATION:$f,TYPES_EXPRESSION:Kf,TYPES_INSTANCE:Hf,TYPES_LINK:zf,TYPES_IMPORT:_E,TYPES_LOCAL:Xf,TYPES_OBJECT:Wf,TYPES_PROCEDURE:Jf,TYPES_RETURN:Zf,TYPES_SELECT:Qf,TYPES_MEMBER:xf,TYPES_STORE:eE,TYPES_BREAK:tE,TYPES_LITERAL:sE,TYPES_ARRAY_ACCESS:nE,TYPES_LINK_TO:oE,TYPES_VALUE_AT:aE,TYPES_SELF:rE,TYPES_LIBRARY:pE,TYPES_DROP:cE,TYPES_MAYBE:uE,TYPES_NATIVE:iE,TYPES_MOVE:lE,TYPES_STRING:fE,TYPES_CONSTRUCTOR:mE,TYPES_FREE:OE,TYPES_DEFAULT_BLOCK:AE,TYPES_BLOCK_END:TE,TYPES_CONTINUE:dE,TYPES_BRANCH:IE,TYPES_STATEMENT:NE,TYPES_DESTRUCTOR:bE,TYPES_DRAW:SE,TYPES_NOW:hE,TYPES_SIZE:PE,TYPES_CONCAT:LE,TYPES_FOREACH:RE,TYPES_WHILE:kE,TYPES_WHEN:CE,TYPES_FOR:BE,TYPES_UP_TO:DE,TYPES_DOWN_TO:ME,TYPES_ALMOST_UP_TO:FE,TYPES_ALMOST_DOWN_TO:jE,TYPES_I32:YE,TYPES_FP32:gE,TYPES_FP64:HE,TYPES_U32:wE,TYPES_I64:XE,TYPES_U64:zE,TYPES_I16:VE,TYPES_U16:GE,TYPES_I8:KE,TYPES_U8:$E,TYPES_CHAR:WE,TYPES_BOOL:qE,TYPES_BLOCK_BEGIN:JE,TYPES_FUNCTION_CALL:ZE}),Ln=QE;var xE=Object.freeze({COLON:58,COMMA:44,DIGIT_ZERO:48,DIGIT_NINE:57,DOT:46,HASHTAG:35,HORIZONTAL_TAB:9,HYPHEN_MINUS:45,LEFT_CURLY_BRACKET:123,LEFT_PARENTHESIS:40,LEFT_SQUARE_BRACKET:91,LINE_BREAK:10,NULL:0,PLUS_SIGN:43,RIGHT_CURLY_BRACKET:125,RIGHT_PARENTHESIS:41,RIGHT_SQUARE_BRACKET:93,SEMICOLON:59,SPACE:32,E_SIGN:101}),Ra=xE;var e_=\"assignment\",t_=\"Flogram\",s_=Object.freeze({K_ASSIGNMENT:e_,K_FLOGRAM:t_}),ka=s_;var n_=Object.freeze([[43],[45],[42],[47],[37],[110,111,116],[60],[62],[94],[111,114],[33],[61,61],[60,61],[62,61],[33,61],[120,111,114],[97,110,100]]),o_=n_,Ca=o_;var a_=Object.freeze({INT_ARRAY_START:9999991,FLOAT_ARRAY_START:9999981,STRING_START:8888891,CHAR_START:8888881,NAT_ON_HORIZON:7777791,BIG_NAT_ON_HORIZON:7777591,FLOAT_ON_HORIZON:7777771,BIG_FLOAT_ON_HORIZON:7777731,END_OF_LINE:66666661}),va=a_;var r_=Object.freeze({ENUM_MEMORY_SIZE:12,ENUM_STACK_SIZE:3,ARRAY_MEMORY_SIZE:12,ARRAY_STACK_SIZE:3,ARRAY_DEFAULT_CAPACITY:4,STRING_MEMORY_SIZE:8,STRING_STACK_SIZE:2,OBJECT_MEMORY_SIZE:8,OBJECT_STACK_SIZE:2,NATIVE_MEMORY_SIZE:4,NATIVE_STACK_SIZE:1,NATIVE_SIZE:4,STEP:4,DOUBLE_STEP:8,TRIPPLE_STEP:12}),ya=r_;var c_=Object.freeze([]),u_=Object.freeze({}),it=\"\",i_=\"\t\",l_=`\n`,f_=\"UTF-8\",Ua=Ln,E_=Object.freeze({EMPTY_ARRAY:c_,EMPTY_OBJECT:u_,EMPTY_STRING:it,HORIZONTAL_TAB:i_,LINE_BREAK:l_,UNICODE_TEXT:f_,Codes:Ra,Keys:La,Types:Ln,Keywords:ka,Operators:Ca,DrawStates:va,Sizes:ya}),qt=E_;function I(k,S=[],D=\"\"){let W=S.map((ae,Ee)=>({name:`operand${Ee+1}`,data:{type:\"data\",name:ae,path:\"Flogram\"}})),X={type:\"native\",name:k,path:\"Flogram\",description:{inputs:W,outputs:D&&S.length<=0?null:[{name:\"result\",data:{type:\"data\",name:D||(S.length>0?S[0]:\"\"),path:\"Flogram\"}}]}};return Object.freeze(X)}var __=Object.freeze({\"+\":[I(\"+\",[\"FP64\",\"FP64\"]),I(\"+\",[\"U64\",\"U64\"]),I(\"+\",[\"I64\",\"I64\"]),I(\"+\",[\"FP32\",\"FP32\"]),I(\"+\",[\"U32\",\"U32\"]),I(\"+\",[\"I32\",\"I32\"]),I(\"+\",[\"U16\",\"U16\"]),I(\"+\",[\"I16\",\"I16\"]),I(\"+\",[\"U8\",\"U8\"]),I(\"+\",[\"I8\",\"I8\"]),I(\"+\",[\"any\",\"any\"])],\"-\":[I(\"-\",[\"FP64\",\"FP64\"]),I(\"-\",[\"U64\",\"U64\"]),I(\"-\",[\"I64\",\"I64\"]),I(\"-\",[\"FP32\",\"FP32\"]),I(\"-\",[\"U32\",\"U32\"]),I(\"-\",[\"I32\",\"I32\"]),I(\"-\",[\"U16\",\"U16\"]),I(\"-\",[\"I16\",\"I16\"]),I(\"-\",[\"U8\",\"U8\"]),I(\"-\",[\"I8\",\"I8\"]),I(\"-\",[\"any\",\"any\"]),I(\"-\",[\"FP64\"]),I(\"-\",[\"I64\"]),I(\"-\",[\"FP32\"]),I(\"-\",[\"I32\"]),I(\"-\",[\"I16\"]),I(\"-\",[\"I8\"]),I(\"-\",[\"any\"])],\"*\":[I(\"*\",[\"FP64\",\"FP64\"]),I(\"*\",[\"U64\",\"U64\"]),I(\"*\",[\"I64\",\"I64\"]),I(\"*\",[\"FP32\",\"FP32\"]),I(\"*\",[\"U32\",\"U32\"]),I(\"*\",[\"I32\",\"I32\"]),I(\"*\",[\"U16\",\"U16\"]),I(\"*\",[\"I16\",\"I16\"]),I(\"*\",[\"U8\",\"U8\"]),I(\"*\",[\"I8\",\"I8\"]),I(\"*\",[\"any\",\"any\"])],\"/\":[I(\"/\",[\"FP64\",\"FP64\"]),I(\"/\",[\"U64\",\"U64\"]),I(\"/\",[\"I64\",\"I64\"]),I(\"/\",[\"FP32\",\"FP32\"]),I(\"/\",[\"U32\",\"U32\"]),I(\"/\",[\"I32\",\"I32\"]),I(\"/\",[\"U16\",\"U16\"]),I(\"/\",[\"I16\",\"I16\"]),I(\"/\",[\"U8\",\"U8\"]),I(\"/\",[\"I8\",\"I8\"]),I(\"/\",[\"any\",\"any\"])],\"%\":[I(\"%\",[\"I64\",\"I64\"]),I(\"%\",[\"U64\",\"U64\"]),I(\"%\",[\"I32\",\"I32\"]),I(\"%\",[\"U32\",\"U32\"]),I(\"%\",[\"I16\",\"I16\"]),I(\"%\",[\"U16\",\"U16\"]),I(\"%\",[\"I8\",\"I8\"]),I(\"%\",[\"U8\",\"U8\"]),I(\"%\",[\"any\",\"any\"])],\"!=\":[I(\"!=\",[\"FP64\",\"FP64\"],\"Bool\"),I(\"!=\",[\"U64\",\"U64\"],\"Bool\"),I(\"!=\",[\"I64\",\"I64\"],\"Bool\"),I(\"!=\",[\"FP32\",\"FP32\"],\"Bool\"),I(\"!=\",[\"U32\",\"U32\"],\"Bool\"),I(\"!=\",[\"I32\",\"I32\"],\"Bool\"),I(\"!=\",[\"U16\",\"U16\"],\"Bool\"),I(\"!=\",[\"I16\",\"I16\"],\"Bool\"),I(\"!=\",[\"U8\",\"U8\"],\"Bool\"),I(\"!=\",[\"I8\",\"I8\"],\"Bool\"),I(\"==\",[\"Char\",\"Char\"],\"Bool\"),I(\"!=\",[\"Bool\",\"Bool\"],\"Bool\"),I(\"!=\",[\"any\",\"any\"],\"any\")],\"==\":[I(\"==\",[\"FP64\",\"FP64\"],\"Bool\"),I(\"==\",[\"U64\",\"U64\"],\"Bool\"),I(\"==\",[\"I64\",\"I64\"],\"Bool\"),I(\"==\",[\"FP32\",\"FP32\"],\"Bool\"),I(\"==\",[\"U32\",\"U32\"],\"Bool\"),I(\"==\",[\"I32\",\"I32\"],\"Bool\"),I(\"==\",[\"U16\",\"U16\"],\"Bool\"),I(\"==\",[\"I16\",\"I16\"],\"Bool\"),I(\"==\",[\"U8\",\"U8\"],\"Bool\"),I(\"==\",[\"I8\",\"I8\"],\"Bool\"),I(\"==\",[\"Char\",\"Char\"],\"Bool\"),I(\"==\",[\"Bool\",\"Bool\"],\"Bool\"),I(\"==\",[\"any\",\"any\"],\"any\")],\">\":[I(\">\",[\"FP64\",\"FP64\"],\"Bool\"),I(\">\",[\"U64\",\"U64\"],\"Bool\"),I(\">\",[\"I64\",\"I64\"],\"Bool\"),I(\">\",[\"FP32\",\"FP32\"],\"Bool\"),I(\">\",[\"U32\",\"U32\"],\"Bool\"),I(\">\",[\"I32\",\"I32\"],\"Bool\"),I(\">\",[\"U16\",\"U16\"],\"Bool\"),I(\">\",[\"I16\",\"I16\"],\"Bool\"),I(\">\",[\"U8\",\"U8\"],\"Bool\"),I(\">\",[\"I8\",\"I8\"],\"Bool\"),I(\">\",[\"Char\",\"Char\"],\"Bool\"),I(\">\",[\"any\",\"any\"],\"any\")],\"<\":[I(\"<\",[\"FP64\",\"FP64\"],\"Bool\"),I(\"<\",[\"U64\",\"U64\"],\"Bool\"),I(\"<\",[\"I64\",\"I64\"],\"Bool\"),I(\"<\",[\"FP32\",\"FP32\"],\"Bool\"),I(\"<\",[\"U32\",\"U32\"],\"Bool\"),I(\"<\",[\"I32\",\"I32\"],\"Bool\"),I(\"<\",[\"U16\",\"U16\"],\"Bool\"),I(\"<\",[\"I16\",\"I16\"],\"Bool\"),I(\"<\",[\"U8\",\"U8\"],\"Bool\"),I(\"<\",[\"I8\",\"I8\"],\"Bool\"),I(\"<\",[\"Char\",\"Char\"],\"Bool\"),I(\"<\",[\"any\",\"any\"],\"any\")],\">=\":[I(\">=\",[\"FP64\",\"FP64\"],\"Bool\"),I(\">=\",[\"U64\",\"U64\"],\"Bool\"),I(\">=\",[\"I64\",\"I64\"],\"Bool\"),I(\">=\",[\"FP32\",\"FP32\"],\"Bool\"),I(\">=\",[\"U32\",\"U32\"],\"Bool\"),I(\">=\",[\"I32\",\"I32\"],\"Bool\"),I(\">=\",[\"U16\",\"U16\"],\"Bool\"),I(\">=\",[\"I16\",\"I16\"],\"Bool\"),I(\">=\",[\"U8\",\"U8\"],\"Bool\"),I(\">=\",[\"I8\",\"I8\"],\"Bool\"),I(\">=\",[\"Char\",\"Char\"],\"Bool\"),I(\">=\",[\"any\",\"any\"],\"any\")],\"<=\":[I(\"<=\",[\"FP64\",\"FP64\"],\"Bool\"),I(\"<=\",[\"U64\",\"U64\"],\"Bool\"),I(\"<=\",[\"I64\",\"I64\"],\"Bool\"),I(\"<=\",[\"FP32\",\"FP32\"],\"Bool\"),I(\"<=\",[\"U32\",\"U32\"],\"Bool\"),I(\"<=\",[\"I32\",\"I32\"],\"Bool\"),I(\"<=\",[\"U16\",\"U16\"],\"Bool\"),I(\"<=\",[\"I16\",\"I16\"],\"Bool\"),I(\"<=\",[\"U8\",\"U8\"],\"Bool\"),I(\"<=\",[\"I8\",\"I8\"],\"Bool\"),I(\"<=\",[\"Char\",\"Char\"],\"Bool\"),I(\"<=\",[\"any\",\"any\"],\"any\")],and:[I(\"and\",[\"Bool\",\"Bool\"],\"Bool\"),I(\"and\",[\"any\",\"any\"],\"any\")],xor:[I(\"xor\",[\"Bool\",\"Bool\"],\"Bool\"),I(\"xor\",[\"any\",\"any\"],\"any\")],or:[I(\"or\",[\"Bool\",\"Bool\"],\"Bool\"),I(\"or\",[\"any\",\"any\"],\"any\")],not:[I(\"not\",[\"Bool\"],\"Bool\"),I(\"not\",[\"any\"],\"any\")],I32:[I(\"I32\",[\"FP64\"],\"I32\"),I(\"I32\",[\"U64\"],\"I32\"),I(\"I32\",[\"I64\"],\"I32\"),I(\"I32\",[\"FP32\"],\"I32\"),I(\"I32\",[\"U32\"],\"I32\"),I(\"I32\",[\"U16\"],\"I32\"),I(\"I32\",[\"I16\"],\"I32\"),I(\"I32\",[\"U8\"],\"I32\"),I(\"I32\",[\"I8\"],\"I32\"),I(\"I32\",[\"Char\"],\"I32\"),I(\"I32\",[\"any\"],\"any\")],U32:[I(\"U32\",[\"FP64\"],\"U32\"),I(\"U32\",[\"U64\"],\"U32\"),I(\"U32\",[\"I64\"],\"U32\"),I(\"U32\",[\"FP32\"],\"U32\"),I(\"U32\",[\"I32\"],\"U32\"),I(\"U32\",[\"U16\"],\"U32\"),I(\"U32\",[\"I16\"],\"U32\"),I(\"U32\",[\"U8\"],\"U32\"),I(\"U32\",[\"I8\"],\"U32\"),I(\"U32\",[\"Char\"],\"U32\"),I(\"U32\",[\"any\"],\"any\")],I64:[I(\"I64\",[\"FP64\"],\"I64\"),I(\"I64\",[\"U64\"],\"I64\"),I(\"I64\",[\"FP32\"],\"I64\"),I(\"I64\",[\"U32\"],\"I64\"),I(\"I64\",[\"I32\"],\"I64\"),I(\"I64\",[\"U16\"],\"I64\"),I(\"I64\",[\"I16\"],\"I64\"),I(\"I64\",[\"U8\"],\"I64\"),I(\"I64\",[\"I8\"],\"I64\"),I(\"I64\",[\"Char\"],\"I64\"),I(\"I64\",[\"any\"],\"any\")],U64:[I(\"U64\",[\"FP64\"],\"U64\"),I(\"U64\",[\"I64\"],\"U64\"),I(\"U64\",[\"FP32\"],\"U64\"),I(\"U64\",[\"U32\"],\"U64\"),I(\"U64\",[\"I32\"],\"U64\"),I(\"U64\",[\"U16\"],\"U64\"),I(\"U64\",[\"I16\"],\"U64\"),I(\"U64\",[\"U8\"],\"U64\"),I(\"U64\",[\"I8\"],\"U64\"),I(\"U64\",[\"Char\"],\"U64\"),I(\"U64\",[\"any\"],\"any\")],FP32:[I(\"FP32\",[\"FP64\"],\"FP32\"),I(\"FP32\",[\"U64\"],\"FP32\"),I(\"FP32\",[\"I64\"],\"FP32\"),I(\"FP32\",[\"U32\"],\"FP32\"),I(\"FP32\",[\"I32\"],\"FP32\"),I(\"FP32\",[\"U16\"],\"FP32\"),I(\"FP32\",[\"I16\"],\"FP32\"),I(\"FP32\",[\"U8\"],\"FP32\"),I(\"FP32\",[\"I8\"],\"FP32\"),I(\"FP32\",[\"any\"],\"any\")],FP64:[I(\"FP64\",[\"U64\"],\"FP64\"),I(\"FP64\",[\"I64\"],\"FP64\"),I(\"FP64\",[\"FP32\"],\"FP64\"),I(\"FP64\",[\"U32\"],\"FP64\"),I(\"FP64\",[\"I32\"],\"FP64\"),I(\"FP64\",[\"U16\"],\"FP64\"),I(\"FP64\",[\"I16\"],\"FP64\"),I(\"FP64\",[\"U8\"],\"FP64\"),I(\"FP64\",[\"I8\"],\"FP64\"),I(\"FP64\",[\"any\"],\"any\"),I(\"FP64\",[\"any\"],\"any\")]}),Gt=__;var Ba=Object.freeze([\"+\",\"-\",\"*\",\"/\",\"%\",\">\",\">=\",\"<\",\"<=\",\"!=\",\"&\",\"|\",\"^\",\"not\",\"I32\",\"U32\",\"I64\",\"U64\",\"FP64\",\"FP32\"]);var p_=Object.freeze([\"FP64\",\"U64\",\"I64\",\"FP32\",\"U32\",\"I32\",\"U16\",\"I16\",\"U8\",\"I8\",\"Bool\",\"Char\",\"Array\",\"String\",\"Link\",\"Maybe\"]),Qt=[\"U8\",\"U16\",\"U32\"],Es=[...Qt,\"I8\",\"I16\",\"I32\"],m_=[\"I64\",\"U64\"],Rn=[...Es,...m_],b_=[\"FP32\",\"FP64\"],_s=[...Rn,...b_],ht=p_;var{EMPTY_STRING:O_,UNICODE_TEXT:yn}=qt;var T_=48,A_=57,d_=46,Da=45,Ma=43,I_=65,N_=90,S_=\"e\".charCodeAt(0),h_=\"E\".charCodeAt(0),P_=-1,L_=1,Fa=new TextDecoder(yn),R_=new TextEncoder,k_=qt.Operators,C_=(k,S,D=0,W=k.length|0,X=0,ae=S.length|0)=>{for(X=X|0,D=D|0,ae=ae|0,W=W|0;;){let Ee=D>=W,be=X>=ae;if(Ee||be)break;let he=k[D],Oe=S[X];if(D=D+1|0,X=X+1|0,he<Oe)return P_;if(he>Oe)return L_}return 0},Un=(k,S,D=0,W=k.length|0,X=0,ae=S.length|0)=>{for(X=X|0,D=D|0,ae=ae|0,W=W|0;;){let Ee=X>=ae,be=D>=W;if(Ee||be)break;S[X]=k[D],X=X+1|0,D=D+1|0}},Bs=(k,S,D=0,W=k.length|0,X=0,ae=S.length|0)=>{D=D|0,X=X|0,W=W|0,ae=ae|0;let Ee=W-D|0,be=ae-X|0;if(Ee!==be)return!1;for(;;){let ve=D>=W,he=X>=ae;if(ve||he)break;let Le=k[D],Re=S[X];if(D=D+1|0,X=X+1|0,Le!==Re)return!1}return!0},v_=k=>{k=k>>>0;let S=0,D=0;for(;D=(D<<1|1)>>>0,!(D>k);)S=S+1|0;return S},wa=Object.freeze([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]),vn=(k,S,D,W)=>{for(k=k>>>0,W=W??S.length|0,D=D|0,W=W|0;k>0&&W>D;)W=W-1|0,S[W]=wa[k&15],k=k>>>4},Ds=(k,S,D,W)=>{let X=D|0,ae=D+W|0;if(W===0)return!1;let Ee=!1,be=!1,ve=!1,he=Oe=>Oe===Ma||Oe===Da;for(;X<ae;){let Oe=S[X];X=X+1|0;let Le=T_<=Oe&&Oe<=A_,Re=Ma===Oe||Oe===Da,Ze=d_===Oe,Rt=Y_===Oe,ye=Oe===S_||Oe===h_;if(Le){ve=!0;continue}else if(Re){if((X===D+1||Ee&&!be)&&!ve)continue}else if((Rt||Ze)&&!Ee&&!be||ye&&!Ee)ye&&(Ee=!0,X<ae&&he(S[X])&&(X=X+1|0,be=!0));else return!1}return ve&&(!Ee||Ee&&be)},y_={I8:[...Es],U8:[...Qt],I16:[...Es],U16:[...Qt],I32:[...Es],U32:[...Qt],I64:[...Rn],U64:[...Qt],FP32:_s,FP64:_s},Ms=(k,S)=>!_s.includes(k)||!_s.includes(S)?!1:y_[k].includes(S),Bn=k=>{let S=k>=I_,D=k<=N_;return S&&D},Fs=128,js=127,ga=-1,xt=64,Dn=k=>{k=k|0;let S=[];for(;;){let D=k&js;k=k>>7;let W=k===0,X=(D&xt)===0,ae=W&&X,Ee=k===-1,be=(D&xt)!==0;if(ae||Ee&&be){S.push(D);break}D=D|Fs,S.push(D)}return S},U_=k=>{let S=[],D=!0;for(;D;){let W=k&js;k>>=7,k===0&&!(W&xt)||k===-1&&W&xt?D=!1:W|=Fs,S.push(W)}return S},Va=(k,S)=>{S=S|0;let D=0,W=0;for(;;){let X=k[S]|0;S=S+1|0;let ae=(X&js)<<W;if(W=W+7|0,D=D|ae,(X&Fs)===0){let be=(X&xt)!==0,ve=W<32;if(be&&ve){let Oe=ga<<W;D=D|Oe}break}}return D},B_=(k,S)=>{S=S|0;let D=0,W=0;for(;;){let X=k[S]|0;S=S+1|0;let ae=(X&js)<<W;if(W=W+7|0,D=D|ae,!(X&Fs)){if(X&xt){let Ee=ga<<W;D=D|Ee}break}}return D},f=k=>{try{return Fa.decode(k)}catch{return Fa.decode(new Uint8Array([k]))}},fe=k=>R_.encode(k),D_=(k=O_)=>{let S=k.length|0,D=Dn(S),W=Buffer.from(k,yn);return Object.freeze([...D,...W])},M_=(k,S)=>{S=S|0;let D=Va(k,S),W=Dn(D).length;return S=S+W|0,k.subarray(S,S+D|0).toString(yn)},F_=58,j_=46,Y_=95,ps=32,kn=48,w_=67,gt=new Uint8Array(w_),ja=gt.subarray(0,8),Us=gt.subarray(10,49),Ya=gt.subarray(51,68),Cn=16,g_=2;gt[8]=F_;gt[9]=ps;gt[49]=ps;gt[50]=ps;var V_=(k,S)=>{S=S??console.log;let D=32,W=126,X=k.length|0,ae=0;for(;X>0;){ja.fill(kn),vn(ae,ja),Us.fill(ps),Ya.fill(ps);let Ee=X>=Cn?Cn:X;X=X-Cn|0;let be=0,ve=0;for(let Oe=1;Oe<=Ee;Oe=Oe+1|0){let Le=k[ae]&255;Us[be+0|0]=kn,Us[be+1|0]=kn,vn(Le,Us,be,be+2|0);let Re=j_;D<=Le&&Le<=W&&(Re=Le),Ya[ve]=Re,ae=ae+1|0,be=be+2|0,ve=ve+1|0,Oe%g_===0&&(be=be+1|0)}let he=String.fromCodePoint(...gt);S(he)}},G_=function*(k,S){let D=k.length|0,W=S.length|0,X=0;for(;X<D&&X<W;){let ae=k[X],Ee=S[X];yield[ae,Ee],X=X+1|0}},$_=function*(k,S,D){let W=k.length|0,X=S.length|0,ae=D.length|0,Ee=0;for(;Ee<W&&Ee<X&&Ee<ae;){let be=k[Ee],ve=S[Ee],he=D[Ee];yield[be,ve,he],Ee=Ee+1|0}},Mn=k=>{for(let S of k_)if(Bs(k,S))return!0;return!1},dm=Object.freeze({ARRAY_COMPARE:C_,ARRAY_COPY:Un,ARRAY_EQUAL:Bs,BIT_DEPTH:v_,HEX_DIGITS:wa,HEX_ENCODE:vn,IS_NUMBER:Ds,IS_UPPERCASE:Bn,IS_VALID_AUTO_CAST:Ms,LEB128_DECODE:Va,LEB128_DECODE_SIGNED:B_,LEB128_ENCODE:Dn,LEB128_ENCODE_SIGNED:U_,UTF8_DECODE:f,UTF8_ENCODE:fe,WASM_STRING_ENCODE:D_,WASM_STRING_DECODE:M_,XXD_DUMP_HEX:V_,ZIP2:G_,ZIP3:$_,IS_OPERATOR:Mn});var{TYPES_ASSIGN:yt,TYPES_ARITY_MATCH:Fn,TYPES_ARITY_STATUS:Ga,TYPES_ARRAY:Fe,TYPES_ARRAY_ASSIGNMENT:$a,TYPES_BRANCH_MATCH:ms,TYPES_BRANCH_DEFAULT:bs,TYPES_CONDITION:jn,TYPES_LOOP:Ka,TYPES_DATA:Ce,TYPES_GENERICS:Ut,TYPES_ENUMERATION:Bt,TYPES_EXPRESSION:$t,TYPES_IMPORT:K_,TYPES_LIBRARY:H_,TYPES_LINK:Yn,TYPES_LOCAL:xe,TYPES_OBJECT:Me,TYPES_PROCEDURE:lt,TYPES_RETURN:pt,TYPES_SELECT:dt,TYPES_MEMBER:Dt,TYPES_NATIVE:z_,TYPES_STORE:wn,TYPES_BREAK:X_,TYPES_LITERAL:Ie,TYPES_ARRAY_ACCESS:Ys,TYPES_LINK_TO:Mt,TYPES_VALUE_AT:It,TYPES_SELF:ft,TYPES_DROP:Ha,TYPES_MAYBE:ws,TYPES_MOVE:gn,TYPES_STRING:tt,TYPES_CONSTRUCTOR:gs,TYPES_DESTRUCTOR:za,TYPES_SIZE:Vn,TYPES_FREE:W_,TYPES_DRAW:J_,TYPES_NOW:Vs,TYPES_CONCAT:es,TYPES_FOREACH:Xa,TYPES_WHILE:Wa,TYPES_WHEN:Ja,TYPES_FOR:Za,TYPES_UP_TO:na,TYPES_DOWN_TO:oa,TYPES_ALMOST_UP_TO:aa,TYPES_ALMOST_DOWN_TO:ra,TYPES_I32:Je,TYPES_U32:Z_,TYPES_FP32:_l,TYPES_FP64:ca,TYPES_I64:ks,TYPES_U64:q_,TYPES_I16:Q_,TYPES_U16:x_,TYPES_I8:ep,TYPES_U8:tp,TYPES_CHAR:Os,TYPES_BOOL:Kt,TYPES_UNREACHABLE:ts}=Ua,{ARRAY_DEFAULT_CAPACITY:sp}=qt.Sizes,Z=Bs,Gs=fe(\"=\"),np=fe(\"enum\"),op=fe(\"loop\"),ap=fe(\"break\"),rp=fe(\"if\"),$s=fe(\"else\"),Ts=fe(\"is\"),Ks=fe(\"->\"),ss=fe(`\n`),Gn=fe(\"object\"),Ht=fe(\"pass\"),qa=fe(\"fn\"),cp=fe(\"return\"),Qa=fe(\"size\"),xa=fe(\"at\"),er=fe(Fe),zt=fe(\"Link!!\"),ns=fe(\"Link\"),Hs=fe(\"LinkSmart\"),Xt=fe(\"mut\"),tr=fe(\"self\"),sr=fe(\"nocopy\"),up=fe(\"move\"),nr=fe(\"size\"),ip=fe(\"import\"),lp=fe(\"export\"),$n=fe(\"Maybe\"),Kn=fe(\"NONE\"),or=fe(\"SOME\"),ar=fe(\"free\"),fp=fe(\"free!!\"),Ep=fe(\"foreach\"),_p=fe(\"for\"),pp=fe(\"while\"),rr=fe(\"in\"),mp=fe(\"at\"),cr=fe(\"by\"),ur=fe(\"capacity\"),bp=fe(\"when\"),ce=58,et=61,Be=44,st=46,$e=123,pe=40,ee=10,Op=35,ze=125,le=41,He=91,Ft=93,On=39,ls=34,ua=8216,ia=8217,pl=[226,128,156],ml=8221,Tp=64,Hn=47,Ap=92,dp=[On,ls,ua,ia,pl,ml],zn=[On,ua],Xn=[On,ia],Ip=[On,ua,ia],Wn=[ls,pl],Jn=[ls,ml],Zn=1,ir=2,qn=3,is=\"done\",we=\"fail\",Np={EVENT_DONE:is,EVENT_FAIL:we},bl=1,Ol=2,Tl=3,Al=4,dl=5,Il=6,Nl=7,Sl=8,hl=9,Pl=10,Ll=11,Rl=12,Sp=13,hp=14,kl=15,Cl=16,Pp=17,vl=18,yl=19,Ul=99,Xe={FAIL_UNRESOLVED_NAME:(k,S)=>`NameError: '${k}' is undefined on line ${S}. Verify the spelling and scope of your variables to ensure '${k}' is declared in the accessible scope.`,FAIL_UNEXPECTED_TOKEN:(k,S,D,W)=>`Unexpected token '${S}' at position ${D} on line ${W}. Looking for ${k}, found ${S}. Please check the syntax.`,FAIL_INDENTATION_MISMATCH:k=>`IndentationError: Unexpected indentation on line ${k}. Ensure this line's indentation matches the surrounding code block's expected indentation level.`,FAIL_INDENTATION_NO_INCREASE:k=>`IndentationError: Line ${k} expects increased indentation. This typically occurs after block-defining statements (e.g., functions, loops, conditionals) but no indentation was detected. Ensure the subsequent line is properly indented.`,FAIL_DUPLICATE_DATA:(k,S)=>`NameError: Variable '${k}' already defined on line ${S}. Choose a unique name for each variable to avoid conflicts.`,FAIL_DUPLICATE_OBJECT_MEMBER:(k,S)=>`Error: Duplicate member '${k}' found in '${S}'. Ensure each member name within an object is unique.`,FAIL_INVALID_IDENTIFIER:k=>`SyntaxError: '${k}' is an invalid identifier. Identifiers should start with a letter or underscore and can contain letters, numbers, and underscores. Examples: myVariable, _count, item1.`,FAIL_RETURN_LENGTH_MISMATCH:(k,S,D)=>`ReturnValueError: Function '${D}' expected ${k} return value(s), got ${S} instead. Verify that the return statement matches the expected number of values.`,FAIL_UNRESOLVED_OBJECT_MEMBER:(k,S)=>`ReferenceError: '${k}' is not a member of '${S}'. Verify that '${k}' exists and is correctly spelled in '${S}'. Check for typos or ensure the member is defined within the object.`,FAIL_UNKNOWN_PROCEDURE_NAME:k=>`UndefinedProcedureError: '${k}' is undefined. Ensure the procedure is defined in the scope before it is called.`,FAIL_IMMUTABLE_ASSIGNMENT:k=>`ImmutableVariableError: Cannot assign to '${k}', which is immutable. Verify that mutable variables are used for reassignments.`,FAIL_RESERVED_KEYWORD_USAGE:k=>`SyntaxError: '${k}' is a reserved keyword and cannot be used as an identifier. Please select an alternative name.`,FAIL_INPUT_TYPE_MISMATCH:(k,S)=>`TypeError: Line ${k} - Type mismatch in parameters. Nature functions require all parameters to have the same type. Provided types: ${S}.`,FAIL_UNSUPPORTED_TYPE:k=>`TypeError: Unsupported type '${k}'. Ensure '${k}' is defined in this context or use a type native to Flogram. Check documentation for supported types.`,FAIL_UNALLOWED_COPY:k=>`CopyError: '${k}' is uncopyable. Copy operations are prohibited for objects defined as uncopyable. Please check your object's definition.`,FAIL_ASSIGNMENT_TYPE_MISMATCH:(k,S)=>`TypeError: Incompatible types. Cannot assign '${S}' to '${k}'. Ensure that the assigned value matches the expected type.`,FAIL_INVALID_VARIABLE_TYPE:(k,S,D)=>`TypeError: Variable '${k}' is of type '${D}', but expected type '${S}'. Ensure the variable is assigned a value of the correct type.`,FAIL_INVALID_EXPRESSION_TYPE_COMBINATION:(k,S)=>`TypeError: Unable to find expression matching: ${k} for ${S}`,FAIL_INVALID_INPUT_LENGTH:(k,S,D)=>`Procedure '${D}' was provided with invalid number 0f inputs. '${D}' expects ${k} input(s) but was rather provided with ${S} input(s). Please make sure you are passing the right number of inputs to the procedure.`},Lp=Object.freeze({FAIL_UNRESOLVED_NAME:bl,FAIL_UNEXPECTED_TOKEN:Ol,FAIL_INDENTATION_MISMATCH:Tl,FAIL_INDENTATION_NO_INCREASE:Al,FAIL_DUPLICATE_DATA:dl,FAIL_DUPLICATE_OBJECT_MEMBER:Il,FAIL_INVALID_IDENTIFIER:Nl,FAIL_RETURN_LENGTH_MISMATCH:Sl,FAIL_UNRESOLVED_OBJECT_MEMBER:hl,FAIL_UNKNOWN_PROCEDURE_NAME:Pl,FAIL_IMMUTABLE_ASSIGNMENT:Ll,FAIL_RESERVED_KEYWORD_USAGE:Rl,FAIL_ASSIGNMENT_TYPE_MISMATCH:Cl,FAIL_INVALID_VARIABLE_TYPE:Pp,FAIL_UNALLOWED_COPY:kl,FAIL_INVALID_EXPRESSION_TYPE_COMBINATION:vl,FAIL_INVALID_INPUT_LENGTH:yl,FAIL_CUSTOM:Ul}),Rp=new Set([\"fn\",\"object\",\"pass\",\"enum\",\"size\"]),lr=new Set([\"==\",\"!=\",\">\",\">=\",\"<\",\"<=\",\"not\",\"and\",\"or\"]),fr=[na,oa,aa,ra],zs=[Je,Z_,_l,ca,ks,q_,Q_,x_,ep,tp],rt=(k,S,D,W)=>{if(W===1){let ye=S[D],Nt=ye&191,ut=ye&223,kt=ut^93,ue=ut^91,jt=ye&254,V=ye&254^40,M=ye&253^44,q=ye&254^58;return Nt===0||(kt===0||ue===0)||V===0||M===0||q===0||ye===ee}return!1},Qn=(k,S,D,W)=>{let X=S.subarray(D,D+W|0),ae=f(X);return Rp.has(ae)||ht.includes(ae)},kp=512,la=1,Bl=2,Tn=3,fa=4,Dl=5,Ml=6,Fl=7,jl=8,Yl=9,Cp=10,vp=11,yp=12,Up=13,Bp=14,Dp=15,Mp=16,Fp=17,jp=18,nt=Object.freeze([la]),os=Object.freeze([Bl]),Pt=Object.freeze([Tn]),Er=Object.freeze([Tn,fa]),_r=Object.freeze([Dl]),Yp=Object.freeze([la,Ml]),wp=Object.freeze([Fl]),We=Object.freeze([fa,jl]),ot=Object.freeze([Yl]),pr=Object.freeze([Cp]),As=Object.freeze([vp]),gp=Object.freeze([Tn,Yl]),ds=Object.freeze([yp]),as=Object.freeze([Up]),xn=Object.freeze([Bp]),mr=Object.freeze([Dp]),br=Object.freeze([Mp]),eo=Object.freeze([Fp]),Is=Object.freeze([jp]),Vp=Object.freeze({REASON_COLON_OPENS_SCOPE:la,REASON_LINE_BREAK_BEFORE_OPEN_SCOPE:Bl,REASON_CLOSING_LINE_BREAK:Tn,REASON_SEQUENCE_SEPARATOR_COMMA:fa,REASON_INTO_BETWEEN_INPUTS_OUTPUTS:Dl,REASON_IS_OPENS_CONDITION_BRANCH_MATCH:Ml,REASON_OPEN_STATEMENT_WITH_KEYWORD:Fl,REASON_RIGHT_PARENTHESIS_CLOSES_LIST:jl}),Ne=1,Or=2,Ns=3,Tr=4,to=5,Ar=6,Ye=7,mt=8,ge=9,Ss=10,rs=11,dr=12,Ir=13,hs=1,Nr=2,Se=3,so=4,Sr=5,hr=6,Pr=7,Lr=1,Rr=2,kr=3,Cr=4,vr=5,no=6,yr=7,Ur=8,Br=9,oo=10,Dr=11,Mr=12,ao=13,ro=14,Ps=1,Fr=2,Xs=3,jr=4,co=5,Yr=6,wr=7,Ls=1,gr=2,Ws=3,Vr=4,Gr=6,$r=1,Kr=2,Hr=3,zr=4,Xr=5,Wr=6,uo=7,Jr=8,Zr=9,Js=10,qr=11,Qr=12,xr=13,ec=14,tc=15,sc=16,nc=17,oc=1,ac=2,rc=1,cc=2,Gp=3;var uc=7,io=8,ic=9,Zs=1,qs=2,Qs=3,xs=4,cs=5,en=6,tn=7,us=8,sn=9,nn=10,on=11,Lt=1,lc=2,fc=3,lo=4,Ec=5,_c=6,pc=7,fo=8,mc=9,bc=10,Oc=11,Tc=12,Ac=13,Eo=14,_o=15,dc=16,Ic=17,Nc=18,Sc=19,hc=20,Pc=21,po=22,Lc=23,mo=24,bo=25,Rc=26,kc=27,Oo=28,Cc=29,vc=30,Rs=31,an=32,yc=33,To=34,Uc=35,Bc=36,Dc=37,Mc=38,Fc=39,jc=40,Yc=41,Ao=42,wc=43,gc=44,Vc=45,Gc=46,Io=47,$c=48,Kc=49,No=50,So=51,Hc=52,zc=53,Xc=54,Wc=55,Jc=56,Zc=57,qc=58,Qc=59,xc=60,eu=61,tu=62,su=63,nu=64,ho=65,ou=66,au=67,ru=68,Po=69,cu=70,uu=71,iu=72,lu=73,fu=74,Eu=75,_u=76,pu=77,mu=78,Lo=79,bu=80,Ou=81,Tu=82,Au=83,Ro=84,du=85,Iu=86,Nu=87,Su=88,hu=89,Pu=90,Lu=91,Ru=92,ku=93,Cu=94,ko=95,vu=96,Co=97,yu=98,Uu=99,Bu=100,ct=1,Du=2,Mu=3,Fu=4,vo=5,ju=6,rn=1,Yu=2,wu=3,gu=4,yo=5,Et=6,Vu=7,Uo=8,cn=9,un=10,ln=11,Gu=12,$u=13,Bo=14,Do=15,Mo=16,Ku=17,Hu=18,zu=19,Fo=20,jo=21,Xu=22,Yo=23,Wu=24,Ju=25,Zu=26,wo=27,qu=28,Qu=29,go=30,Vo=31,Go=32,xu=33,$o=34,ei=35,ti=36,si=37,Ko=38,Ho=39,ni=40,oi=41,ai=42,ri=43,ci=44,zo=45,Xo=46,ui=47,fn=48,ii=49,li=50,fi=51,Ei=52,_i=53,pi=54,mi=55,bi=56,Oi=57,Ti=58,Ai=59,di=60,Ii=61,Ni=62,Si=63,Wo=64,hi=65,Jo=66,Pi=67,En=68,Zo=69,qo=70,Li=71,Ri=72,ki=73,Ci=74,vi=75,yi=76,Ui=77,Bi=78,Di=79,Mi=80,Fi=81,ji=82,$p=83,Yi=84,Qo=85,wi=86,gi=87,xo=88,Vi=89,Gi=90,$i=91,Ki=92,Hi=93,zi=94,Xi=95,Wi=96,Ji=97,ea=98,Zi=99,ta=100,qi=101,Qi=102,xi=103,el=1;var tl=3;var sl=11,_n=12,nl=13,ol=14,Kp=15,al=16,pn=17,rl=18,cl=19,ul=20,il=21,{K_FLOGRAM:me}=qt.Keywords,Hp=\"0\",mn=\"any\",sa=\"data\",ll=\"code\",bn=k=>[\"TRUE\",\"FALSE\"].includes(k),Vt=!1,wl=k=>{let S=[],D=[],W=[],X={name:\"draw\",type:\"procedure\",description:{inputs:[{name:\"a\",data:{type:\"data\",name:Je,path:me}}],locals:[],outputs:[]}},ae=Object.freeze({data:S,code:D,exports:W});class Ee{constructor(){this.ambiguityArray=new Uint8Array(kp),this.ambiguityQueue=[],this.ambiguityIndex=0}}let be=[],ve=()=>{be.push(new Ee)},he=()=>be.pop(),Oe=(c,o,e,l)=>{let t=be[be.length-1],s=Object.freeze({position:c,length:l});Un(o,t.ambiguityArray,e,e+l|0,t.ambiguityIndex,t.ambiguityIndex+l|0),t.ambiguityQueue.push(s),t.ambiguityIndex=t.ambiguityIndex+l|0},Le=()=>{let c=be[be.length-1];c.ambiguityIndex=0;let{ambiguityArray:o,ambiguityQueue:e}=c;for(;e.length>0;){let l=e.shift(),{length:t,position:s}=l;fs(s,o,c.ambiguityIndex,t),c.ambiguityIndex=c.ambiguityIndex+t|0}he()},Re=c=>{!D.some(e=>{if(e.name===c.name&&e.path===c.path&&e.description.inputs.length===c.description.inputs.length&&e.description.outputs.length===c.description.outputs.length){let l=c.description.inputs.every((s,n)=>{let r=e.description.inputs[n];return s.name===r.name&&s.data.name===r.data.name&&s.data.path===r.data.path}),t=c.description.outputs.every((s,n)=>{let r=e.description.outputs[n];return s.name===r.name&&s.data.name===r.data.name&&s.data.path===r.data.path});return l&&t}return!1})&&D.push(c)},Ze=(c,o,e,l)=>{let{description:t}=c,{members:s}=t,n=s.find(i=>i.name===o[e]),r=S.find(i=>i.name===n.data.name);return r.type===Me&&e<o.length-1?Ze(r,o,e+1,l):n},Rt=c=>{let o=Number(c.replace(\",\",\"\"));return isNaN(o)?\"\":c.includes(\".\")?c.replace(\".\",\"\").length<=7?_l:ca:Number.isInteger(o)?o>=-Math.pow(2,31)&&o<Math.pow(2,31)?Je:o>=-Math.pow(2,63)&&o<Math.pow(2,63)?ks:ca:\"\"},ye=c=>{switch(c.type){case dt:return c.value.name;case wn:case It:return ye(c.link);case Mt:return ye(c.value)}return c.name},Nt=(c,o)=>{let e=Gt[c];if(e){let l=e.find(t=>t.description&&Array.isArray(t.description.inputs)?t.description.inputs.length!==o.length?!1:t.description.inputs.every((s,n)=>s.data.name===o[n].data.name):!1);if(l)return l;b=T|0,O=position-d|0,Ct(c);return}else{b=T|0,O=position-d|0,dn(c);return}},ut=()=>{let c=new Date,o=c.getHours().toString().padStart(2,\"0\"),e=c.getMinutes().toString().padStart(2,\"0\"),l=c.getSeconds().toString().padStart(2,\"0\"),t=c.getMilliseconds().toString().padStart(3,\"0\");return`${o}_${e}_${l}_${t}`},kt=c=>{let o=a.procedure.description.inputs.find(e=>e.name===c)||a.procedure.description.locals.find(e=>e.name===c);if(o){let e=S.find(l=>l.type===Ut&&l.name===o.data.name);if(e)return{data:e}}return o},ue=(c,o=!1)=>{let e;switch(c.type){case dt:{let l=a.stack.get(c.value.name||c.value.link,c.value.value);if(l){let t=S.find(s=>s.name===l.name);if(t.type===Bt){let n=t.description.labels.find(i=>i.props.find(E=>E.name===c.trail[0]));if(!n){b=T|0,O=position-d|0,Ot(c.trail[0],t.name);return}let r=n.props.find(i=>i.name===c.trail[0]);r.data?.type===Me&&0<c.trail.length-1?e={data:Ze(r,c.trail,0+1,o)?.data}:e=r}else{let{description:s}=t,{members:n}=s,r=0,i=n.find(m=>m.name===c.trail[r]),E=S.find(m=>m.name===i.data.name);if(E.type===Me&&r<c.trail.length-1)e={data:Ze(E,c.trail,r+1,o)?.data};else{if(i.data.freed){b=T|0,O=position-d|0,re(`Attempted to use '${c.trail.join(\".\")}', which has been freed. Ensure links are valid before use.`);return}if(o){let m=S.indexOf(t),N=JSON.parse(JSON.stringify(t)),R=t.description.members.indexOf(i);R>=0&&(N.description.members[R].data.freed=!0,S.splice(m,1,N))}e=i}}}break}case It:{e=ue(c.link);break}case gn:case Mt:{e=ue(c.value);break}case es:{e={data:{type:Ce,name:tt,path:me}};break}case Vn:{e={data:{type:Ce,name:Je,path:me}};break}case Ys:{let l=ue(c.array).data;l&&(e={data:{...l,name:l.name===tt&&!l.contains&&l.type!==Fe?Os:l.name}});break}case Dt:{let l=z(0),t=q(l,c.trail,!1);t?t.data.type===Fe?e={data:t.data}:e={data:S.find(n=>n.name===t.data.name&&n.path===t.data.path)}:(b=T|0,O=0,Ot(c.trail[0],l.name??`${ft}(current object in definition)`));break}case $t:{let l=s=>D.find(n=>n.type===lt&&n.name===s.name)?.description.outputs[0],t=(s,n)=>{let r;for(let i=0;n&&i<=s.name.length-2;i++)n=a.stack.get(s.name[i]),n&&(r=S.find(E=>E.type===Me&&E.name===n.name));return r?.description.members?.find(i=>i.name===s.name[s.name.length-1])?.description.outputs[0]};if(c.path!==me){if(typeof c.name===Me&&c.name[0]===Dt){let s=z(0),n=q(s,c.name.slice(1));n&&n.type===lt&&n.description.outputs.length>0?e=n.description.outputs[0]:(b=T|0,O=0,Ot(c.trail[0],s.name??`${ft}(current object in definition)`));break}else if(e=l(c),typeof c.name==\"object\"){let s=a.stack.get(c.name[0]);e=t(c,s);let n=c.name.length;c.name[n-1]===gs&&(e={data:s})}}else if(c.name===Vs)e={data:{type:Ce,name:ks,path:me}};else if(lr.has(c.name))e={data:{type:Ce,name:Kt,path:me}},Ue(e.data.name);else{let s=c.inputs.map(r=>ue(r)),n=D.find(r=>r.description&&Array.isArray(r.description.inputs)?r.description.inputs.length!==s.length||r.name!==c.name||r.path!==c.path?!1:r.description.inputs.every((i,E)=>i.data.name===s[E].data.name):!1);if(n){let{description:r}=n,{outputs:i}=r;e=i[0]}else{b=T|0,O=0,ma(s.map(r=>r.data.name),c.name);return}}break}default:{e=kt(c.name);break}}if(!e)if(Ba.includes(c.name)&&c.type===$t){let l=c.inputs.map(s=>ue(s)),t=Nt(c.name,l);e={data:{name:t.description.outputs[0].data.name,path:t.description.outputs[0].data.path}}}else c.type===Ie&&(e={data:{type:Ie,name:c.name,literal:c.literal,path:c.path}});return e?.data?.name&&Ue(e.data.name),e},jt=(c,o,e,l)=>{for(let t in c.description?.members){let s=[c.description.members[t].data.name,...o.map(n=>n.description.members[t].data.name)];if(s.some(n=>!ht.includes(n))){let n=s.map(r=>S.find(i=>i.name===r));if(n.every(Boolean))return jt(c,n,e,l)}else{let n=e.find(r=>r.description&&Array.isArray(r.description.inputs)?r.description.inputs.length!==s.length?!1:r.description.inputs.every((i,E)=>i.data.name===s[E]):!1);return n?(Re(n),_t.set(l,n),!0):!1}}},Ve=c=>{let o=ue(c);return o&&c.type!==dt&&o.data.path===me&&o.data.type!==Fe&&o.data.mutable?Object.seal({type:It,link:c}):c},V=(c,o)=>{let e=JSON.parse(JSON.stringify(c)),l=c.description.generics.map(s=>s.name);function t(s){for(let n in s)if(s[n]&&typeof s[n]==\"object\")t(s[n]);else if(n===\"name\"&&l.includes(s[n])){let r=l.indexOf(s[n]);s[n]=o[r].name,s.path=o[r].path}else if(n===\"path\"&&s[n].split(\".\").includes(e.name)){let r=s[n].split(\".\"),i=r.indexOf(e.name),E=B(e.name,o);r[i]=E,s[n]=r.join(\".\")}}t(e);for(let s of D){let{description:n}=s,{inputs:r,outputs:i}=n,E=[...r,...i];if(s.type===\"native\"&&E.some(m=>l.includes(m.data.name))){let m=JSON.parse(JSON.stringify(s));t(m),Re(m)}}return e},B=(c,o)=>{let l=o.map(t=>`${t.name}${t.segment?`_${t.segment}`:\"\"}`).join(\"__\");return`${c}___${l}`},M=c=>c.type===Mt&&c.value!==ft||c.type===It&&c.link!==ft,z=c=>{if(c<g.length){let o=g[c];return o.item?.object?o.item.object:z(c+1)}return!1},q=(c,o,e=!0)=>{let l=c.description.members.find(t=>t.name===o[0]);return l?o.length===1?l.type===lt||!e?l:!1:S.find(t=>t.name===l.data.name&&t.path===l.data.path).type!==Me?!1:q(S.find(t=>t.name===l.data.name&&t.path===l.data.path),o.slice(1),e):!1},{path:Te,imports:_e,files:ne,Tokenizer:Ge}=k,bt=new Map,_t=new Map,p=new Map,A=new Map,P=(c,o=\"\")=>{let{name:e,path:l}=c,t=o||e,s=`${l}.${t}`;p.set(s,c);let n=A.get(t)||[];n.push(c),A.set(t,n)},{data:L}=_e;for(let c of L)P(c);let v=[Te],C=new fl.default,g=[],K=[],G=[],_=!1,J=!1,de=!1,Pe=!0,ke=!1,De=!1,U=Ne,u=hs,a=null,Yt=null,Wt=[],Ke=0,T=1,d=0,je=1,Cs=null,b=0,O=0,St=(c,o,e,l)=>{let t=o.subarray(e,e+l|0),s=f(t);return Qn(c,o,e,l)?(b=T|0,O=c-d|0,An(s),!0):rt(c,o,e,l)?(b=T|0,O=c-d|0,qe(s),!0):!1};C.on(is,c=>{for(let o of K)o(c)}),C.on(we,c=>{for(let o of G)o(c)});let Jt=c=>{let o=Object.freeze({type:dl,message:Xe.FAIL_DUPLICATE_DATA(c,b),failureRow:b,failureColumn:O,name:c});J=!0,de=!0,C.emit(we,o)},Ea=(c,o)=>{let e=Object.freeze({type:Il,message:Xe.FAIL_DUPLICATE_OBJECT_MEMBER(c,o),failureRow:b,failureColumn:O,property:c,object:o});J=!0,de=!0,C.emit(we,e)},gl=c=>{let o=je,e=wt(c),l=Object.freeze({type:Tl,message:Xe.FAIL_INDENTATION_MISMATCH(b),failureRow:b,failureColumn:O,expected:o,actual:e});J=!0,de=!0,C.emit(we,l)},_a=c=>{let o=Object.freeze({type:Al,message:Xe.FAIL_INDENTATION_NO_INCREASE(b),failureRow:b,failureColumn:O,indentation:je});J=!0,de=!0,C.emit(we,o)},qe=c=>{let o=Object.freeze({type:Nl,message:Xe.FAIL_INVALID_IDENTIFIER(c),failureRow:b,failureColumn:O,identifier:c});J=!0,de=!0,C.emit(we,o)},Vl=(c,o,e)=>{let l=Object.freeze({type:Sl,message:Xe.FAIL_RETURN_LENGTH_MISMATCH(c,o,e),failureRow:b,failureColumn:O});de=!0,J=!0,C.emit(we,l)},Gl=c=>{let o=Object.freeze({type:Ll,message:Xe.FAIL_IMMUTABLE_ASSIGNMENT(c),failureRow:b,failureColumn:O,variable:c});J=!0,de=!0,C.emit(we,o)},An=c=>{let o=Object.freeze({type:Rl,message:Xe.FAIL_RESERVED_KEYWORD_USAGE(c),failureRow:b,failureColumn:O,keyword:c});J=!0,de=!0,C.emit(we,o)},Y=(c,o,e)=>{let l=Object.freeze({type:Ol,message:Xe.FAIL_UNEXPECTED_TOKEN(c,o,O,b),failureRow:b,failureColumn:O,reasons:e,expected:c,found:o});J=!0,de=!0,C.emit(we,l)},vs=c=>{let o=Object.freeze({type:bl,message:Xe.FAIL_UNRESOLVED_NAME(c,b),failureRow:b,failureColumn:O,name:c});J=!0,de=!0,C.emit(we,o)},Ot=(c,o)=>{let e=Object.freeze({type:hl,message:Xe.FAIL_UNRESOLVED_OBJECT_MEMBER(c,o),failureRow:b,failureColumn:O,name:c});J=!0,de=!0,C.emit(we,e)},dn=c=>{let o=Object.freeze({type:Pl,message:Xe.FAIL_UNKNOWN_PROCEDURE_NAME(c),failureRow:b,failureColumn:O,name:c});J=!0,de=!0,C.emit(we,o)},$l=c=>{let o=Object.freeze({type:kl,message:Xe.FAIL_UNALLOWED_COPY(c),failureRow:b,failureColumn:O,name:c});J=!0,de=!0,C.emit(we,o)},pa=(c,o,e)=>{let l=Object.freeze({type:yl,message:Xe.FAIL_INVALID_INPUT_LENGTH(c,o,e),failureRow:b,failureColumn:O,name:e,expectedLength:o,actualLength:c});J=!0,de=!0,C.emit(we,l)},ma=(c,o)=>{let e=Object.freeze({type:vl,message:Xe.FAIL_INVALID_EXPRESSION_TYPE_COMBINATION(c,o),failureRow:b,failureColumn:O,name:o,types:c});J=!0,de=!0,C.emit(we,e)},ba=(c,o)=>{let e=Object.freeze({type:Cl,message:Xe.FAIL_ASSIGNMENT_TYPE_MISMATCH(c,o),failureRow:b,failureColumn:O});J=!0,de=!0,C.emit(we,e)},re=c=>{let o=Object.freeze({type:Ul,message:c,failureRow:b,failureColumn:O});J=!0,de=!0,C.emit(we,o)},In=c=>{let o=Object.freeze({type:Sp,message:Xe.FAIL_INPUT_TYPE_MISMATCH(b,c),failureRow:b,failureColumn:O,inputs:c});J=!0,de=!0,C.emit(we,o)},Ct=c=>{let o=Object.freeze({type:hp,message:Xe.FAIL_UNSUPPORTED_TYPE(c),failureRow:b,failureColumn:O});J=!0,de=!0,C.emit(we,o)},wt=c=>c-d|0,Nn=c=>{let o=je|0;return wt(c)<o},Sn=(c,o)=>{let e=je|0,l=wt(c);switch(o){case Zn:return l<=e;case ir:return l!==e}throw qn},ys=(c,o=!0)=>{let{name:e,path:l,type:t}=c,s=`${l}.${e}`;if(!bt.has(s)){let n=S.length;l===me?n=S.findIndex(r=>r.path!==me):t===Ut?n=S.findIndex(r=>r.path!==me&&r.type!==Ut):o&&(n=S.findIndex(r=>r.path!==me&&r.type!==Ut)),n===-1||n===S.length?S.push(c):S.splice(n,0,c),bt.set(s,c),p.has(s)||P(c)}},Ue=c=>{let o=A.get(c);if(!o)return null;if(o.length===1){let[e]=o;return ys(e),e}if(o.length>0&&o[0].type===Ut){let[e]=o;return ys(e),e}throw qn},Xp=(c,o)=>{let{description:e}=c,{inputs:l,locals:t}=e,{name:s}=o;for(let n of l)if(n.name===s)return n.data;for(let n of t)if(n.name===s)return n.data;return null},Kl=(c,o,e,l)=>{switch(u){case hs:{let t=o.subarray(e,e+l|0);if(a&&a.export&&(je=wt(c),Cs&&Cs!==je&&(y(),a=null,h(),Cs=null,je=1),Cs=je),Z(t,ip)){h(),U=Ir,u=rc,_=!0;return}if(Z(t,lp)){h(),je=wt(c),a=Object.freeze({export:!0,indentation:je}),u=hr;return}if(Z(t,np)){h(),U=Or,u=Lr,_=!0;return}if(Z(t,Gn)||Z(t,sr)){h(),U=Tr,u=$r,_=!0;return}if(Z(t,Ht)){h(),U=to,u=oc,_=!0;return}if(Z(t,qa)){h(),U=Ar,u=Zs,_=!0;return}if(o[e]===ee)return;b=T|0,O=c-d|0;let s=f(t);Y(\"export/import statement, type, or function definition\",s,os);break}case hr:{if(o[e]===ce){u=hs,h(),u=Pr;return}_=!0,u=hs;break}case Pr:{if(o[e]===ee){u=hs;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=os;Y(f(ee),n,r);break}case Nr:{De=!1;let t=o.subarray(e,e+l|0);if(Z(t,rp)){U=Ye,u=fc,_=!0;return}if(Z(t,$s)){U=Ye,u=Nc,_=!0;return}if(Z(t,op)){U=Ye,u=Dc,_=!0;return}if(Z(t,Ep)){U=Ye,u=eu,_=!0;return}if(Z(t,_p)){U=Ye,u=fu,_=!0;return}if(Z(t,pp)){U=Ye,u=cu,_=!0;return}if(Z(t,bp)){U=Ye,u=Lu,_=!0;return}if(Z(t,ap)){U=Ye,u=Yc;return}if(Z(t,xa)){U=Ye,u=Rc,_=!0;return}if(Z(t,ns)||Z(t,zt)||Z(t,Hs)){b=T|0,O=c-d|0;let r=f(t),i=Is;if(Qn(c,o,e,l)){An(r);return}Y(\"statement declarer\",r,i);return}if(Z(t,Ht)){U=Ye,u=Sc,_=!0;return}if(Z(t,cp)){U=Ye,u=Pc,_=!0;return}if(Z(t,ar)||Z(t,fp)){U=Ye,u=Jc,_=!0;return}if(!St(c,o,e,l)){U=Ye,u=Vc,_=!0;return}b=T|0,O=c-d|0;let s=f(t),n=wp;if(Qn(c,o,e,l)){An(s);return}Y(\"statement declarer\",s,n);break}case Se:{let t=o[e],s=o.subarray(e,e+l|0),n=f(s);if(S.find(i=>i.type===Bt&&i.description.labels.find(E=>E.name===n))){U=ge,u=Go,_=!0;return}if(Bn(t)&&!bn(f(s))){if(S.find(m=>m.name===n&&m.type===Me)){U=ge,u=$u,_=!0;return}if(S.find(m=>m.type===Bt&&m.name===n)){U=ge,u=Go,_=!0;return}}if(Z(s,$n)){U=ge,u=ei,_=!0;return}if(Z(s,tr)){U=ge,u=Zu,_=!0;return}if(Z(s,xa)){U=ge,u=wu,_=!0;return}if(Z(s,ns)){U=ge,u=rn,_=!0;return}if(Z(s,zt)){U=ge,u=rn,_=!0;return}if(Z(s,Hs)){U=ge,u=rn,_=!0;return}if(Z(s,er)){U=ge,u=qo,_=!0;return}if(Z(s,up)){U=ge,u=pi,_=!0;return}if(Z(s,nr)){U=ge,u=Di,_=!0;return}if(t===He){U=ge,u=jo,_=!0;return}if(t===pe){U=ge,u=Vi,_=!0;return}if(Ds(c,o,e,l)||dp.includes(t)||bn(n)){U=ge,u=yo,_=!0;return}u=so,ve(),_=!0;break}case so:{Oe(c,o,e,l),h(),a=o[e],u=Sr;break}case Sr:{Oe(c,o,e,l);let t=a;y();let s=o[e];if(s===pe){U=ge,u=cn,Le();return}if(s===He){U=ge,u=Xu,Le();return}if(s===$e&&!Wn.includes(t)){U=ge,u=cn,Le();return}if(s===st){u=so;return}U=ge,u=yo,Le();break}}},Hl=(c,o,e,l)=>{switch(u){case Lr:{let t=v.join(\".\"),s=Object.seal({labels:[],generics:[]}),n=Object.seal({type:Bt,name:it,path:t,description:s});a=Object.seal({enumeration:n}),u=Rr;break}case Rr:{let{enumeration:t}=a,s=o.subarray(e,e+l|0),n=f(s);if(St(c,o,e,l))return;t.name=n,u=kr;break}case kr:{let t=o[e];if(t===ce){u=Cr;return}if(t===$e){let{enumeration:i}=a,{description:E}=i,{generics:m}=E;h(),a=m,U=Ss,u=Ls,_=!0;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(`${f(ce)} or ${f($e)} for generics`,n,r);break}case Cr:{if(o[e]===ee){u=vr;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=os;Y(f(ee),n,r);break}case vr:{je=wt(c),u=no,_=!0;break}case no:{let{enumeration:t}=a;if(Nn(c)){if(ys(t),y(),a&&a.export){let s=Object.freeze({name:t.name,type:t.type,path:sa});W.push(s);let n=je;y(),je===n&&y(),je<n&&h()}_=!0;return}u=yr,_=!0;break}case yr:{let{enumeration:t}=a,{description:s}=t,{labels:n}=s,r=o.subarray(e,e+l|0),i=f(r);if(St(c,o,e,l))return;let E={name:i,props:[]};n.push(E),u=no,h(),a={label:E},u=Ur;break}case Ur:{let t=o[e];if(_=!0,t===pe){u=Br;return}u=ro;break}case Br:{if(o[e]===pe){u=oo;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case oo:{let t=o.subarray(e,e+l|0),s=f(t);if(rt(c,o,e,l)){b=T|0,O=c-d|0,qe(s);return}let{props:n}=a.label;h();let r=Object.seal({name:s,data:null});n.push(r),a={prop:r},u=Dr;break}case Dr:{if(o[e]===ce){u=Mr,h(),a=Object.seal({data:null}),h(),U=mt,u=ct;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case Mr:{let{data:t}=a;y();let{prop:s}=a;s.data=t,u=ao;let n=o[e];if(n===le){y(),u=ao,_=!0;return}if(n===Be){y(),u=oo;return}b=T|0,O=c-d|0;let r=o.subarray(e,e+l|0),i=f(r),E=We;Y(`${f(le)} or ${f(le)}`,i,E);break}case ao:{if(o[e]===le){u=ro;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=We;Y(f(le),n,r);break}case ro:{if(o[e]===ee){y();return}break}}},zl=(c,o,e,l)=>{switch(u){case Ls:{u=gr,_=!0;break}case gr:{if(o[e]===$e){u=Ws;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f($e),n,r);break}case Ws:{let t=o[e];if(t===ee)return;if(t===ze){y();return}u=Vr,_=!0;break}case Vr:{let t=o.subarray(e,e+l|0),s=f(t);if(St(c,o,e,l))return;h();let n=Object.seal({type:Ut,name:s,path:Te});a=Object.seal({name:s,data:n}),P(a.data,a.name),u=Gr;break}case Gr:{let t=a;y(),a.push(t);let n=o[e];if(n===ze){u=Ws,_=!0;return}if(n===Be){u=Ws;return}b=T|0,O=c-d|0;let r=o.subarray(e,e+l|0),i=f(r),E=We;Y(f(le),i,E);break}}},Xl=(c,o,e,l)=>{switch(u){case Ps:{u=Fr,_=!0;break}case Fr:{if(o[e]===pe){u=Xs;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case Xs:{let t=o[e];if(t===ee)return;if(t===le){y();return}u=jr,_=!0;break}case jr:{let t=o.subarray(e,e+l|0);if(h(),Z(Xt,t)){a=Object.seal({name:null,mutable:!0,data:null}),u=co;return}a=Object.seal({name:null,data:null}),u=co,_=!0;break}case co:{let t=o.subarray(e,e+l|0),s=f(t);if(St(c,o,e,l))return;a.name=s,u=Yr;break}case Yr:{if(o[e]===ce){u=wr,h(),U=mt,u=ct;return}break}case wr:{let t=a;y();let s=a,{mutable:n,...r}=t;s.push(r);let i=o[e];if(i===le){u=Xs,_=!0;return}if(i===Be){u=Xs;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=We;Y(`${f(le)} or ${f(Be)}`,m,N);break}}},Wl=(c,o,e,l)=>{switch(u){case $r:{let t=v.join(\".\"),s=Object.seal({members:[],generics:[]}),n=Object.seal({type:Me,name:it,copy:!0,path:t,description:s});a=Object.seal({mapNameMember:new Map,object:n}),Ue(Je),u=Kr,_=!0;break}case Kr:{let t=o.subarray(e,e+l|0);if(u=Hr,Z(t,sr)){a.object.copy=!1;return}_=!0;break}case Hr:{let t=o.subarray(e,e+l|0);if(Z(t,Gn)){u=zr;return}b=T|0,O=c-d|0;let s=f(t),n=nt;Y(f(Gn),s,n);break}case zr:{let{object:t}=a,s=o.subarray(e,e+l|0),n=f(s);if(St(c,o,e,l))return;let r=Ue(n);if(r&&v.join(\".\")===r.path&&(b=T|0,O=c-d|0,Jt(n)),Z(s,Xt)){b=T|0,O=c-d|0,failReservedKeyword(n);return}t.name=n,ys(t,!1),u=Xr;break}case Xr:{if(o[e]===$e)u=Wr,_=!0;else if(o[e]===ce)u=uo,_=!0;else{let t=o.subarray(e,e+l|0),s=f(t);b=T|0,O=c-d|0,qe(s);return}break}case Wr:{let{object:t}=a,{description:s}=t,{generics:n}=s;u=uo,h(),a=n,U=Ss,u=Ls,_=!0;break}case uo:{if(o[e]===ce){u=Jr;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case Jr:{if(o[e]===ee){u=Zr;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=os;Y(f(ee),n,r);break}case Zr:{if(Sn(c,Zn)){let t=g.length;if(g.length<1||g[t-1].item.indentation>=je){b=T|0,O=c-d|0,_a(c);return}}je=wt(c),u=Js,_=!0;break}case Js:{let{object:t}=a;if(Nn(c)){if(y(),a&&a.export){let s=Object.freeze({name:t.name,type:t.type,path:sa});W.push(s);let n=je;y(),je===n&&y(),je<n&&h()}_=!0;return}if(Sn(c,ir)){b=T|0,O=c-d|0,gl(c);return}u=qr,_=!0;break}case qr:{let{object:t,mapNameMember:s}=a,{description:n}=t,{members:r}=n,i=o.subarray(e,e+l|0),E=f(i);if(u=Qr,Z(i,Xt)){h(),a=Object.freeze({mutable:!0});return}_=!0;break}case Qr:{let t;a.mutable&&(t=a.mutable,y());let{object:s,mapNameMember:n}=a,{description:r}=s,{members:i}=r,E=o.subarray(e,e+l|0),m=f(E);if(Z(qa,E)){u=Js,h(),U=dr,u=Zs,_=!0;return}if(St(c,o,e,l))return;n.has(m)&&(b=T|0,O=c-d|0,Ea(m,s.name));let N={name:m,data:null};t&&(N.mutable=t),i.push(N),n.set(m,N),u=Js,h(),a=Object.seal({member:N}),u=xr;break}case xr:{if(o[e]===ce){u=ec;return}break}case ec:{u=nc,h(),a=Object.seal({data:null}),h(),U=mt,u=ct,_=!0;break}case nc:{let t=o[e],{data:s}=a;y();let{member:n}=a;if(n.data=s,n.mutable&&(n.data={...s,mutable:n.mutable}),t===ee){y();return}if(t===et){u=tc;return}b=T|0,O=c-d|0;let r=o.subarray(e,e+l|0),i=f(r),E=Pt;Y(`${f(ee)} or ${f(et)}`,i,E);break}case tc:{let{stack:t}=a;u=sc,h(),a={stack:new Map,procedure:null,value:null},h(),u=Se,U=Ne,_=!0;break}case sc:{let{value:t}=a;y();let{member:s}=a;s.value=t,y();break}}},Jl=(c,o,e,l)=>{switch(u){case Zs:{let{mapNameMember:t,object:s}=a,{name:n}=s,r=new Map(t),i=`${v.join(\".\")}.${n}`,E=Object.seal({generics:[],inputs:[],locals:[],outputs:[],statements:[]}),m=Object.seal({type:lt,name:it,path:i,description:E});a=Object.seal({procedure:m,stack:r}),u=qs;break}case qs:{let{procedure:t}=a,s=o.subarray(e,e+l|0),n=f(s);if(St(c,o,e,l))return;if(Z(s,Xt)){b=T|0,O=c-d|0,failReservedKeyword(n);return}t.name=n,u=Qs;break}case Qs:{if(o[e]===$e)u=xs,_=!0;else if(o[e]===pe)u=cs,_=!0;else{let t=o.subarray(e,e+l|0),s=f(t);b=T|0,O=c-d|0,qe(s);return}break}case xs:{let{procedure:t}=a,{description:s}=t,{generics:n}=s;u=cs,h(),a=n,U=Ss,u=Ls,_=!0;break}case cs:{let{procedure:t}=a,{description:s}=t,{inputs:n}=s;u=en,h(),a=n,U=Ns,u=Ps,_=!0;break}case en:{let{procedure:t,stack:s}=a,{description:n}=t,{inputs:r}=n;for(let R of r){let{name:F,data:w}=R;s.set(F,w)}r.length>0&&a.procedure.name===za&&(b=T|0,O=c-d|0,re(\"Destructors should not return any values. Your destructor appears to return a number. Please adhere to Flogram's conventions and correct your code.\"));let i=o.subarray(e,e+l|0),E=o[e];if(Z(i,Ks)){u=tn;return}if(E===ce){u=us,_=!0;return}b=T|0,O=c-d|0;let m=f(i),N=_r;Y(`${f(Ks)} or ${f(ce)}`,m,N);break}case tn:{let{procedure:t}=a,{description:s}=t,{outputs:n}=s;u=us,h(),a=n,U=Ns,u=Ps,_=!0;break}case us:{let t=o[e],{outputs:s}=a.procedure.description;if(s.length>0&&a.procedure.name===gs&&(b=T|0,O=c-d|0,re(`Constructors in Flogram should not return any values. Your constructor seems to return ${s.length} outputs. Please correct your code according to Flogram rules.`)),s.length>0&&a.procedure.name===za&&(b=T|0,O=c-d|0,re(`Destructors in Flogram should not return any values. Your destructor seems to return ${s.length} outputs. Please correct your code according to Flogram rules.`)),t===ce){u=sn;return}b=T|0,O=c-d|0;let n=o.subarray(e,e+l|0),r=f(n),i=nt;Y(f(ce),r,i);break}case sn:{if(o[e]===ee){u=nn;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=os;Y(f(ee),n,r);break}case nn:{let{procedure:t,stack:s}=a,{description:n}=t,{statements:r}=n;u=on,h(),a=Object.seal({procedure:t,stack:s,statements:r}),U=Ye,u=Lt,_=!0;break}case on:{let{procedure:t}=a,{name:s}=t;y();let{object:n,mapNameMember:r}=a,{description:i}=n,{members:E}=i;r.has(s)&&(b=T|0,O=c-d|0,Ea(s,n.name));let m=Object.seal({name:t.name,data:{name:t.name,type:t.type,path:t.path}});E.push(t),r.set(s,m),_=!0;break}}},Zl=(c,o,e,l)=>{switch(u){case oc:{let t=o.subarray(e,e+l|0);if(Z(t,Ht)){h(),U=to,u=ac,_=!0;return}break}case ac:{if(o[e]===ee){y();return}break}}},ql=(c,o,e,l)=>{switch(u){case Zs:{let t=new Map,s=v.join(\".\"),n=Object.seal({generics:[],inputs:[],locals:[],outputs:[],statements:[]}),r=Object.seal({type:lt,name:it,path:s,hasArity:!1,description:n});a=Object.seal({procedure:r,stack:t}),u=qs;break}case qs:{let{procedure:t}=a,s=o.subarray(e,e+l|0),n=f(s);if(St(c,o,e,l))return;if(Z(s,Xt)){b=T|0,O=c-d|0,failReservedKeyword(n);return}t.name=n,u=Qs;break}case Qs:{if(o[e]===$e)u=xs,_=!0;else if(o[e]===pe)u=cs,_=!0;else{let t=o.subarray(e,e+l|0),s=f(t);b=T|0,O=c-d|0,qe(s);return}break}case xs:{let{procedure:t}=a,{description:s}=t,{generics:n}=s;u=cs,h(),a=n,U=Ss,u=Ls,_=!0;break}case cs:{let{procedure:t}=a,{description:s}=t,{inputs:n}=s;u=en,h(),a=n,U=Ns,u=Ps,_=!0;break}case en:{let{procedure:t,stack:s}=a,{description:n}=t,{inputs:r}=n;for(let R of r){let{name:F,data:w}=R;s.set(F,w)}let i=o.subarray(e,e+l|0),E=o[e];if(Z(i,Ks)){u=tn;return}if(E===ce){u=us,_=!0;return}b=T|0,O=c-d|0;let m=f(i),N=_r;Y(`${f(Ks)} or ${f(ce)}`,m,N);break}case tn:{let{procedure:t}=a,{description:s}=t,{outputs:n}=s;u=us,h(),a=n,U=Ns,u=Ps,_=!0;break}case us:{let t=o[e],{procedure:s}=a;if(Re(s),t===ce){u=sn;return}b=T|0,O=c-d|0;let n=o.subarray(e,e+l|0),r=f(n),i=nt;Y(f(ce),r,i);break}case sn:{if(o[e]===ee){u=nn;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=os;Y(f(ee),n,r);break}case nn:{let{procedure:t,stack:s}=a,{description:n}=t,{statements:r}=n;u=on,h(),a=Object.seal({procedure:t,stack:s,statements:r}),U=Ye,u=Lt,_=!0;break}case on:{let i=function(E,m=!0){let N=[Wa,Xa,Ka,Za],R=!1;if(E.find(w=>w.type===pt))return!0;for(let w=E.length-1;w>=0;w--){let j=E[w];if(N.includes(j.type)&&j.statements)i(j.statements,!1)&&(R=!0);else if(j.type===Ja){let H=0;for(let Ae of j.matches)i(Ae.statements)&&H++;let{data:$}=ue(j.value),ie=S.find(Ae=>Ae.name===$.name&&Ae.path===$.path);j.matches.find(Ae=>Ae.type===bs)&&H===j.matches.length||ie&&ie.type===Bt&&j.matches.length===ie.description.labels.length?R=!0:H>0&&(b=T|0,O=c-d|0,re(`ReturnError: Procedure \"${t.name}\" has condition-specific returns; it will not return if conditions are not met.`))}else if(j.type===jn)if(j.branches&&j.branches.length>0){let H=E.some($=>$.type===pt);if(m&&!H&&j.branches.length<2)return b=T|0,O=c-d|0,re(`ReturnError: Procedure \"${t.name}\" has condition-specific returns; it will not return if conditions are not met.`),!1;if(!H){for(let $ of j.branches)if(!$.statements||!i($.statements,!1))return b=T|0,O=c-d|0,re(`Procedure ${t.name} does not have a return statement. Please make sure your return values are marked as defined in the procedure definition.`),!1;w!==E.length-1&&E[E.length-1].type!==ts&&(b=T|0,O=c-d|0,re(`Code after return statement will not be executed. Procedure ${t.name} has defined statements after a return statements which makes them unreachable.`))}R=!0}else return console.error(\"Error: Condition does not have branches\"),!1;else j.type===pt&&(w!==E.length-1&&E[E.length-1].type!==ts&&(b=T|0,O=c-d|0,re(`Code after return statement will not be executed. Procedure ${t.name} has defined statements after a return statements which makes them unreachable.`)),R=!0);if(R==!0)break}return m&&!R&&(b=T|0,O=c-d|0,re(`Procedure ${t.name} does not have a return statement. Please make sure your return values are marked as defined in the procedure definition.`)),R},{procedure:t}=a,{description:s}=t,{statements:n,outputs:r}=s;if(t.hasArity){let E=Object.freeze({name:s.locals.find(N=>N.purpose===Fn).name,type:xe}),m=Object.freeze({type:pt,values:[E]});n.push(m)}if(r.length!==0&&i(n),r.length===0&&!n.find(E=>E.type===pt)&&n.push(Object.freeze({type:pt,values:[]})),y(),a&&a.export){let E=Object.freeze({name:t.name,type:t.type,path:ll});W.push(E);let m=je;y(),je===m&&y(),je<m&&h()}_=!0;break}}},Ql=(c,o,e,l)=>{switch(u){case Lt:{if(Sn(c,Zn)){b=T|0,O=c-d|0,_a(c);return}je=wt(c),u=lc,_=!0;break}case lc:{let t=o.subarray(e,e+l|0);if(Nn(c)){y(),_=!0;return}h(),U=Ne,u=Nr,_=!0;break}case Yc:{let{statements:t}=a,s={type:X_};t.push(s),y();break}case cu:{let{procedure:t,stack:s,statements:n}=a,r=Object.seal({type:Wa,condition:null,statements:[]});n.push(r),h(),a=Object.seal({blockWhile:r,procedure:t,stack:s}),u=uu;break}case uu:{let{stack:t,procedure:s}=a;u=iu,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case iu:{if(o[e]===ce){let{value:i}=a;y();let{blockWhile:E}=a;E.condition=i,u=lu;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case lu:{let{blockWhile:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=Po,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case Lu:{let{procedure:t,stack:s,statements:n}=a,r=Object.seal({type:Ja,value:null,matches:[]});n.push(r),h(),a=Object.seal({blockWhen:r,procedure:t,stack:s}),u=Ru;break}case Ru:{let{stack:t,procedure:s}=a;u=ku,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case ku:{if(o[e]===ce){let{value:i}=a;y();let{blockWhen:E}=a;E.value=i,u=Cu;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case Cu:{if(o[e]===ee){u=ko;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=Pt;Y(f(ee),n,r);break}case ko:{let t=o.subarray(e,e+l|0);if(Z(t,Ts)){let{stack:s,procedure:n,blockWhen:r}=a,{matches:i}=r;h();let E=Object.seal({type:ms,value:null,statements:[]});i.push(E),a={procedure:n,stack:s,match:E,blockWhen:r},u=vu,h(),a={stack:s,procedure:n,value:null},h(),u=Se,U=Ne;return}}case vu:{if(o[e]===ce){let{value:i}=a;y();let{match:E,blockWhen:m}=a,N=ue(m.value),R=ue(i);if(R.data.path!=N.data.path||R.data?.name!=N.data?.name){b=T|0,O=c-d|0,re(`TypeError: Type mismatch in when block. When value's ${N.data.name} is being compared against match value's ${R.data.name}. To avoid unexpected behaviours. Use when with I32 or Enums, and if for other type conditions`);return}E.value=i,u=Co;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case Co:{let{match:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=yu,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case Uu:{let{stack:t,procedure:s,blockWhen:n}=a,{matches:r}=n,i=o.subarray(e,e+l|0);if(Z(i,$s)){h();let N=Object.seal({type:bs,statements:[]});r.push(N),a={procedure:s,stack:t,match:N},u=Bu;return}b=T|0,O=c-d|0;let E=f(i),m=[];Y(f($s),E,m);break}case Bu:{if(o[e]==ce){u=Co;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case yu:{y();let t=o.subarray(e,e+l|0);if(Z(t,Ts)){u=ko,_=!0;return}if(Z(t,$s)){u=Uu,_=!0;return}let{blockWhen:s}=a,n=s.matches.every(r=>r.statements.some(i=>i.type===pt||i.type===ts))&&s.matches.some(r=>r.type===bs);y(),n&&a.statements.push(Object.freeze({type:ts})),y(),_=!0;break}case fu:{let{procedure:t,stack:s,statements:n}=a,r=Object.seal({type:Za,limit:null,variable:null,modifier:it,initializer:null,step:null,statements:[]});n.push(r),h(),a=Object.seal({procedure:t,stack:s,blockFor:r}),u=Eu,ve();break}case Eu:{Oe(c,o,e,l);let t=o.subarray(e,e+l|0),s=f(t);if(o[e]===ce){u=_u,Le();return}if(fr.includes(s)){u=Tu,Le();return}if(o[e]===et){b=T|0,O=c-d|0;let n=o.subarray(e,e+l|0);re(\"Unexpected behavior: Existing variables can not be updated in for loop definition. Please update the value before you define the loop or declare a brand new variable.\");return}break}case _u:{let{stack:t,blockFor:s}=a,n=o.subarray(e,e+l|0),r=f(n);if(t.has(r)){b=T|0,O=c-d|0,Jt(r);return}s.variable=Object.freeze({type:xe,name:r}),u=pu;break}case pu:{let t=o.subarray(e,e+l|0),s=f(t);if(o[e]===ce){let{blockFor:i,stack:E}=a,{name:m}=i.variable;if(E.has(m)){b=T|0,O=c-d|0,Jt(m);return}if(o[e+1]===et&&l>1){u=Lo,_=!0;return}u=mu;return}b=T|0,O=c-d|0;let r=pr;Y(`${f(ce)} or ${f([ce,et])}`,s,r);break}case mu:{let{blockFor:t,procedure:s,stack:n}=a,{variable:r}=t,{description:i}=s,{locals:E}=i,m=o.subarray(e,e+l|0),N=f(m);if(rt(c,o,e,l)){b=T|0,O=c-d|0,qe(N);return}let R=Ue(N);if(R){let F=Object.seal({type:Ce,name:R.name,path:R.path}),w;if(r.mutable?w=Object.freeze({name:r.name,data:{...F,mutable:target.mutable}}):w=Object.freeze({name:r.name,data:F}),!zs.includes(r.data.name)){b=T|0,O=c-d|0;let j=o.subarray(e,e+l|0),H=f(j);re(`Error: 'For' loop counter must be a numeric type. The current counter type is '${H}', which is not supported. Please use a numeric type (e.g., integer or floating-point) for the loop counter.`);return}n.set(r.name,r.data),E.push(w),u=Lo;break}}case Lo:{if(o[e]===et||o[e]===ce&&o[e+1|0]===et){u=bu;return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t);Y(et,s,[]);break}case bu:{let{stack:t,procedure:s}=a;u=Ou,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Ou:{let{stack:t,procedure:s,value:n}=a,{description:r}=s,{locals:i}=r;y();let{blockFor:E}=a,{variable:m}=E,{data:N}=ue(n),R=t.get(E.variable.name);if(R){if(R.name!==N.name){if(N.type!==Ie){b=T|0,O=c-d|0,ba(R.name,N.name);return}if(!zs.includes(m.data.name)){b=T|0,O=c-d|0;let F=o.subarray(e,e+l|0),w=f(F);re(`Error: 'For' loop counter must be a numeric type. The current counter type is '${w}', which is not supported. Please use a numeric type (e.g., integer or floating-point) for the loop counter.`);return}}}else t.set(m.name,N),i.push({name:m.name,data:N.type===Ie?{type:Ce,name:N.name,path:N.path}:N});E.initializer=Object.freeze({target:m,type:yt,source:n.type===Ie?{...n,name:R?.name||n.name}:n}),u=Ro,_=!0;break}case Tu:{let{stack:t,procedure:s}=a;u=Au,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Au:{let{value:t}=a;y();let{blockFor:s}=a;s.variable=Ve(t),u=Ro,_=!0;break}case Ro:{let{blockFor:t}=a,s=o.subarray(e,e+l|0),n=f(s);if(fr.includes(n)){t.modifier=n,u=du;return}b=T|0,O=c-d|0;let r=f(s),i=[];Y(`'For' loop modifiers (e.g., ${na}, ${oa}, ${aa}, or ${ra})`,r,i);break}case du:{let{stack:t,procedure:s}=a;u=Iu,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Iu:{let{value:t}=a,{data:s}=ue(t);if(!zs.includes(s.name)){b=T|0,O=c-d|0;let F=o.subarray(e,e+l|0),w=f(F);re(`Error: 'For' loop limit must be a numeric type. The current limit type is '${w}', which is not supported. Please use a numeric type (e.g., integer or floating-point) for the loop limit.`);return}y();let{blockFor:n}=a,{modifier:r}=n;n.limit=Ve(t);let i=(F,w)=>w.find(j=>j.description&&Array.isArray(j.description.inputs)?j.description.inputs.length!==2?!1:j.description.inputs.every((H,$)=>H.data.name===F.name):!1),E={[na]:{stepper:\"+\",conditioner:\"<=\"},[aa]:{stepper:\"+\",conditioner:\"<\"},[oa]:{stepper:\"-\",conditioner:\">=\"},[ra]:{stepper:\"-\",conditioner:\">\"}};if(E.hasOwnProperty(r)){let{stepper:F,conditioner:w}=E[r],j=i(s,Gt[F]),H=i(s,Gt[w]);Re(j),Re(H)}let m=o.subarray(e,e+l|0);if(Z(m,cr)){u=Nu;return}b=T|0,O=c-d|0;let N=f(m),R=[];Y(f(cr),N,R);break}case Nu:{let{procedure:t,stack:s}=a;u=Su,h(),a={stack:s,procedure:t,value:null},h(),u=Se,U=Ne,_=!0;break}case Su:{if(o[e]===ce){let{value:i}=a;y();let{blockFor:E}=a;E.step=Ve(i);let{data:m}=ue(i);if(!zs.includes(m.name)){b=T|0,O=c-d|0;let N=o.subarray(e,e+l|0),R=f(N);re(`Error: 'For' loop step must be a numeric type. The current step type is '${R}', which is not supported. Please use a numeric type (e.g., integer or floating-point) for the loop step.`);return}u=hu;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case hu:{let{blockFor:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=Pu,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case Pu:{y(),y(),_=!0;break}case eu:{let{procedure:t,stack:s,statements:n}=a,r=Object.seal({type:Xa,iterator:null,index:`j_${ut()}`,collection:null,statements:[]}),i={name:r.index,data:{type:Ce,name:Je,path:me}};s.set(i.name,i.data),n.push(r),Ue(i.data.name),h(),a=Object.seal({blockForeach:r,procedure:t,stack:new Map(JSON.parse(JSON.stringify(Array.from(s))))}),u=tu;break}case tu:{let t=o.subarray(e,e+l|0),{blockForeach:s,stack:n}=a,r=f(t);if(n.has(r)){Jt(r),b=T|0,O=c-d|0;return}s.iterator=r,u=su;break}case su:{let{blockForeach:t,stack:s,procedure:n}=a,{description:r}=n,{locals:i}=r,E=o.subarray(e,e+l|0);if(Z(mp,E)){s.delete(t.index),u=nu;return}_=!0,u=ho;break}case nu:{let{blockForeach:t,stack:s,procedure:n}=a,{description:r}=n,{locals:i}=r,E=o.subarray(e,e+l|0),m=f(E);if(s.has(m)){Jt(m),b=T|0,O=c-d|0;return}let N={name:m,data:{type:Ce,name:Je,path:me}};s.set(m,N.data),i.push(N),Ue(N.data.name),t.index=m,u=ho;break}case ho:{let{blockForeach:t,stack:s,procedure:n}=a,{description:r}=n,{locals:i}=r,E=o.subarray(e,e+l|0);if(Z(rr,E)){s.has(t.index)&&!i.find(R=>R.name===t.index)&&i.push({name:t.index,data:s.get(t.index)}),u=ou;return}b=T|0,O=c-d|0;let m=f(E),N=nt;Y(f(rr),m,N);break}case ou:{let{stack:t,procedure:s}=a;u=au,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case au:{if(o[e]===ce){let{value:i,stack:E,procedure:m}=a,{description:N}=m,{locals:R}=N;y();let{blockForeach:F}=a;F.collection=i;let{data:w}=ue(i),j={name:F.iterator,data:{type:w.contains||Ce,name:w?.name===tt?Os:w?.name,path:w?.path,layout:w.contains}};E.set(j.name,j.data),R.push(j),u=ru;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case ru:{let{blockForeach:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=Po,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case Po:{y(),y(),_=!0;break}case Dc:{let{procedure:t,stack:s,statements:n}=a,r=Object.freeze({type:Ka,statements:[]});n.push(r),h(),a=Object.seal({blockLoop:r,procedure:t,stack:new Map(JSON.parse(JSON.stringify(Array.from(s)))),value:0}),u=Mc;break}case Mc:{if(o[e]===ce){u=Fc;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(f(ce),n,r);break}case Fc:{let{blockLoop:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=jc,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case jc:{y(),y(),_=!0;break}case fc:{let{procedure:t,stack:s,statements:n}=a,r=Object.freeze({type:jn,branches:[],values:[]});n.push(r),h(),a=Object.seal({blockCondition:r,procedure:t,stack:new Map(JSON.parse(JSON.stringify(Array.from(s)))),value:0}),u=Tc;break}case Tc:{if(o[e]===pe){let{stack:t,procedure:s}=a;u=Eo,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;return}ve(),Oe(c,o,e,l),u=Ac;break}case Ac:{Oe(c,o,e,l);let t=o[e],s=o.subarray(e,e+l|0);if(t===pe||t===ce){let{stack:n,procedure:r}=a;u=Eo,h(),a={stack:n,procedure:r,value:null},h(),u=Se,U=Ne,_=!0,Le();return}if(Z(s,Ts)){let{stack:n,procedure:r}=a;u=lo,h(),a={stack:n,procedure:r,value:null},h(),u=Se,U=Ne,_=!0,Le();return}break}case Eo:{let{value:t}=a;y();let{blockCondition:s,stack:n,procedure:r}=a,{branches:i}=s,E=Object.seal({type:ms,statements:[],values:[Ve(t)]});i.push(E),a=Object.seal({blockCondition:s,branch:E,stack:n,value:t,procedure:r}),u=_o,_=!0;break}case Nc:{let{stack:t,branches:s,procedure:n}=a,r={type:bs,statements:[],values:[]};s.push(r),a=Object.seal({branch:r,stack:t,procedure:n}),u=_o;break}case _o:{let t=o.subarray(e,e+l|0);if(o[e]===ce){u=dc;return}b=T|0,O=c-d|0;let s=f(t),n=As;Y(f(ce),s,n);break}case dc:{let{branch:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=Ic,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case Ic:{if(a.blockCondition){let{blockCondition:t}=a,{branches:s}=t;y(),y(),a=Object.seal({...a,branches:s})}else{y();let{branches:t,...s}=a;if(t.length==2&&t[0].type===ms&&t[0].statements.find(n=>n.type===pt)&&t[1].type===bs&&!t[1].statements.find(n=>n.type===pt)){let n=`arity_${ut()}`,r=`status_${ut()}`,i=Object.freeze({type:Ce,name:Kt,path:me,mutable:!0}),E=Object.freeze({name:r,purpose:Ga,data:i}),m=Object.freeze({name:n,purpose:Fn,data:{...s.procedure.description.outputs[0].data,mutable:!0}});s.procedure.description.locals.push(m,E);let N=Object.freeze({type:xe,name:n}),R=Object.freeze({type:yt,source:t[0].statements.find(H=>H.type===pt).values[0],target:N}),F=Object.freeze({type:yt,source:Object.freeze({type:Ie,literal:\"TRUE\",name:Kt,path:me}),target:Object.freeze({type:xe,name:r})});t[0].statements.pop(),t[0].statements.push(R,F),s.statements.push(...t[1].statements),t.pop();let{stack:w}=s;w.set(n,m.data),w.set(r,i);let j=Object.freeze({type:yt,source:Object.freeze({type:Ie,name:Kt,literal:\"FALSE\",path:me}),target:Object.freeze({type:xe,name:r})});s.statements.unshift(j),s.procedure.hasArity=!0}t.every(n=>n.statements.some(r=>r.type===pt||r.type===ts))&&s.statements.push(Object.freeze({type:ts})),a=Object.seal(s)}_=!0;break}case lo:{let{value:t}=a;y();let{blockCondition:s,stack:n}=a,{values:r}=s,i=o.subarray(e,e+l|0),E=f(i);r.push(t),u=Ec,_=!0;break}case Ec:{if(o[e]===Be){let{stack:i,procedure:E}=a;u=lo,h(),a={stack:i,procedure:E,value:null},h(),u=Se,U=Ne,_=!0;return}let s=o.subarray(e,e+l|0);if(Z(s,Ts)){u=_c,h(),u=pc,_=!0;return}b=T|0,O=c-d|0;let n=f(s),r=Yp;Y(`${f(Ts)} or ${f(Be)}`,n,r);break}case _c:{y(),y(),_=!0;break}case pc:{let{blockCondition:t,procedure:s,stack:n}=a,{branches:r}=t,i=Object.seal({type:ms,statements:[],values:[]});r.push(i),a=Object.seal({blockCondition:t,branchMatch:i,procedure:s,stack:n}),u=fo;break}case fo:{let{blockCondition:t,branchMatch:s,stack:n}=a,{values:r}=t,{values:i}=s,E=o.subarray(e,e+l|0),m=f(E);if(St(c,o,e,l)&&!Z(E,nr)){b=T|0,O=c-d|0;let N=o.subarray(e,e+l|0),R=f(N);Y(\"match value\",R,nt);return}if(n.has(m)){let N=Object.freeze({type:xe,name:m});i.push(N)}else if(bn(m)){let N=Object.freeze({type:Ie,literal:m,name:Kt,path:me});i.push(N),Ue(N.name)}else{let{procedure:N}=a,{description:R}=N,{outputs:F}=R,w=m,{name:j,path:H}=F[0].data,$=Object.freeze({type:Ie,literal:w,name:j,path:H});i.push($)}u=mc;break}case mc:{let t=o[e];if(t===Be){u=fo;return}if(t===ce){u=bc;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=nt;Y(`${f(Be)} or ${f(ce)}`,n,r);break}case bc:{let{branchMatch:t,procedure:s,stack:n}=a,{statements:r}=t;if(o[e]===ee){u=Oc,h(),a=Object.seal({procedure:s,stack:n,statements:r}),U=Ye,u=Lt;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=Pt;Y(f(ee),m,N);break}case Oc:{y();let t=o.subarray(e,e+l|0),s=f(t);_=!0;break}case Sc:{u=hc;break}case hc:{if(o[e]===ee){y();return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=Pt;Y(f(ee),n,r);break}case Pc:{let{procedure:t,stack:s,statements:n}=a,r=Object.seal({type:pt,values:[]});n.push(r),h();let i=T|0,E=c-d|0,m=Object.freeze({row:i,column:E});a=Object.seal({commandReturn:r,coordinates:m,procedure:t,stack:s}),u=po;break}case po:{let{stack:t,procedure:s}=a;if(o[e]===ee){u=mo,_=!0;return}u=Lc,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Lc:{let{value:t}=a;y();let{commandReturn:s,stack:n,procedure:r}=a,{values:i}=s;i.push(Ve(t));let E=o[e];if(E===ee){u=mo,_=!0;return}if(E===Be){u=po;return}b=T|0,O=c-d|0;let m=o.subarray(e,e+l|0),N=f(m),R=Er;Y(`${f(ee)} or ${f(Be)}`,N,R);break}case mo:{let{commandReturn:t,coordinates:s,procedure:n}=a,{values:r}=t,{description:i}=n,{outputs:E}=i;if(r.length!==E.length){b=s.row|0,O=s.column|0,Vl(E.length,r.length,n.name);return}for(let m of E){let N=E.indexOf(m),R=ue(r[N]);if(R&&R.data.name!=m.data.name){b=s.row|0,O=s.column|0,re(`Mismatching types provided on procedure's return. Procedure expected ${m.data.name} at index ${N} but was provided with a rather ${R.data.name}. Please review to provide matching types.`);return}}if(n.hasArity){let m=Object.freeze({name:i.locals.find(j=>j.purpose===Fn).name,type:xe}),N=Object.freeze({name:i.locals.find(j=>j.purpose===Ga).name,type:xe}),R=Object.freeze({type:yt,source:r[0],target:m}),F=Object.freeze({type:ms,statements:[R],values:[N]}),w=Object.freeze({type:jn,branches:[F],values:[]});i.statements.pop(),i.statements.push(w)}y(),y();break}case Vc:{let t=o.subarray(e,e+l|0),{procedure:s,stack:n,statements:r}=a,i={type:xe,name:null},E=Object.seal({type:yt,target:i,source:null});if(a=Object.freeze({declarationValue:E,procedure:s,stack:n,statements:r,target:i}),Z(Xt,t))i.mutable=!0,u=bo;else{_=!0,u=So,ve();return}break}case So:{Oe(c,o,e,l),u=Hc;break}case Hc:{if(Oe(c,o,e,l),o[e]===pe){let{procedure:t,stack:s,statements:n}=a;u=zc;let r=Object.seal({type:Ha,expression:null});a=Object.seal({stack:s,procedure:t,drop:r,value:null,statements:n}),h(),U=ge,u=cn,Le();return}if(o[e]===st){u=So;return}u=bo,Le();break}case zc:{let{statements:t,drop:s,value:n}=a;s.expression=n,t.push(s),y();break}case bo:{let{stack:t}=a,s=o.subarray(e,e+l|0),n=f(s),r=t.get(n);if(t.has(n)&&!r.mutable&&(De=!0),Z(tr,s)){_=!0,u=Gc;return}let{target:i}=a;i.name=n,u=Oo;break}case Oo:{let t=o[e],{procedure:s,stack:n,statements:r,target:i}=a;if(t===He){let R=a.declarationValue,F={type:yt,target:{type:$a,array:{type:xe,name:R.target.name},index:null},source:null};a=Object.seal({declarationValue:F,procedure:s,stack:n,statements:r}),_=!0,u=To;return}if(t===st){let R=a.declarationValue,F=[],w=R.target;a=Object.seal({declarationValue:{type:yt,target:{type:dt,value:w,trail:F},source:null},procedure:s,stack:n,statements:r}),h(),a=Object.seal({stack:n,trail:F,value:w}),u=Ao;return}if(t===ce){_=!0,u=Cc;return}if(t===le){let{declarationValue:R}=a;y(),a.declarationValue.target=R.target,_=!0;return}if(t===et){let R=a.declarationValue?.target&&ye(a.declarationValue?.target);if(R&&R!==ft&&!n.get(R)){b=T|0,O=c-d|0,vs(R);return}u=an;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=As;Y(`${f(He)} or ${f(le)} or ${f(et)} or ${f(et)} or ${f(st)}`,m,N);break}case Gc:{a.target.type=Dt,a.target.trail=[],delete a.target.name,u=Io;break}case Io:{if(o[e]===st){u=$c;return}u=No,_=!0;break}case $c:{let t=o.subarray(e,e+l|0),s=f(t);a.target.trail.push(s),u=Kc;break}case Kc:{if(_=!0,o[e]===st){u=Io;return}if(o[e]==He){u=To;let t=Object.seal({type:$a,array:a.target,index:null});a.declarationValue.target=t;return}u=No;break}case No:{u=Rs,_=!0;break}case To:{if(o[e]===He){u=Uc;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=xn;Y(f(He),n,r);break}case Uc:{let{stack:t,procedure:s}=a;u=Bc,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Bc:{if(o[e]===Ft){let{value:i}=a;y();let E=ue(i);if(E.data.mutable&&i.type!==dt?a.declarationValue.target.index=Object.seal({type:It,link:i}):a.declarationValue.target.index=i,!E||![Je,\"U32\",\"I16\",\"U16\",\"U8\",\"I8\"].includes(E.data.name)){b=T|0,O=c-d|0,re(\"Invalid index. Array index must be a valid I32 variable\");return}u=Rs;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=mr;Y(f(Ft),n,r);break}case Rc:{let{procedure:t,stack:s,statements:n}=a,r=Object.seal({type:wn,link:null}),i=Object.seal({type:yt,target:r,source:null});a=Object.freeze({declarationValue:i,procedure:t,stack:s,statements:n}),u=Xc;break}case Xc:{if(o[e]===pe){u=kc;return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=ot;Y(f(pe),s,n);break}case kc:{let{stack:t,procedure:s}=a;u=Wc,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Wc:{if(o[e]===le){let{value:r}=a;y(),a.declarationValue.target.link=r,u=Oo;return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=We;Y(f(le),s,n);break}case wc:{if(o[e]!==st){y(),_=!0;return}u=Ao;break}case Ao:{let{stack:t,value:s,trail:n}=a,r=o.subarray(e,e+l|0),i=f(r),E,m,N=!1;if(s.type===xe){let{name:R}=s;E=t.get(R)}if(E){let{name:R,path:F}=E,w=`${F}.${R}`,j=p.get(w);j.type===Me&&(m=j)}if(m){let{description:R}=m,{members:F}=R;for(let w of F)if(w.name===i){N=!0;break}if(!N){b=T|0,O=c-d|0,Ot(i,s.name);return}}if(s.value===ft||s.link===ft){if(!t.get(i)){b=T|0,O=c-d|0,Ot(i,`${ft}(current object in definition)`);return}N=!0}if(!N){b=T|0,O=c-d|0,Ot(i,s.name);return}n.push(i),u=wc;break}case Cc:{let t=o.subarray(e,e+l|0),s=f(t);if(o[e]===ce){let{target:i,stack:E}=a,{name:m}=i;if(E.has(m)){b=T|0,O=c-d|0,Jt(m);return}if(o[e+1]===et&&l>1){u=gc,_=!0;return}u=vc,h(),a=Object.seal({data:null}),h(),U=mt,u=ct;return}b=T|0,O=c-d|0;let r=pr;Y(`${f(ce)} or ${f([ce,et])}`,s,r);break}case vc:{let{data:t}=a;y();let{declarationValue:s,procedure:n,stack:r,statements:i}=a,{target:E}=s,{description:m}=n,{locals:N}=m,R,F;if(t.type!==Ce)E.mutable?R=Object.freeze({name:E.name,data:{...t,mutable:E.mutable}}):R=Object.freeze({name:E.name,data:t}),t.type===Fe|t.layout===Fe&&(F=!0);else{let w=Ue(t.name);if(w){let j=Object.seal({type:Ce,name:w.name,path:w.path});E.mutable?R=Object.freeze({name:E.name,data:{...j,mutable:E.mutable}}):R=Object.freeze({name:E.name,data:j})}else if(t.name===Fe)F=!0;else{b=T|0,O=c-d|0,Ct(name);return}}if(F){let w;E.mutable?(w={name:E.name,mutable:E.mutable,data:R.data},delete E.mutable):w=Object.seal({name:E.name,data:R.data}),r.set(E.name,w.data),N.push(w),a=Object.seal({declarationValue:s,procedure:n,stack:r,statements:i,inferenceValue:w}),u=Rs,_=!0;return}r.set(E.name,R.data),N.push(R),u=Rs,_=!0;break}case gc:{let{declarationValue:t,procedure:s,stack:n,statements:r}=a,{target:i}=t,{description:E}=s,{locals:m}=E,N;i.mutable?(N={name:i.name,mutable:i.mutable,data:null},delete i.mutable):N=Object.seal({name:i.name,data:null}),n.set(i.name,N.data),m.push(N),a=Object.seal({declarationValue:t,procedure:s,stack:n,statements:r,inferenceValue:N}),u=an;break}case Rs:{let t=o.subarray(e,e+l|0);if(Z(t,Gs)){u=an;return}b=T|0,O=c-d|0;let s=f(t),n=As;Y(f(Gs),s,n);break}case an:{let{procedure:t,stack:s,target:n}=a,r=o[e];if(rt(c,o,e,l)&&r!==pe&&r!==He){let i=o.subarray(e,e+l|0),E=f(i);b=T|0,O=c-d|0,qe(E);return}u=yc,h(),a=Object.seal({procedure:t,stack:s,value:null}),h(),U=Ne,u=Se,_=!0;break}case yc:{if(o[e]===ee){let{value:i}=a;y();let{declarationValue:E,statements:m,stack:N}=a;if(a.inferenceValue){let x=function(Q){let te;switch(Q.type){case xe:{let oe=N.get(Q.name);oe.type===Ce?te=oe:oe.type===Ie?(te={type:Ce,name:oe.name,path:oe.path},Q.mutable&&(te.mutable=Q.mutable),Q.contains&&(te.contains=Q.contains)):(oe.type===Fe||oe.type===\"Link\")&&(te=oe);let{moved:Tt,...Qe}=te;te=Qe;break}case es:{te={type:Ce,name:tt,path:me};break}case Ie:{te={type:Ce,name:Q.name,path:Q.path},Q.layout===Fe&&(te.type=Fe,te.quantity=Q.quantity,Ue(te.name)),Q.contains&&(te.contains=Q.contains);break}case Vn:{te={type:Ce,name:Je,path:me};break}case ws:{te={type:Q.type,name:Q.data.name,path:Q.data.path},Q.data.contains&&(te.contains=Q.data.contains);break}case gn:{te=x(Q.value);break}case $t:{if(Q.name===Vs)return Ue(ks),{type:Ce,name:ks,path:me};let oe=Qe=>D.find(At=>At.type===lt&&At.name===Qe.name)?.description.outputs[0]?.data,Tt=(Qe,At)=>{let at;for(let vt=0;At&&vt<=Qe.name.length-2;vt++)At=N.get(Qe.name[vt]),At&&(at=S.find(Zt=>Zt.type===Me&&Zt.name===At.name));return at?.description.members?.find(vt=>vt.name===Qe.name[Qe.name.length-1])?.description.outputs[0]?.data};if(typeof Q.name===Me&&Q.name[0]===Dt){let Qe=z(0);Qe&&(te=q(Qe,Q.name.slice(1)).description?.outputs[0]?.data)}else if(Q.path!==me){if(te=oe(Q),typeof Q.name==\"object\"){let Qe=N.get(Q.name[0]);te=Tt(Q,Qe)}if(!te){b=T|0,O=c-d|0,re(`TypeError: can not infer type from a function '${Q.name}' as it does not have a return type.`);return}}else if(lr.has(Q.name))te={type:Ce,name:Kt,path:me},Ue(te.name);else{let Qe=Q.inputs.map(at=>ue(at)),At=D.find(at=>at.description&&Array.isArray(at.description.inputs)?at.description.inputs.length!==Qe.length||at.name!=Q.name?!1:at.description.inputs.every((vt,Zt)=>vt.data.name===Qe[Zt].data.name):!1);if(At){let{description:at}=At,{outputs:vt}=at,Zt=vt[0],{data:of}=Zt,{name:af,path:rf}=of;te={type:Ce,name:af,path:rf}}else{b=T|0,O=c-d|0,ma(Qe.map(at=>at.data.name),Q.name);return}}break}case Mt:{te={...x(Q.value),type:Yn},Q.unsafe&&(te.unsafe=Q.unsafe),Q.smart&&(te.smart=Q.smart);break}case It:{let oe=N.get(Q.link);te={type:Ce,name:oe.name,path:oe.path},oe.contains&&(te.contains=oe.contains);break}case Ys:{let oe=ue(Q.array).data;te={type:Ce,name:oe.name,path:oe.path},oe.contains&&(te.contains=oe.contains);break}case dt:return ue(Q)?.data;case Me:return{type:Ce,name:Q.name,path:Q.path};default:{b=T|0,O=c-d|0,re(\"Error: unhandled inference type: \",Q.type);return}}return te},{inferenceValue:se}=a;se.data=x(i),se.mutable&&(se.data.mutable=se.mutable,delete se.mutable),N.set(se.name,se.data)}let{target:R}=E,F=ye(R),w=ye(i);if(N.has(w)){let se=S.find(x=>x.name===N.get(w).name&&x.type===Me);se&&!se.copy&&(b=T|0,O=c-d|0,$l(w))}F&&F!==ft&&(se=>{if(!N.get(se)?.mutable&&De){b=T|0,O=c-d|0,Gl(se);return}})(F),E.source=i;let H=ue(R),$=ue(i),ie=(se,x)=>{if(se===x)return!0;if(typeof se!=\"object\"||se===null||typeof x!=\"object\"||x===null)return!1;if(se.type===\"local\"&&x.type===\"local\")return se.name===x.name;let Q=Object.keys(se).filter(oe=>oe!==\"mutable\"),te=Object.keys(x).filter(oe=>oe!==\"mutable\");if(Q.length!==te.length)return!1;for(let oe of Q)if(!te.includes(oe)||!ie(se[oe],x[oe]))return!1;return!0},Ae=(se,x)=>se.some(Q=>ie(Q,x));if(H&&$){H.data?.mutable&&H.data.path===me&&H.data.type!==Fe&&R.type!=dt&&(Ae(Wt,R)||a.procedure.description.inputs.some(x=>x.name===H.name||x.name===ye(R))?E.target=Object.seal({type:wn,link:R}):$.data.path===me&&$.data.type!==Fe&&(E.source=Object.seal({type:Mt,value:i}),Wt.push(R))),$.data?.mutable&&$.data.path===me&&$.data.type!==Fe&&i.type!==dt&&(E.source=Object.seal({type:It,link:E.source}));let se=(x,Q)=>x.slice(1)===x.slice(1)||x.charAt(0)===x.charAt(0)||(x===\"FP64\"||x===\"FP32\"||x===\"I64\"||x===\"U64\"||x===Je||x===\"U32\"||x===\"I16\"||x===\"U16\"||x===\"I8\"||x===\"U8\")&&Q===Je||x===\"FP64\"&&Q==\"FP32\";if(H.data.name!==$.data.name&&!(H.data.type===$.data.name||H.data.name===$.data.type)&&!($.data.type===Ie&&se(H.data.name,$.data.name))){b=T|0,O=c-d|0,ba(H.data.name,$.data.name);return}}m.push(E),y();return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=gp;Y(f(ee),n,r);break}case Jc:{let{stack:t,procedure:s}=a,n=Object.seal({type:W_,unsafe:!0,value:null}),r=o.subarray(e,e+l|0);Z(r,ar)&&(n.unsafe=!1),h(),a=Object.seal({free:n,stack:t,procedure:s}),u=Zc;break}case Zc:{if(o[e]===pe){let{stack:i,procedure:E}=a;u=qc,h(),a={stack:i,procedure:E,value:null},h(),u=Se,U=Ne;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case qc:{let{value:t,stack:s}=a;y();let{free:n}=a;n.value=Ve(t);let r=!0,{name:i,data:E}=ue(t,r);if(b=T|0,O=c-d|0,E.type!==Yn){re(`Variable '${i}' is not a link and cannot be freed. Only 'unsafe' links are freeable.`);return}if(E.unsafe!==n.unsafe){re(`Improper free method used for link '${i}'. Unsafe links are unsafely freed with 'free!!' while safe ones are freed with 'free'. Your link(${i}) is ${E.unsafe?\"un\":\"\"}safe.`);return}let m=s.get(i);m&&s.set(i,{...m,freed:!0}),u=Qc,_=!0;break}case Qc:{if(o[e]===le){let{free:i}=a;y();let{statements:E}=a;E.push(i),u=xc;break}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=We;Y(f(le),n,r);break}case xc:{y();break}}},xl=(c,o,e,l)=>{switch(u){case ct:{let t=o.subarray(e,e+l|0),s=f(t);if(u=Du,o[e]===He){h(),_=!0,u=el,U=rs;return}if(rt(c,o,e,l)&&!ht.includes(s)){b=T|0,O=c-d|0,qe(s);return}if(Z(zt,t)){h(),a={data:null},_=!0,u=_n,U=rs;return}if(Z(ns,t)){h(),a={data:null},_=!0,u=_n,U=rs;return}if(Z($n,t)){h(),a={data:null},_=!0,u=rl,U=rs;return}let n=Ue(s);if(n){n.type===Ut?a.data=Object.seal({type:Ce,name:s,path:n.path}):a.data=Object.seal({type:Ce,name:n.name,path:n.path}),a.mutable&&(a.data=Object.seal({...a.data,type:f(ns),unsafe:!0,mutable:a.mutable}));return}b=T|0,O=c-d|0,vs(s),y();break}case Du:{let t=o.subarray(e,e+l|0);if(o[e]===$e){_=!0,u=Mu;return}y(),_=!0;break}case Mu:{if(o[e]===$e){u=Fu;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ds;Y(f($e),n,r);break}case Fu:{let t=o.subarray(e,e+l|0),s=f(t),n=Ue(s);if(n){let{data:i}=a,{unsafe:E,type:m,smart:N}=i,R=fe(m);if(Z(R,zt))a.data=Object.seal({type:m.replace(/!!$/,\"\"),name:n.name,path:n.path,segment:it,unsafe:E});else if(Z(R,ns))a.data=Object.seal({type:m,name:n.name,path:n.path,segment:it});else if(Z(R,Hs))a.data=Object.seal({type:m,name:n.name,path:n.path,segment:it,smart:N});else{if(S.find(w=>w.type===Me&&w.name===i.name)){u=ju,h(),a=[],h(),a={data:null},h(),_=!0,u=ct;return}a.data=Object.seal({type:m,name:n.name,path:n.path})}a.mutable&&(a.data=Object.seal({...a.data,mutable:a.mutable}));return}let r=o[e];if(r===Be)return;if(r===ze){_=!0,u=vo;return}a.data.segment!==void 0&&(a.data.segment=s),u=vo;break}case ju:{let t=o[e],{data:s}=a;if(y(),a.push(s),t===Be){h(),a={data:null},h(),u=ct;return}if(t===ze){let E=a;y();let m=S.find(R=>R.type===Me&&R.name===a.data.name);if(!(m.description?.generics?.length===E.length)){b=T|0,O=c-d|0,re(`Generic object '${name}' was provided with fewer or more than expect number of types. Expected: ${m.description.generics.length}. Got: ${E.length}`);return}a.data.name=B(a.data.name,E),y();return}b=T|0,O=c-d|0;let n=o.subarray(e,e+l|0),r=f(n),i=as;Y(`${f(Be)} or ${f(ze)}`,r,i);break}case vo:{if(o[e]===ze){y();return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=as;Y(f(ze),n,r);break}}},ef=(c,o,e,l)=>{switch(u){case el:{if(o[e]===He){let i=Object.seal({type:Fe,name:null,details:null,path:me,quantity:{size:null,capacity:null}});a=Object.seal({...a,type:i}),u=tl,h(),a={data:null},h(),U=mt,u=ct;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ds;Y(f(He),n,r);break}case tl:{let{data:t}=a;y(),a.type.name=t.name,a.type.path=t.path,a.type.details=t,_=!0,u=sl;break}case sl:{if(o[e]!==Ft){let s=o.subarray(e,e+l|0);b=T|0,O=c-d|0;let n=f(s),r=as;Y(f(Ft),n,r);return}let{type:t}=a;y(),a.data=t;return}case _n:{let t=o.subarray(e,e+l|0),n={type:f(t).replace(/!!$/,\"\"),path:me,details:null};Z(t,zt)&&(n.unsafe=!0),n=Object.seal({...n,name:null,segment:null});let{declarationValue:r,stack:i,procedure:E}=a;a=Object.seal({declarationValue:r,stack:i,procedure:E,type:n}),u=nl;break}case nl:{let t=o.subarray(e,e+l|0);if(o[e]===$e){u=ol,h(),a={data:null},h(),U=mt,u=ct;return}b=T|0,O=c-d|0;let s=f(t),n=ds;Y(f($e),s,n);break}case ol:{let{data:t}=a;y(),Ue(t.name),t.type!==Ce?a.type.name=t.type:a.type.name=t.name,a.type.path=t.path,a.type.details=t,_=!0,u=pn;break}case Kp:{let t=o.subarray(e,e+l|0);if(o[e]===Be){u=al;return}if(o[e]===ze){u=pn,_=!0;return}b=T|0,O=c-d|0;let s=f(t),n=We;Y(`${Be} or ${f(ze)}`,s,n);break}case al:{if(rt(c,o,e,l)){let n=o.subarray(e,e+l|0),r=f(n);b=T|0,O=c-d|0,qe(r);return}let t=o.subarray(e,e+l|0),s=f(t);a.type.segment=s,u=pn;break}case pn:{let t=o.subarray(e,e+l|0);if(o[e]===ze){let{type:r}=a;y(),a.data=r;return}b=T|0,O=c-d|0;let s=f(t),n=as;Y(f(ze),s,n);break}case rl:{let t=o.subarray(e,e+l|0),s=f(t),n=Object.seal({type:s,path:null,name:null,details:null}),{declarationValue:r,stack:i,procedure:E}=a;a=Object.seal({type:n}),u=cl;break}case cl:{let t=o.subarray(e,e+l|0);if(o[e]===$e){u=ul,h(),a={data:null},h(),U=mt,u=ct;return}b=T|0,O=c-d|0;let s=f(t),n=ds;Y(f($e),s,n);break}case ul:{let{data:t}=a;y(),Ue(t.name),t.type!==Ce?a.type.name=t.type:a.type.name=t.name,a.type.path=t.path,a.type.details=t,_=!0,u=il;break}case il:{let t=o.subarray(e,e+l|0);if(o[e]===ze){let{type:r}=a;y(),a.data=r;return}b=T|0,O=c-d|0;let s=f(t),n=as;Y(f(ze),s,n);break}}},tf=(c,o,e,l)=>{switch(u){case rn:{let t=Object.seal({type:Mt,unsafe:null,smart:null,value:null}),s=o.subarray(e,e+l|0);Z(s,zt)&&(t.unsafe=!0),Z(s,Hs)&&(t.smart=!0),a.value=t,u=Ai;break}case Ai:{if(o[e]===pe){u=Yu;return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=ot;Y(f(pe),s,n);break}case Yu:{let{stack:t,procedure:s}=a,n=o.subarray(e,e+l|0),r=f(n),i=t.get(r);i&&i.moved&&(b=T|0,O=c-d|0,re(`Moved variable used as value. Variable '${r}' was used while having been moved before.`)),u=di,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case di:{if(o[e]===le){let{value:r}=a;y(),a.value.value=Ve(r),y();return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=ot;Y(f(le),s,n);break}case wu:{let t=Object.seal({type:It,link:null});a.value=t,u=Ii;break}case Ii:{if(o[e]===pe){u=gu;return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=ot;Y(f(pe),s,n);break}case gu:{let{stack:t,procedure:s}=a,n=o.subarray(e,e+l|0),r=f(n),i=t.get(r);i&&i.moved&&(b=T|0,O=c-d|0,re(`Moved variable used as value. Variable '${r}' was used while having been moved before.`)),u=Ni,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Ni:{if(o[e]===le){let{value:r}=a;y(),a.value.link=Ve(r),y();return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=We;Y(f(le),s,n);break}case Zu:{let t=Object.seal({type:Dt,trail:[]});a.value=t,u=wo;break}case wo:{if(o[e]===st){u=qu;return}u=go,_=!0;break}case qu:{let t=o.subarray(e,e+l|0),s=f(t);a.value.trail.push(s),u=Qu;break}case Qu:{if(o[e]===st){u=wo,_=!0;return}u=go,_=!0;break}case go:{u=Et,_=!0;break}case $u:{let t=o.subarray(e,e+l|0),s=f(t),n=S.find(N=>N.name===s);if(!n){b=T|0,O=c-d|0,vs(s);return}let{description:r}=n,{members:i}=r,E=i.some(N=>N.name===\"constructor\"&&N.type===lt),m=Object.seal({type:Ie,explicitConstructor:E,name:s,literal:[],path:n.path});a.value=m,u=li;break}case li:{let t=o[e];if(t===pe){u=Bo,_=!0;return}if(t===$e){u=fi;return}break}case fi:{h(),a=[],u=Ei,_=!0;break}case Ei:{u=_i,h(),a={data:null},h(),U=mt,u=ct,_=!0;break}case _i:{let t=o[e],{data:s}=a;if(y(),a.push(s),t===Be){u=fn;return}if(t===ze){let n=a;y();let{value:r}=a,{name:i}=r,E=S.find(m=>m.type===Me&&m.name===i);if(E){if(!(E.description.generics.length===n.length)){b=T|0,O=c-d|0,re(`Generic procedure '${i}' was provided with fewer or more than expect number of types. Expected: ${genericProcedure.description.generics.length}. Got: ${n.length}`);return}let N=B(E.name,n);if(!S.some(R=>R.name===N)){let R=V(E,n);R.name=N,R.description.generics=[],S.push(R),P(R)}r.name=N}u=Bo;break}}case Bo:{let{value:t}=a,{explicitConstructor:s,...n}=t;if(t=Object.seal(n),o[e]===pe){if(s){u=Si;return}u=Do;return}b=T|0,O=c-d|0;let i=o.subarray(e,e+l|0),E=f(i),m=ot;Y(f(pe),E,m);break}case Do:{if(o[e]===ee)return;if(o[e]===Be){u=Mo;return}u=Mo,_=!0;break}case Mo:{if(o[e]===ee)return;let t=o.subarray(e,e+l|0),s=f(t),{stack:n,procedure:r}=a;h();let i=Object.seal({name:s,value:null});a={procedure:r,stack:n,prop:i},u=Ku;break}case Ku:{let{stack:t,procedure:s}=a;if(o[e]===et){u=Hu,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne;return}b=T|0,O=c-d|0;let r=o.subarray(e,e+l|0),i=f(r),E=As;Y(f(et),i,E);break}case Hu:{let{value:t}=a;y();let{prop:s}=a;s.value=Ve(t),y();let n=new Set(Fe,tt,Me);if(t.type===Ie&&!n.has(t.name)&&t.path===me){let{description:i}=S.find(m=>m.name===a.value.name),E=i.members.find(m=>m.name===s.name);s.value={...s.value,name:E.data.name}}if(a.value.literal.push(s),o[e]===Be){u=Do;return}_=!0,u=zu;break}case zu:{if(o[e]===ee){u=Fo;return}_=!0,u=Fo;break}case Fo:{let t=o[e];if(b=T|0,O=c-d|0,t===le){let j=function($,ie){let Ae=new Set($.map(se=>se.name));for(let se of ie)if(!Ae.has(se.name))return se.name;return null},i=$=>{let ie=new Set;for(let Ae of $){if(ie.has(Ae.name))return Ae.name;ie.add(Ae.name)}return!1},{value:E}=a,{literal:m}=E,N=S.find($=>$.name===E.name&&$.type===Me),R=i(m);if(R){re(`Propery ${R} of ${N.name} was initialized multiple times during object declaration. Please remove unnecessary value.`);return}let F=N.description.members.filter($=>$.type!==lt),w=N.description.members.filter($=>$.type!==lt&&$.value===void 0),H=j(m,w);if(H){re(`Property '${H}' of '${N.name}' is missing in object initialization whilst not having a default value in definition. Please give a value in initialization or provide a default value in type definition`);return}for(let $ of m){let ie=ue($.value),Ae=m.indexOf($),se=F.find(x=>x.name===$.name);se||re(`Invalid member name. Name ${$.name} does not exist on object ${N.name}`),ie.data.type!==Ie&&ie.data.name!==se.data.name&&re(`Type mismatch in input for Object ${N.name}. At index ${Ae}, expected ${se.data.name} but received ${ie.data.name}.`)}y();return}let s=o.subarray(e,e+l|0),n=f(s),r=We;Y(f(le),n,r);break}case Si:{let i=function(m){console.log(m);let N=m.data.name;if(N===Yn)return{type:Mt,value:i({data:m.data.details})};if(N===ws)return{type:ws,layout:f(Kn),value:i({data:m.data.details})};let R=S.find(F=>F.name===N);if(R.type===Me){let F=[],{members:w}=R.description;console.log(r,w);for(let j of w)if(j.data){let H=`${j.data.path}.${j.data.name}`;if(r.has(H))console.log(\"aslreadyh exisistng \\u{1F923}\\u{1F979}\\u{1F972}\\u{1F480}\"),F.push({name:j.name,value:r.get(H)});else{let $=i(j);F.push({name:j.name,value:$}),r.set(H,$)}}return{type:Ie,name:N,literal:F,path:m.data.path}}else{if(m.data.type===Fe)return{type:Ie,literal:[],name:N,layout:Fe,path:m.data.path};if(m.data.type===tt){let F=parseInt(m.data.length,10);return{type:Ie,literal:Array(F).fill(it),name:N,path:m.data.path}}else return{type:Ie,literal:Hp,name:N,path:m.data.path}}},{value:t}=a,{literal:s,name:n}=t,r=new Map,E=S.find(m=>m.name===n);if(E){let{description:m}=E,{members:N}=m;for(let se of N)se.data&&s.push({name:se.name,value:i(se)});y(),y();let{stack:R,procedure:F,statements:w,declarationValue:j,inferenceValue:H}=a,$=j?.target.name;if(!$){$=\"literalObjectConstructor\";let se=ue(t),{literal:x,...Q}=se.data,{locals:te}=F.description;te.push({name:$,data:Q}),R.set($,Q)}H&&(H.data={type:Ce,name:n,path:E.path},H.mutable&&(H.data.mutable=H.mutable),$&&a.stack.set($,H.data)),j&&(j.source=t,w.push(j)),h();let ie=Object.seal({type:$t,name:[$,gs],path:E.path,inputs:[]}),Ae=Object.seal({type:Ha,expression:ie});a={stack:R,procedure:F,drop:Ae,value:ie},u=Wo,U=ge,_=!0;return}break}case Wo:{let{stack:t,procedure:s}=a,n=o[e];if(n===ee)return;if(n===le){u=Jo,_=!0;return}u=hi,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case hi:{let{value:t}=a;y();let{value:s,stack:n,procedure:r}=a,{inputs:i}=s;i.push(Ve(t)),u=xi,_=!0;break}case xi:{let t=o[e];if(t===ee)return;if(t===le){u=Jo,_=!0;return}if(t===Be){u=Wo;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=Er;Y(`${f(Be)} or ${f(le)}`,n,r);break}case Jo:{let{value:t,stack:s}=a,n=s.get(t?.name[0]);if(n){let r=S.find(N=>N.name===n.name),i=r.description.members.find(N=>N.name===gs),E=t.inputs.filter(N=>N.type===Ie);for(let N of E){let R=t.inputs.indexOf(N);R>=0&&t.inputs[R]&&(t.inputs[R]={...t.inputs[R],name:i.description.inputs[R]?.data?.name||N.name,path:i.description.inputs[R]?.data?.path||N.path})}let m=t.inputs.map(N=>ue(N))||[];if(i.description.inputs.length!==m.length){b=T|0,O=c-d|0,re(`Mismatching number of parameters passed to constructor of object '${r.name}'. Expected: ${i.description.inputs.length}, Got: ${m.length}`);return}for(let N of i.description.inputs){let R=i.description.inputs.indexOf(N);if(N.data.name!==m[R].data.name){b=T|0,O=c-d|0,re(`Input type mismatch on index '${R+1}'. '${r.name}' expected ${N.data.name}, but was provided with a rather ${m[R].data.name}`);return}}}u=Pi;break}case Pi:{if(o[e]===ee){let{drop:N}=a;y();let{statements:R}=a;R||y(),R&&R.push(N),y();return}let{value:s,stack:n,procedure:r}=a,i=y();if(u===Zo){h(),a={stack:n,procedure:r,value:s},_=!0;return}g.push(i);let{drop:E}=a;y();let{statements:m}=a;m||y(),m&&m.push(E),y(),f(ee);return}case yo:{let{stack:t}=a,s=o[e],n=o.subarray(e,e+l|0),r=f(n);if(t&&t.has(r)&&t.get(r)?.type&&!Vt){let F=t.get(r);if(F&&(F.moved&&(b=T|0,O=c-d|0,re(`Moved variable used as value. Variable '${r}' was used while having been moved before.`)),F.freed)){b=T|0,O=c-d|0,re(`Attempted to use '${r}', which has been freed. Ensure links are valid before use.`);return}let w=Object.freeze({type:xe,name:r});a.value=w,u=Et;return}let i=F=>{let w=g[F];if(w.item.target){let j=w.item.target,H=m.item.stack.get(j.name);if(H)return H.name}else return w.item.value?.type===\"expression\"?i(F-1):null},E=g.length,m=g[E-2],N;if(m.item.target){let F=m.item.target;if(F.name||F.trail?.length===1){let w=m.item.stack.get(F.name||F.trail[0]);w&&(N=F.name?w.name:w.data?.name)}if(F.trail?.length>1){let w=JSON.parse(JSON.stringify(F.trail)),j=m.item.stack.get(F.trail[0]),H=S.find(ie=>ie.name===j.data.name&&ie.path===j.data.path),$=1;for(let ie=1;ie<w.length;ie++)j=H.description.members.find(Ae=>Ae.name===w[ie]),ie<w.length-1&&(H=S.find(Ae=>Ae.name===j.data.name&&Ae.path===j.data.path));N=j.data.name}}else m.item.value?.type===\"expression\"&&(N=i(E-4));if(Ds(c,o,e,l)&&!Vt){let F=r.replaceAll(\"_\",\"\"),w=Rt(F),j=Object.freeze({type:Ie,literal:F,name:N||w,path:me});if(!w){b=T|0,O=c-d|0;let H=o.subarray(e,e+l|0),$=f(H);Y(\"value\",$,Is)}Ue(j.name),a.value=j,u=Et;return}if(bn(r)&&!Vt){let F=Object.freeze({type:Ie,literal:r,name:Kt,path:me});a.value=F,Ue(F.name),u=Et;return}if(Wn.includes(s)){u=Yi,_=!0;return}let R=f(n);if(Ip.includes(s)){if(Vt)if(Xn.includes(s)){if(Vt=!1,u=Et,a.value.literal.length>1){b=T|0,O=c-d|0,re(\"Type Mismatch: Use single quotes for a Char (one character) in Flogram. For Strings, use double quotes or ensure there's only one character within single quotes.\");return}}else b=T|0,O=c-d|0,Y(`${f(Xn[0])} or ${f(Xn[1])}`,R,[]);else!Vt&&zn.includes(s)?Vt=!0:(b=T|0,O=c-d|0,Y(`${f(zn[0])} or ${f(zn[1])}`,R,[]));return}if(Vt){let F=Object.freeze({type:Ie,literal:r,name:Os,path:me});Ue(F.name),a.value=F;return}if(o[e]===He){u=jo,_=!0;return}b=T|0,O=c-d|0,vs(r),y();break}case Yi:{let t=o[e];if(Wn.includes(t)){u=Qo;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(ls),n,r);break}case Qo:{let t=o.subarray(e,e+l|0),s=f(t);if(l===0)return;if(u=gi,o[e]===$e){_=!0;return}let n=Object.seal({type:Ie,literal:s,name:tt,path:me});Jn.includes(o[e])&&(n.literal=\"\",_=!0),a.value&&a.value.type===es?a.value.values.push(n):a.value=n,Ue(n.name),Ue(Je);break}case gi:{let{stack:t,procedure:s}=a;if(Jn.includes(o[e])){if(a.value.type===es&&Jn.includes(o[e+1])){u=wi;return}y();return}else if(o[e]===$e){if(e>0&&o[e-1]===Ap){u=xo,h();let m=Object.freeze({name:tt,literal:\"{\",type:Ie,path:me});a=Object.seal({procedure:s,stack:t,value:m,omitLast:!0}),_=!0;return}u=xo,h(),a=Object.seal({procedure:s,stack:t,value:null}),h(),U=Ne,u=Se;return}console.log(\"what did we find here??!!!\"),b=T|0,O=c-d|0;let n=o.subarray(e,e+l|0),r=f(n),i=ot;if(Z(n,Ht)){b-=1;let E=f(ee);Y(f(ls),E,i);return}Y(`'${f(ze)}' or '${f(ls)}'`,r,i);break}case xo:{let t=o.subarray(e,e+l|0),s=f(t),{value:n,omitLast:r}=a;if(y(),!a.value||a.value.type!==es){let E=Object.seal({type:es,values:[]});a.value&&E.values.push(a.value),a.value=E}let i=a.value.values.length;if(r&&i>0&&a.value.values[i-1].type===Ie){let E=a.value.values[i-1],m=E.literal,N={...E,literal:m.slice(0,-1)};a.value.values.pop(),a.value.values.push(N)}a.value.values.push(n),u=Qo;break}case wi:{y();break}case qo:{h(),u=Li,a={data:null},h(),U=mt,u=ct,_=!0;break}case Li:{let t=o[e],{data:s}=a;y();let{stack:n,procedure:r}=a,i=Object.seal({type:Ie,literal:[],name:s.name,quantity:{size:null,capacity:null},layout:s.type,path:s.path});if(h(),a={stack:n,procedure:r,value:i},t===pe){u=Ri;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=ot;Y(f(pe),m,N);break}case Ri:{let t=o.subarray(e,e+l|0);if(Z(Qa,t)){u=ki;return}b=T|0,O=c-d|0;let s=f(t),n=eo;Y(f(Qa),s,n);break}case ki:{let t=o.subarray(e,e+l|0);if(Z(Gs,t)){u=Ci;return}b=T|0,O=c-d|0;let s=f(t),n=As;Y(f(Gs),s,n);break}case Ci:{let{procedure:t,stack:s}=a;if(rt(c,o,e,l)){let n=o.subarray(e,e+l|0),r=f(n);b=T|0,O=c-d|0,qe(r);return}u=yi,h(),a=Object.seal({procedure:t,stack:s,value:null}),h(),U=Ne,u=Se,_=!0;break}case yi:{let{value:t}=a;y(),a.value.length={capacity:t,size:t};let s=o[e];if(s===Be){let{stack:E,procedure:m}=a,N=[];h(),a={stack:E,procedure:m,value:N},u=Ui;return}if(s===le){let{value:E}=a;y(),a.value=E,u=Et;return}b=T|0,O=c-d|0;let n=o.subarray(e,e+t|0),r=f(n),i=We;Y(`${f(Be)} or ${f(le)}`,r,i);break}case Ui:{if(o[e]===He){u=Bi;return}b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=xn;Y(f(He),s,n);break}case Bi:{if(u=vi,o[e]===Ft)return;_=!0;break}case vi:{let t=o.subarray(e,e+l|0);if(o[e]===le){let{value:s}=a;y();let{value:n}=a;y(),n.literal=s,a.value=n,y();return}h(),u=En,_=!0;break}case jo:{if(o[e]===He){a.value=Object.seal({quantity:{size:null,capacity:null},data:[]}),u=Et,h(),u=En;return}break}case En:{let{stack:t,procedure:s}=a;if(o[e]===ee)return;if(u=Zo,h(),a={stack:t,procedure:s,value:null},o[e]===Ft){_=!0;break}h(),u=Se,U=Ne,_=!0;break}case Zo:{let t=o[e],{value:s}=a;if(y(),s!==null&&a.value.data.push(s),t===Be){u=En;return}if(t===ee){let{procedure:n,stack:r}=a;h(),a={procedure:n,stack:r,value:null},h(),u=$i;return}if(t===Ft){if(o[e+1]===pe){a.value.quantity.size=Object.seal({type:Ie,name:Je,literal:`${a.value.data.length}`,path:me}),u=zi;return}a.value.quantity.size=Object.seal({type:Ie,name:Je,literal:`${a.value.data.length}`,path:me}),a.value.quantity.capacity=Object.seal({type:Ie,name:Je,literal:`${Math.max(a.value.data.length*2,sp)}`,path:me}),u=ea,_=!0;return}break}case zi:{if(o[e]!==pe){b=T|0,O=c-d|0;let t=o.subarray(e,e+l|0),s=f(t),n=We;Y(`${f(le)}`,s,n);return}u=Xi;break}case Xi:{let t=o.subarray(e,e+l|0);if(!Z(t,ur)){b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=We;Y(`${f(ur)}`,n,r);return}u=Wi;break}case Wi:{let{stack:t,procedure:s}=a;if(o[e]!==et){b=T|0,O=c-d|0;let r=o.subarray(e,e+l|0),i=f(r);Y(et,i,[]);return}u=Ji,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne;break}case Ji:{if(o[e]!==le){b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=We;Y(`${f(le)}`,n,r);return}let{value:t}=a;y(),a.value.quantity.capacity=t,u=ea,_=!0;break}case ea:{let t=g.length,s=g[t-3],n=s.item.declarationValue?.target,r=s.item.stack.get(n?.name);if(s.situationSection!==qo){let i=!1,E;if(!r){if(a.value?.length>=1||a.value?.data?.length>=1)if(E=ue(a.value[0]||a.value?.data[0]),E){(E.data.layout===Fe||E.data.type===Fe||Array.isArray(E.data.literal))&&(i=!0);for(let N=1;N<a.value.length;N++){let R=ue(a.value[N]);if((R.data.layout===Fe||R.data.type===Fe||Array.isArray(R.data.literal))&&(i=!0),R.data.name!==E.data.name||R.data.path!==E.data.path){b=T|0,O=c-d|0,re(`Type mismatch in array initialization. Expected all items to be of type ${E.data.name} from ${E.data.path}, but found type ${R.data.name} from ${R.data.path} at position ${N}. Ensure all items in the array have the same type.`);return}}}else{b=T|0,O=c-d|0;let N=o.subarray(e,e+l|0),R=f(N);Y(\"Inferred Type\",R,Is);return}else E={data:{name:\"FP32\",path:\"Flogram\"}};Ue(E.data.name)}if(a.value.quantity.capacity.type===Ie&&a.value.data.length>parseInt(a.value.quantity.capacity.literal,10)){b=T|0,O=c-d|0,re(`ValueError: Too much data for an array. Array is defined to have a maximum of ${r.length} but value assigned has ${a.value.length}. Consider increasing size of the array or reducing the number of elements.`);return}let m=Object.freeze({type:Ie,name:r?.name||E.data.name,path:r?.path||E.data.path,literal:a.value.data,quantity:a.value.quantity,layout:Fe,contains:i?Fe:null});Ue(Je),a.value=m}y();return}case $i:{o[e]!==ee&&(y(),_=!0);break}case Et:{let t=o[e],s=o.subarray(e,e+l|0);if(Mn(s)){u=Ki,_=!0;return}if(t===st){let{procedure:n,stack:r,value:i}=a,E=[],m=Object.freeze({type:dt,value:i,trail:E});a.value=m,h(),a=Object.seal({stack:r,trail:E,value:i,procedure:n}),u=Uo;return}else if(t===He){let{value:n}=a,r=Object.seal({type:Ys,array:n,index:null});ue(n)?.data.name===tt&&Ue(Os),a.value=r,_=!0,u=Yo;return}else if(t===pe&&a.value.type===Dt){let n=z(0);if(n){let r=[a.value.type,...a.value.trail],i=q(n,a.value.trail);if(Te){a.value=Object.seal({type:$t,name:r,path:i.path,inputs:[]}),u=un,_=!0;return}}}y(),_=!0;break}case Vu:{if(o[e]!==st){let s=o.subarray(e,e+l|0),n=f(s);y(),_=!0;return}u=Uo;break}case Uo:{let{stack:t,value:s,trail:n}=a,r=o.subarray(e,e+l|0),i=f(r),E,m,N=!1,R=()=>{n.push(i),u=Vu};try{let j=ue(s);j&&(E=j.data)}catch(j){console.error(j)}let F=S.find(j=>j.name===E.name);if(F.type===Bt&&F.description.labels.find(H=>H.props.find($=>$.name===i))){R();return}let w=F?.description?.members?.find(j=>j.data&&S.find(H=>H.type===Me&&H.name===j.data.name&&H.path===j.data.path));if((s.type===xe||s.type===It||s.type===Mt||M(s))&&(!E||w)){let j=ye(s);if(n.length===0)E=t.get(j);else{let H=n.length-1,$=t.get(j),ie=S.find(te=>te.name===$.name),{description:Ae}=ie,{members:se}=Ae,x=se.find(te=>te.name===n[H]),{data:Q}=x;if(E=Q,Q.freed){b=T|0,O=c-d|0,re(`Attempted to use '${n.join(\".\")}', which has been freed. Ensure links are valid before use.`);return}}}if(E){let{name:j,path:H}=E,$=`${H}.${j}`,ie=p.get($);ie.type===Me&&(m=ie)}if(m){let{description:j}=m,{members:H}=j;for(let $ of H)if($.name===i){N=!0;break}if(!N){b=T|0,O=c-d|0,Ot(i,s.name);return}}if(s.value===ft||s.link===ft){if(!t.get(i)){b=T|0,O=c-d|0,Ot(i,`${ft}(current object in definition)`);return}N=!0}if(!N){b=T|0,O=c-d|0,Ot(i,s.name);return}R();break}case Xu:{let{stack:t}=a,s=o.subarray(e,e+l|0),n=f(s);if(t.has(n)){let r=Object.seal({type:Ys,array:{type:xe,name:n},index:null});a.value=r,ue(r.array)?.data.name===tt&&Ue(Os)}u=Yo;break}case Yo:{if(o[e]===He){u=Wu;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=xn;Y(f(He),n,r);break}case Wu:{let{stack:t,procedure:s}=a;u=Ju,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case Ju:{if(o[e]===Ft){let{value:i}=a;y();let E=ue(i);if(E.data.mutable&&i.type!==dt?a.value.index=Object.seal({type:It,link:i}):a.value.index=i,!E||![Je,\"U32\",\"I16\",\"U16\",\"U8\",\"I8\"].includes(E.data.name)){b=T|0,O=c-d|0,re(\"Invalid index. Array index must be a valid I32 variable\");return}u=Et;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=mr;Y(f(Ft),n,r);break}case cn:{let{stack:t}=a,s=o.subarray(e,e+l|0),n=f(s),r=D.find(E=>E.type===lt&&E.name===n),i=Object.seal({type:$t,name:n,path:r?.path||me,inputs:[]});if(a.value=i,t.has(n)){a.value.name=[n],u=Vo;return}else if(n===ft){a.value.name=[Dt],u=Vo;return}u=Xo;break}case Vo:{let t=o.subarray(e,e+l|0),s=f(t),n=o[e];if(n===st)return;if(n===pe){if(a.value.name[0]===Dt){let r=z(0);a.value.path=r.path+\".\"+r.name}u=Xo,_=!0;return}if(rt(c,o,e,l)){b=T|0,O=c-d|0,qe(s);return}a.value.name.push(s);break}case Xo:{let t=o[e];if(t===pe){u=un,_=!0;return}if(t===$e){u=ui;return}break}case un:{if(o[e]===pe){u=ln;return}break}case ui:{h(),a=[],u=fn,_=!0;break}case fn:{u=ii,h(),a={data:null},h(),U=mt,u=ct,_=!0;break}case ii:{let t=o[e],{data:s}=a;if(y(),a.push(s),t===Be){u=fn;return}if(t===ze){let n=a;y();let{value:r}=a,{name:i}=r,E=D.find(m=>m.type===lt&&m.name===i);if(E){if(!(E.description.generics.length===n.length)){b=T|0,O=c-d|0,re(`Generic procedure '${i}' was provided with fewer or more than expect number of types. Expected: ${E.description.generics.length}. Got: ${n.length}`);return}let N=B(E.name,n);if(!D.some(R=>R.name===N)){let R=V(E,n);R.name=N,R.description.generics=[],Re(R)}r.name=N}u=un;break}}case ln:{let t=o[e],s=o.subarray(e,e+l|0),{procedure:n,stack:r}=a;if(t===ee)return;if(Z(s,Xt)){h(),a=Object.seal({procedure:n,stack:r,mutable:!0});return}if(t===le){let i=a.value?.inputs?.map(H=>ue(H))||[],{value:E}=a,{name:m}=E;if(i.indexOf(void 0)!=-1){b=T|0,O=c-d|0,re(`Unkown/Invalid value type given as value to function '${m}' at index ${i.indexOf(void 0)}`);return}!i.find(H=>H?.data.path!==me)&&Gt[m]&&(E.path=me);let[R,...F]=i,w=i.find(H=>H?.data.type!=Ie)||R,j=Gt[m];if(j&&E.path===me){let H=j.find($=>$.description&&Array.isArray($.description.inputs)?$.description.inputs.length!==i.length?!1:$.description.inputs.every((ie,Ae)=>ie.data.name===i[Ae].data.name):!1);if(j){for(let $=0;$<i.length;$++)if(i[$].data.name!=w.data.name){if(i[$].data.type===Ie&&Ms(w.data.name,i[$].data.name)){expression.inputs[$]=Object.freeze({...expression.inputs[$],name:w.data.name}),i[$].data.name=w.data.name;continue}b=T|0,O=c-d|0,In(i.map(ie=>ie.data?.name)?.join(\", \"));return}}if(H)Re(H),_t.set(m,H);else if(i.length>=1){if(i.some($=>$.data.name!==R.data.name)){b=T|0,O=c-d|0,In(i.map($=>$.data?.name)?.join(\", \"));return}if(i[0]?.data.type===Ut){let $=j.find(Ae=>Ae.description.inputs.length===i.length&&i.length>0?Ae.description.inputs[0].data.name===mn:!0),ie=JSON.parse(JSON.stringify($).replace(new RegExp(mn,\"g\"),i[0].data.name));Re(ie),_t.set(m,ie)}else if(!ht.includes(R.data.name)||F.some($=>!ht.includes($.data.name))){let $=S.find(Ae=>Ae.name===R.data.name),ie=F.map(Ae=>S.find(se=>se.name===Ae.data.name));if($&&ie.every(Boolean)&&jt($,ie,j,m)){let Ae=S.find(x=>x.name===i[0].data.name&&x.path===i[0].data.path&&x.type===Me),se=x=>{let Q=S.find(oe=>oe.name===x.data.name&&oe.path===x.data.path),{members:te}=Q.description;te.forEach(oe=>{ht.includes(oe.data.name)?Re(j.find(Tt=>Tt.description.inputs[0].data.name===oe.data.name)):se(oe)})};if(Ae&&[\"==\",\"!=\"].includes(m)){let{members:x}=Ae.description;x.forEach(Q=>{ht.includes(Q.data.name)?Re(j.find(te=>te.description.inputs[0].data.name===Q.data.name)):se(Q)})}else if(!(i[0].data.name===tt&&[\"==\",\"!=\",\">\",\">=\",\"<\",\"<=\"].includes(m))){b=T|0,O=c-d|0,Ct(`${i.map(x=>x.data.name)?.join(\", \")} for function ${m}`);return}}}else{b=T|0,O=c-d|0,Ct(`${i.map($=>$.data.name)?.join(\", \")} for function ${m}`);return}}else{b=T|0,O=c-d|0,Ct(`${i.map($=>$.data.name)?.join(\", \")} for function ${m}`);return}}else if(m===J_||m===Vs){if(m===Vs&&i.length!==0){b=T|0,O=c-d|0,pa(0,i.length,m);return}}else if(typeof m===Me&&m[0]===Dt){let H=z(0);if(!H||!q(H,m.slice(1))){b=T|0,O=c-d|0,dn(m);return}}else{let H,$=D.find(se=>se.type===lt&&se.name===m);if(typeof m===Me&&a.stack.has(m[0])){let se=m[m.length-2]||m[0],x=a.stack.get(se);if(x){let Q=S.find(te=>te.type===Me&&te.name===x.name);Q&&(a.value.path=Q.path,H=Q.description.members.find(te=>te.type===lt&&te.name===m[m.length-1]))}}let ie=a.procedure.name===m?a.procedure:null,Ae=H||$||ie;if(Ae){let{description:se}=Ae,{inputs:x}=se,{value:Q}=a,{inputs:te}=Q;if(x.length!==te.length){b=T|0,O=c-d|0,pa(x.length,i.length,m);return}for(let oe=0;oe<x.length;oe++){let Tt=ue(te[oe]);if(Tt){if(x[oe].data.name!==Tt.data.name){b=T|0,O=c-d|0,re(`The procedure '${typeof m==\"object\"?m.join(\".\"):m}' received an input of incorrect type at position ${oe+1}. Expected: '${x[oe].data.name}', but received: '${Tt.data.name}'.`);return}if(x[oe].data.mutable&&!Tt.data.mutable&&!te[oe].mutable){b=T|0,O=c-d|0,re(`The procedure '${typeof m==\"object\"?m.join(\".\"):m}' received an immutable input at position ${oe+1} while it expects a mutable input. Expected: mutable '${x[oe].data.name}', received: immutable '${Tt.data.name}'.`);return}x[oe].data.mutable&&Tt.data.mutable}else{b=T|0,O=c-d|0,Ct(te[oe]);return}}}else{b=T|0,O=c-d|0,dn(m);return}}u=Et;return}if(rt(c,o,e,l)&&o[e]!=He&&o[e]!=pe){let i=o.subarray(e,e+l|0),E=f(i);b=T|0,O=c-d|0,qe(E);return}u=Gu,h(),a=Object.seal({procedure:n,stack:r,value:null}),h(),U=Ne,u=Se,_=!0;break}case Gu:{let{value:t}=a,s=!1;y(),a.mutable&&(s=a.mutable,y());let{value:n}=a,{inputs:r}=n,i=Object.seal({...t,mutable:s});n.path!==me||i.type===dt?r.push(i):r.push(Ve(i));let E=o[e];if(E===Be){u=ln;return}if(E===le){u=ln,_=!0;return}b=T|0,O=c-d|0;let m=o.subarray(e,e+l|0),N=f(m),R=We;Y(`${f(Be)} or ${f(le)}`,N,R);break}case Go:{let t=o.subarray(e,e+l|0),s=f(t),n=S.find(i=>i.type===Bt&&i.name===s);if(n){let i=Object.seal({type:Ie,literal:null,name:n.name,path:n.path,props:[]});a.value=i,u=xu;return}let r=S.find(i=>i.type===Bt&&i.description.labels.find(E=>E.name===s));if(r){let i=Object.seal({type:Ie,literal:s,name:r.name,path:r.path,props:[]});a.value=i,u=$o,_=!0;return}b=T|0,O=c-d|0,Ot(s);break}case xu:{if(o[e]===st){u=$o;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=br;Y(f(st),n,r);break}case $o:{let t=o.subarray(e,e+l|0),s=f(t),n=S.find(r=>r.type===Bt&&r.name===a.value.name&&r.description.labels.find(i=>i.name===s));if(n){if(a.value.literal=s,n.description.labels.find(i=>i.name===s).props.length>0){u=Zi;return}y();return}b=T|0,O=c-d|0,Ot(s);break}case Zi:{let t=o[e];if(t===pe){u=ta;return}if(t===ce){y(),_=!0;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case ta:{let{stack:t,procedure:s}=a;u=qi,h(),a={stack:t,procedure:s,value:null},h(),u=Se,U=Ne,_=!0;break}case qi:{let{value:t}=a;y(),a.value.props.push(t);let s=o[e];if(s===Be){u=ta;return}if(s===le){u=Qi,_=!0;return}}case Qi:{if(o[e]===le){y();return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=We;Y(f(le),n,r)}case ei:{let t=Object.seal({type:ws,layout:null,data:null,value:null});a.value=t,u=ti;break}case ti:{if(o[e]===$e){u=si;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ds;Y(f($e),n,r);break}case si:{let t=o.subarray(e,e+l|0),s=f(t);if(rt(c,o,e,l)){b=T|0,O=c-d|0,qe(s);return}if(Z(er,t)){u=Ho,h(),a={...a,data:null},h(),U=mt,u=ct,_=!0;return}if(Z(t,zt)||Z(t,ns)){u=Ho,h(),a={...a,data:null},h(),U=rs,u=_n,_=!0;return}if(Z(t,$n)){b=T|0,O=c-d|0;let r=o.subarray(e,e+l|0),i=f(r);Y(\"MAYBE Data\",i,eo);return}let n=Ue(s);n&&(a.value.data=n),u=Ko;break}case Ho:{let{data:t}=a;y(),a.value.data=t,_=!0,u=Ko;break}case Ko:{if(o[e]===ze){u=ni;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=as;Y(f(ze),n,r);break}case ni:{if(o[e]===st){u=oi;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=br;Y(f(st),n,r);break}case oi:{let t=o.subarray(e,e+l|0),s=f(t);if(a.value.layout=s,Z(t,Kn)){u=zo;return}if(Z(t,or)){u=ai;return}b=T|0,O=c-d|0;let n=f(t),r=eo;Y(`${f(or)} or ${f(Kn)}`,n,r);break}case ai:{if(o[e]===pe){u=ri;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case ri:{let{procedure:t,stack:s}=a;if(rt(c,o,e,l)){let n=o.subarray(e,e+l|0),r=f(n);b=T|0,O=c-d|0,qe(r);return}u=ci,h(),a=Object.seal({procedure:t,stack:s,value:null}),h(),U=Ne,u=Se,_=!0;break}case ci:{let{value:t}=a;if(y(),a.value.value=Ve(t),o[e]===le){u=zo;return}b=T|0,O=c-d|0;let n=o.subarray(e,e+l|0),r=f(n),i=We;Y(f(le),r,i);break}case zo:{y(),_=!0;break}case pi:{let t=Object.seal({type:gn,value:null});a.value=t,u=mi;break}case mi:{if(o[e]===pe){u=bi;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case bi:{let{procedure:t,stack:s}=a;if(rt(c,o,e,l)){let n=o.subarray(e,e+l|0),r=f(n);b=T|0,O=c-d|0,qe(r);return}u=Oi,h(),a=Object.seal({procedure:t,stack:s,value:null}),h(),U=Ne,u=Se,_=!0;break}case Oi:{let{stack:t,value:s}=a;y();let n;if(s.type===xe)n=s.name;else if(s.type===It)n=s.link;else if(s.type===Mt)n=s.value;else{b=T|0,O=c-d|0,re(\"Non-movable type passed to move procedure. Please check types that can be moved and make sure your parameter's type is one of them.\");return}let r=t.get(n);if(r&&t.set(n,{...r,moved:!0}),a.value.value=Ve(s),o[e]===le){u=Ti;return}b=T|0,O=c-d|0;let E=o.subarray(e,e+l|0),m=f(E),N=We;Y(f(le),m,N);break}case Ti:{y(),_=!0;break}case Di:{let t=Object.seal({type:Vn,value:null});a.value=t,Ue(Je),u=Mi;break}case Mi:{if(o[e]===pe){u=Fi;return}b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=ot;Y(f(pe),n,r);break}case Fi:{let{procedure:t,stack:s}=a;if(rt(c,o,e,l)){let n=o.subarray(e,e+l|0),r=f(n);b=T|0,O=c-d|0,qe(r);return}u=ji,h(),a=Object.seal({procedure:t,stack:s,value:null}),h(),U=Ne,u=Se,_=!0;break}case ji:{let{stack:t,value:s}=a;y();let n=ue(s);if(n.data.name===tt||n.data.name===Fe||n.data.layout===tt||n.data.layout===Fe||n.data.type===tt||n.data.type===Fe||(b=T|0,O=c-d|0,re(`Size function incompatible parameter type error: Provided type '${n.data.name}' cannot be used here as it's neither a string nor an array.`)),a.value.value=s,o[e]===le){u=Et;return}b=T|0,O=c-d|0;let i=o.subarray(e,e+l|0),E=f(i),m=We;Y(f(le),E,m);break}case $p:{y(),_=!0;break}case Ki:{let t=o.subarray(e,e+l|0),s=f(t),{value:n,stack:r,procedure:i}=a,E=Object.seal({type:$t,name:s,path:me,inputs:[Ve(n)]});a.value=E,u=Hi,h(),a={stack:r,procedure:i,value:null},h(),u=Se,U=Ne;break}case Hi:{let{value:t}=a;y();let{value:s}=a,{name:n}=s;s.inputs.push(Ve(t));let r=s.inputs.map(F=>ue(F))||[],[i,...E]=r,m=r.find(F=>F.data.type!=Ie)||i,N=Gt[n];if(N){for(let F=0;F<r.length;F++)if(r[F].data.name!=m.data.name){if(r[F].data.type===Ie&&Ms(m.data.name,r[F].data.name)){s.inputs[F]=Object.freeze({...s.inputs[F],name:m.data.name}),r[F].data.name=m.data.name;continue}b=T|0,O=c-d|0,In(r.map(w=>w.data?.name)?.join(\", \"));return}}let R=N.find(F=>F.description&&Array.isArray(F.description.inputs)?F.description.inputs.length!==r.length?!1:F.description.inputs.every((w,j)=>w.data.name===r[j].data.name):!1);if(R)Re(R),_t.set(n,R);else if(r.length>=1){if(r[0]?.data.type===Ut){let F=N.find(j=>j.description.inputs.length===r.length&&r.length>0?j.description.inputs[0].data.name===mn:!0),w=JSON.parse(JSON.stringify(F).replace(new RegExp(mn,\"g\"),r[0].data.name));Re(w),_t.set(n,w)}else if(!ht.includes(i.data.name)||E.some(F=>!ht.includes(F.data.name))){let F=S.find(j=>j.name===i.data.name),w=E.map(j=>S.find(H=>H.name===j.data.name));if(F&&w.every(Boolean)&&!jt(F,w,N,n)){let j=S.find(H=>H.name===r[0].data.name&&H.path===r[0].data.name&&H.type===Me);if(!(r[0].data.name===tt&&[\"==\",\"!=\",\">\",\">=\",\"<\",\"<=\"].includes(n))&&!(j&&[\"==\",\"!=\"].includes(n))){b=T|0,O=c-d|0,Ct(`${propTypes.join(\", \")} for function ${n}`);return}}}else if(!(r[0].data.name===tt&&[\"==\",\"!=\",\">\",\">=\",\"<\",\"<=\"].includes(n))){b=T|0,O=c-d|0,Ct(`${r.map(F=>F.data.name)?.join(\", \")} for function ${n}`);return}}else{b=T|0,O=c-d|0,Ct(`${r.map(F=>F.data.name)?.join(\", \")} for function ${n}`);return}u=Et,_=!0;break}case Vi:{if(o[e]!==pe){b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=Is;Y(f(),n,r);return}u=Gi,h(),u=Se,U=Ne;break}case Gi:{if(o[e]!==le){b=T|0,O=c-d|0;let s=o.subarray(e,e+l|0),n=f(s),r=Is;Y(f(le),n,r);return}u=Et;break}}},sf=(c,o,e,l)=>{switch(u){case rc:{let t=Object.seal({type:it,path:[]}),s=Object.seal({type:K_,source:t,alias:it});a=Object.seal({import:s,source:t}),u=cc;break}case cc:{let t=o[e],{source:s}=a;if(t===Tp&&o[e+1]===Hn){s.type=xe,u=uc,h(),a=[],h(),u=io;return}if(rt(c,o,e,l)){b=T|0,O=c-d|0,qe(name);return}s.type=H_,u=Gp,_=!0;break}case uc:{let t=o[e],s=a;y();let{source:n}=a;n.path.push(s.join(\"\")),t===Hn&&(h(),a=[],h(),u=io),t===ee&&(u=ic,_=!0);break}case io:{let t=o[e];if(t===Hn){y(),_=!0;return}if(t===ee){y(),_=!0;return}let s=o.subarray(e,e+l|0),n=f(s);a.push(n);return}case ic:{let t=s=>{let n=!0,r=null,i=null,E=wl(k);E.on(is,w=>{r=w}),E.on(we,w=>{i=w});let m=new Ge({tabSize:4});if(m.on(\"token\",(w,j,H,$)=>{E.feed(w,j,H,$)}),m.on(\"error\",()=>{n=!1}),m.feed(s),m.done(),m.close(),E.done(),!n||i){console.error(\"Tokenizer or Parser error occurred.\",i);return}if(!r){console.error(\"Invalid representation after parsing.\");return}let{exports:N,data:R}=r;for(let w of N){let j=r[w.path]?.find(H=>H.name===w.name);j&&(w.path===sa&&(S.push(j),P({name:j.name,path:j.path,type:Ce})),w.path===ll&&Re(j))}let F=R.filter(w=>w.type===z_);S.unshift(...F)};if(ne&&ne.length>0){let s=ne.find(n=>n.path===a.source.path.join(\"/\"));if(s){let n=fe(s.data);t(n)}else b=T|0,O=c-d|0,re(\"NO FILES WERE FOUND: \",a.source.path)}else b=T|0,O=c-d|0,re(\"NO FILES WERE FOUND: \",a.source.path);y();break}}},nf=(c,o)=>{switch(c){case is:{K.push(o);break}case we:{G.push(o);break}}},h=()=>{let c=Object.freeze({item:a,indentation:je,situationGeneral:U,situationSection:u});g.push(c)},y=()=>{let c=g.pop();return a=c.item,je=c.indentation,U=c.situationGeneral,u=c.situationSection,c},fs=(c,o,e,l)=>{if(J)return;let t=()=>{Pe=!0,d=c|0,T=T+1};Ke=c+l|0;let s=o[e];if(s!==Op){if(s===ee&&Pe){t();return}for(Pe=!1,_=!0;_;)switch(_=!1,U){case Ne:{Kl(c,o,e,l);break}case Or:{Hl(c,o,e,l);break}case Ns:{Xl(c,o,e,l);break}case Ss:{zl(c,o,e,l);break}case Tr:{Wl(c,o,e,l);break}case to:{Zl(c,o,e,l);break}case Ar:{ql(c,o,e,l);break}case dr:{Jl(c,o,e,l);break}case Ye:{Ql(c,o,e,l);break}case mt:{xl(c,o,e,l);break}case ge:{tf(c,o,e,l);break}case rs:{ef(c,o,e,l);break}case Ir:{sf(c,o,e,l);break}default:throw qn}s===ee&&(El.default.diff(a,Yt)&&t(),Yt=JSON.parse(JSON.stringify(a)))}};return Object.freeze({done:()=>{if(fs(Ke,ss,0,ss.length),Ke=Ke+ss.length|0,fs(Ke,Ht,0,Ht.length),Ke=Ke+Ht.length|0,fs(Ke,ss,0,ss.length),Ke=Ke+ss.length|0,de){C.emit(is,null);return}C.emit(is,ae)},feed:fs,on:nf})},zp=Object.freeze({create:wl,...Np,...Lp,...Vp}),Rm=zp;\n/*! Bundled license information:\n\neventemitter2/lib/eventemitter2.js:\n  (*!\n   * EventEmitter2\n   * https://github.com/hij1nx/EventEmitter2\n   *\n   * Copyright (c) 2013 hij1nx\n   * Licensed under the MIT license.\n   *)\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@munezero/floparser/SimpleParser/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@munezero/floparser/Tests/Shared/index.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@munezero/floparser/Tests/Shared/index.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SIMPLE_IMPORTS: () => (/* binding */ e)\n/* harmony export */ });\nvar e=Object.freeze({data:Object.freeze([Object.freeze({type:\"native\",name:\"Link\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"String\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"Char\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"Bool\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"FP32\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"FP64\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"U32\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"U64\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"I32\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"I64\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"U16\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"I16\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"I8\",path:\"Flogram\"}),Object.freeze({type:\"native\",name:\"U8\",path:\"Flogram\"})])});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bmV6ZXJvL2Zsb3BhcnNlci9UZXN0cy9TaGFyZWQvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxxQkFBcUIsbUNBQW1DLHlDQUF5QyxpQkFBaUIsMkNBQTJDLGlCQUFpQix5Q0FBeUMsaUJBQWlCLHlDQUF5QyxpQkFBaUIseUNBQXlDLGlCQUFpQix5Q0FBeUMsaUJBQWlCLHdDQUF3QyxpQkFBaUIsd0NBQXdDLGlCQUFpQix3Q0FBd0MsaUJBQWlCLHdDQUF3QyxpQkFBaUIsd0NBQXdDLGlCQUFpQix3Q0FBd0MsaUJBQWlCLHVDQUF1QyxpQkFBaUIsdUNBQXVDLElBQUksRUFBOEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcSkFTT05cXERlc2t0b3BcXE5ldyBmb2xkZXJcXG5vZGVfbW9kdWxlc1xcQG11bmV6ZXJvXFxmbG9wYXJzZXJcXFRlc3RzXFxTaGFyZWRcXGluZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZT1PYmplY3QuZnJlZXplKHtkYXRhOk9iamVjdC5mcmVlemUoW09iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixuYW1lOlwiTGlua1wiLHBhdGg6XCJGbG9ncmFtXCJ9KSxPYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsbmFtZTpcIlN0cmluZ1wiLHBhdGg6XCJGbG9ncmFtXCJ9KSxPYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsbmFtZTpcIkNoYXJcIixwYXRoOlwiRmxvZ3JhbVwifSksT2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLG5hbWU6XCJCb29sXCIscGF0aDpcIkZsb2dyYW1cIn0pLE9iamVjdC5mcmVlemUoe3R5cGU6XCJuYXRpdmVcIixuYW1lOlwiRlAzMlwiLHBhdGg6XCJGbG9ncmFtXCJ9KSxPYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsbmFtZTpcIkZQNjRcIixwYXRoOlwiRmxvZ3JhbVwifSksT2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLG5hbWU6XCJVMzJcIixwYXRoOlwiRmxvZ3JhbVwifSksT2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLG5hbWU6XCJVNjRcIixwYXRoOlwiRmxvZ3JhbVwifSksT2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLG5hbWU6XCJJMzJcIixwYXRoOlwiRmxvZ3JhbVwifSksT2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLG5hbWU6XCJJNjRcIixwYXRoOlwiRmxvZ3JhbVwifSksT2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLG5hbWU6XCJVMTZcIixwYXRoOlwiRmxvZ3JhbVwifSksT2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLG5hbWU6XCJJMTZcIixwYXRoOlwiRmxvZ3JhbVwifSksT2JqZWN0LmZyZWV6ZSh7dHlwZTpcIm5hdGl2ZVwiLG5hbWU6XCJJOFwiLHBhdGg6XCJGbG9ncmFtXCJ9KSxPYmplY3QuZnJlZXplKHt0eXBlOlwibmF0aXZlXCIsbmFtZTpcIlU4XCIscGF0aDpcIkZsb2dyYW1cIn0pXSl9KTtleHBvcnR7ZSBhcyBTSU1QTEVfSU1QT1JUU307XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@munezero/floparser/Tests/Shared/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@munezero/floparser/Tokenizer/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@munezero/floparser/Tokenizer/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gr)\n/* harmony export */ });\nvar ne=Object.create;var ct=Object.defineProperty;var re=Object.getOwnPropertyDescriptor;var ie=Object.getOwnPropertyNames;var oe=Object.getPrototypeOf,ce=Object.prototype.hasOwnProperty;var le=(c,i,l)=>i in c?ct(c,i,{enumerable:!0,configurable:!0,writable:!0,value:l}):c[i]=l;var dt=(c,i)=>()=>(i||c((i={exports:{}}).exports,i),i.exports);var he=(c,i,l,E)=>{if(i&&typeof i==\"object\"||typeof i==\"function\")for(let a of ie(i))!ce.call(c,a)&&a!==l&&ct(c,a,{get:()=>i[a],enumerable:!(E=re(i,a))||E.enumerable});return c};var ae=(c,i,l)=>(l=c!=null?ne(oe(c)):{},he(i||!c||!c.__esModule?ct(l,\"default\",{value:c,enumerable:!0}):l,c));var Z=(c,i,l)=>(le(c,typeof i!=\"symbol\"?i+\"\":i,l),l);var It=dt((St,vt)=>{(function(c){var i=Object.hasOwnProperty,l=Array.isArray?Array.isArray:function(e){return Object.prototype.toString.call(e)===\"[object Array]\"},E=10,a=typeof process==\"object\"&&typeof process.nextTick==\"function\",x=typeof Symbol==\"function\",m=typeof Reflect==\"object\",A=typeof setImmediate==\"function\",N=A?setImmediate:setTimeout,v=x?m&&typeof Reflect.ownKeys==\"function\"?Reflect.ownKeys:function(t){var e=Object.getOwnPropertyNames(t);return e.push.apply(e,Object.getOwnPropertySymbols(t)),e}:Object.keys;function S(){this._events={},this._conf&&I.call(this,this._conf)}function I(t){t&&(this._conf=t,t.delimiter&&(this.delimiter=t.delimiter),t.maxListeners!==c&&(this._maxListeners=t.maxListeners),t.wildcard&&(this.wildcard=t.wildcard),t.newListener&&(this._newListener=t.newListener),t.removeListener&&(this._removeListener=t.removeListener),t.verboseMemoryLeak&&(this.verboseMemoryLeak=t.verboseMemoryLeak),t.ignoreErrors&&(this.ignoreErrors=t.ignoreErrors),this.wildcard&&(this.listenerTree={}))}function w(t,e){var s=\"(node) warning: possible EventEmitter memory leak detected. \"+t+\" listeners added. Use emitter.setMaxListeners() to increase limit.\";if(this.verboseMemoryLeak&&(s+=\" Event name: \"+e+\".\"),typeof process<\"u\"&&process.emitWarning){var n=new Error(s);n.name=\"MaxListenersExceededWarning\",n.emitter=this,n.count=t,process.emitWarning(n)}else console.error(s),console.trace&&console.trace()}var D=function(t,e,s){var n=arguments.length;switch(n){case 0:return[];case 1:return[t];case 2:return[t,e];case 3:return[t,e,s];default:for(var r=new Array(n);n--;)r[n]=arguments[n];return r}};function Q(t,e){for(var s={},n,r=t.length,o=e?e.length:0,h=0;h<r;h++)n=t[h],s[n]=h<o?e[h]:c;return s}function H(t,e,s){this._emitter=t,this._target=e,this._listeners={},this._listenersCount=0;var n,r;if((s.on||s.off)&&(n=s.on,r=s.off),e.addEventListener?(n=e.addEventListener,r=e.removeEventListener):e.addListener?(n=e.addListener,r=e.removeListener):e.on&&(n=e.on,r=e.off),!n&&!r)throw Error(\"target does not implement any known event API\");if(typeof n!=\"function\")throw TypeError(\"on method must be a function\");if(typeof r!=\"function\")throw TypeError(\"off method must be a function\");this._on=n,this._off=r;var o=t._observers;o?o.push(this):t._observers=[this]}Object.assign(H.prototype,{subscribe:function(t,e,s){var n=this,r=this._target,o=this._emitter,h=this._listeners,_=function(){var f=D.apply(null,arguments),u={data:f,name:e,original:t};if(s){var T=s.call(r,u);T!==!1&&o.emit.apply(o,[u.name].concat(f));return}o.emit.apply(o,[e].concat(f))};if(h[t])throw Error(\"Event '\"+t+\"' is already listening\");this._listenersCount++,o._newListener&&o._removeListener&&!n._onNewListener?(this._onNewListener=function(f){f===e&&h[t]===null&&(h[t]=_,n._on.call(r,t,_))},o.on(\"newListener\",this._onNewListener),this._onRemoveListener=function(f){f===e&&!o.hasListeners(f)&&h[t]&&(h[t]=null,n._off.call(r,t,_))},h[t]=null,o.on(\"removeListener\",this._onRemoveListener)):(h[t]=_,n._on.call(r,t,_))},unsubscribe:function(t){var e=this,s=this._listeners,n=this._emitter,r,o,h=this._off,_=this._target,f;if(t&&typeof t!=\"string\")throw TypeError(\"event must be a string\");function u(){e._onNewListener&&(n.off(\"newListener\",e._onNewListener),n.off(\"removeListener\",e._onRemoveListener),e._onNewListener=null,e._onRemoveListener=null);var T=mt.call(n,e);n._observers.splice(T,1)}if(t){if(r=s[t],!r)return;h.call(_,t,r),delete s[t],--this._listenersCount||u()}else{for(o=v(s),f=o.length;f-- >0;)t=o[f],h.call(_,t,s[t]);this._listeners={},this._listenersCount=0,u()}}});function J(t,e,s,n){var r=Object.assign({},e);if(!t)return r;if(typeof t!=\"object\")throw TypeError(\"options must be an object\");var o=Object.keys(t),h=o.length,_,f,u;function T(O){throw Error('Invalid \"'+_+'\" option value'+(O?\". Reason: \"+O:\"\"))}for(var P=0;P<h;P++){if(_=o[P],!n&&!i.call(e,_))throw Error('Unknown \"'+_+'\" option');f=t[_],f!==c&&(u=s[_],r[_]=u?u(f,T):f)}return r}function Tt(t,e){return(typeof t!=\"function\"||!t.hasOwnProperty(\"prototype\"))&&e(\"value must be a constructor\"),t}function xt(t){var e=\"value must be type of \"+t.join(\"|\"),s=t.length,n=t[0],r=t[1];return s===1?function(o,h){if(typeof o===n)return o;h(e)}:s===2?function(o,h){var _=typeof o;if(_===n||_===r)return o;h(e)}:function(o,h){for(var _=typeof o,f=s;f-- >0;)if(_===t[f])return o;h(e)}}var et=xt([\"function\"]),qt=xt([\"object\",\"function\"]);function pt(t,e,s){var n,r,o=0,h,_=new t(function(f,u,T){s=J(s,{timeout:0,overload:!1},{timeout:function(R,C){return R*=1,(typeof R!=\"number\"||R<0||!Number.isFinite(R))&&C(\"timeout must be a positive number\"),R}}),n=!s.overload&&typeof t.prototype.cancel==\"function\"&&typeof T==\"function\";function P(){r&&(r=null),o&&(clearTimeout(o),o=0)}var O=function(R){P(),f(R)},d=function(R){P(),u(R)};n?e(O,d,T):(r=[function(R){d(R||Error(\"canceled\"))}],e(O,d,function(R){if(h)throw Error(\"Unable to subscribe on cancel event asynchronously\");if(typeof R!=\"function\")throw TypeError(\"onCancel callback must be a function\");r.push(R)}),h=!0),s.timeout>0&&(o=setTimeout(function(){var R=Error(\"timeout\");R.code=\"ETIMEDOUT\",o=0,_.cancel(R),u(R)},s.timeout))});return n||(_.cancel=function(f){if(r){for(var u=r.length,T=1;T<u;T++)r[T](f);r[0](f),r=null}}),_}function mt(t){var e=this._observers;if(!e)return-1;for(var s=e.length,n=0;n<s;n++)if(e[n]._target===t)return n;return-1}function b(t,e,s,n,r){if(!s)return null;if(n===0){var o=typeof e;if(o===\"string\"){var h,_,f=0,u=0,T=this.delimiter,P=T.length;if((_=e.indexOf(T))!==-1){h=new Array(5);do h[f++]=e.slice(u,_),u=_+P;while((_=e.indexOf(T,u))!==-1);h[f++]=e.slice(u),e=h,r=f}else e=[e],r=1}else o===\"object\"?r=e.length:(e=[e],r=1)}var O=null,d,R,C,rt,it,K=e[n],ot=e[n+1],Y,g;if(n===r)s._listeners&&(typeof s._listeners==\"function\"?(t&&t.push(s._listeners),O=[s]):(t&&t.push.apply(t,s._listeners),O=[s]));else if(K===\"*\"){for(Y=v(s),_=Y.length;_-- >0;)d=Y[_],d!==\"_listeners\"&&(g=b(t,e,s[d],n+1,r),g&&(O?O.push.apply(O,g):O=g));return O}else if(K===\"**\"){for(it=n+1===r||n+2===r&&ot===\"*\",it&&s._listeners&&(O=b(t,e,s,r,r)),Y=v(s),_=Y.length;_-- >0;)d=Y[_],d!==\"_listeners\"&&(d===\"*\"||d===\"**\"?(s[d]._listeners&&!it&&(g=b(t,e,s[d],r,r),g&&(O?O.push.apply(O,g):O=g)),g=b(t,e,s[d],n,r)):d===ot?g=b(t,e,s[d],n+2,r):g=b(t,e,s[d],n,r),g&&(O?O.push.apply(O,g):O=g));return O}else s[K]&&(O=b(t,e,s[K],n+1,r));if(R=s[\"*\"],R&&b(t,e,R,n+1,r),C=s[\"**\"],C)if(n<r)for(C._listeners&&b(t,e,C,r,r),Y=v(C),_=Y.length;_-- >0;)d=Y[_],d!==\"_listeners\"&&(d===ot?b(t,e,C[d],n+2,r):d===K?b(t,e,C[d],n+1,r):(rt={},rt[d]=C[d],b(t,e,{\"**\":rt},n+1,r)));else C._listeners?b(t,e,C,r,r):C[\"*\"]&&C[\"*\"]._listeners&&b(t,e,C[\"*\"],r,r);return O}function $t(t,e,s){var n=0,r=0,o,h=this.delimiter,_=h.length,f;if(typeof t==\"string\")if((o=t.indexOf(h))!==-1){f=new Array(5);do f[n++]=t.slice(r,o),r=o+_;while((o=t.indexOf(h,r))!==-1);f[n++]=t.slice(r)}else f=[t],n=1;else f=t,n=t.length;if(n>1){for(o=0;o+1<n;o++)if(f[o]===\"**\"&&f[o+1]===\"**\")return}var u=this.listenerTree,T;for(o=0;o<n;o++)if(T=f[o],u=u[T]||(u[T]={}),o===n-1)return u._listeners?(typeof u._listeners==\"function\"&&(u._listeners=[u._listeners]),s?u._listeners.unshift(e):u._listeners.push(e),!u._listeners.warned&&this._maxListeners>0&&u._listeners.length>this._maxListeners&&(u._listeners.warned=!0,w.call(this,u._listeners.length,T))):u._listeners=e,!0;return!0}function At(t,e,s,n){for(var r=v(t),o=r.length,h,_,f,u=t._listeners,T;o-- >0;)_=r[o],h=t[_],_===\"_listeners\"?f=s:f=s?s.concat(_):[_],T=n||typeof _==\"symbol\",u&&e.push(T?f:f.join(this.delimiter)),typeof h==\"object\"&&At.call(this,h,e,f,T);return e}function st(t){for(var e=v(t),s=e.length,n,r,o;s-- >0;)r=e[s],n=t[r],n&&(o=!0,r!==\"_listeners\"&&!st(n)&&delete t[r]);return o}function Ot(t,e,s){this.emitter=t,this.event=e,this.listener=s}Ot.prototype.off=function(){return this.emitter.off(this.event,this.listener),this};function te(t,e,s){if(s===!0)r=!0;else if(s===!1)n=!0;else{if(!s||typeof s!=\"object\")throw TypeError(\"options should be an object or true\");var n=s.async,r=s.promisify,o=s.nextTick,h=s.objectify}if(n||o||r){var _=e,f=e._origin||e;if(o&&!a)throw Error(\"process.nextTick is not supported\");r===c&&(r=e.constructor.name===\"AsyncFunction\"),e=function(){var u=arguments,T=this,P=this.event;return r?o?Promise.resolve():new Promise(function(O){N(O)}).then(function(){return T.event=P,_.apply(T,u)}):(o?process.nextTick:N)(function(){T.event=P,_.apply(T,u)})},e._async=!0,e._origin=f}return[e,h?new Ot(this,t,e):this]}function p(t){this._events={},this._newListener=!1,this._removeListener=!1,this.verboseMemoryLeak=!1,I.call(this,t)}p.EventEmitter2=p,p.prototype.listenTo=function(t,e,s){if(typeof t!=\"object\")throw TypeError(\"target musts be an object\");var n=this;s=J(s,{on:c,off:c,reducers:c},{on:et,off:et,reducers:qt});function r(o){if(typeof o!=\"object\")throw TypeError(\"events must be an object\");var h=s.reducers,_=mt.call(n,t),f;_===-1?f=new H(n,t,s):f=n._observers[_];for(var u=v(o),T=u.length,P,O=typeof h==\"function\",d=0;d<T;d++)P=u[d],f.subscribe(P,o[P]||P,O?h:h&&h[P])}return l(e)?r(Q(e)):r(typeof e==\"string\"?Q(e.split(/\\s+/)):e),this},p.prototype.stopListeningTo=function(t,e){var s=this._observers;if(!s)return!1;var n=s.length,r,o=!1;if(t&&typeof t!=\"object\")throw TypeError(\"target should be an object\");for(;n-- >0;)r=s[n],(!t||r._target===t)&&(r.unsubscribe(e),o=!0);return o},p.prototype.delimiter=\".\",p.prototype.setMaxListeners=function(t){t!==c&&(this._maxListeners=t,this._conf||(this._conf={}),this._conf.maxListeners=t)},p.prototype.getMaxListeners=function(){return this._maxListeners},p.prototype.event=\"\",p.prototype.once=function(t,e,s){return this._once(t,e,!1,s)},p.prototype.prependOnceListener=function(t,e,s){return this._once(t,e,!0,s)},p.prototype._once=function(t,e,s,n){return this._many(t,1,e,s,n)},p.prototype.many=function(t,e,s,n){return this._many(t,e,s,!1,n)},p.prototype.prependMany=function(t,e,s,n){return this._many(t,e,s,!0,n)},p.prototype._many=function(t,e,s,n,r){var o=this;if(typeof s!=\"function\")throw new Error(\"many only accepts instances of Function\");function h(){return--e===0&&o.off(t,h),s.apply(this,arguments)}return h._origin=s,this._on(t,h,n,r)},p.prototype.emit=function(){if(!this._events&&!this._all)return!1;this._events||S.call(this);var t=arguments[0],e,s=this.wildcard,n,r,o,h,_;if(t===\"newListener\"&&!this._newListener&&!this._events.newListener)return!1;if(s&&(e=t,t!==\"newListener\"&&t!==\"removeListener\"&&typeof t==\"object\")){if(r=t.length,x){for(o=0;o<r;o++)if(typeof t[o]==\"symbol\"){_=!0;break}}_||(t=t.join(this.delimiter))}var f=arguments.length,u;if(this._all&&this._all.length)for(u=this._all.slice(),o=0,r=u.length;o<r;o++)switch(this.event=t,f){case 1:u[o].call(this,t);break;case 2:u[o].call(this,t,arguments[1]);break;case 3:u[o].call(this,t,arguments[1],arguments[2]);break;default:u[o].apply(this,arguments)}if(s)u=[],b.call(this,u,e,this.listenerTree,0,r);else if(u=this._events[t],typeof u==\"function\"){switch(this.event=t,f){case 1:u.call(this);break;case 2:u.call(this,arguments[1]);break;case 3:u.call(this,arguments[1],arguments[2]);break;default:for(n=new Array(f-1),h=1;h<f;h++)n[h-1]=arguments[h];u.apply(this,n)}return!0}else u&&(u=u.slice());if(u&&u.length){if(f>3)for(n=new Array(f-1),h=1;h<f;h++)n[h-1]=arguments[h];for(o=0,r=u.length;o<r;o++)switch(this.event=t,f){case 1:u[o].call(this);break;case 2:u[o].call(this,arguments[1]);break;case 3:u[o].call(this,arguments[1],arguments[2]);break;default:u[o].apply(this,n)}return!0}else if(!this.ignoreErrors&&!this._all&&t===\"error\")throw arguments[1]instanceof Error?arguments[1]:new Error(\"Uncaught, unspecified 'error' event.\");return!!this._all},p.prototype.emitAsync=function(){if(!this._events&&!this._all)return!1;this._events||S.call(this);var t=arguments[0],e=this.wildcard,s,n,r,o,h,_;if(t===\"newListener\"&&!this._newListener&&!this._events.newListener)return Promise.resolve([!1]);if(e&&(s=t,t!==\"newListener\"&&t!==\"removeListener\"&&typeof t==\"object\")){if(o=t.length,x){for(h=0;h<o;h++)if(typeof t[h]==\"symbol\"){n=!0;break}}n||(t=t.join(this.delimiter))}var f=[],u=arguments.length,T;if(this._all)for(h=0,o=this._all.length;h<o;h++)switch(this.event=t,u){case 1:f.push(this._all[h].call(this,t));break;case 2:f.push(this._all[h].call(this,t,arguments[1]));break;case 3:f.push(this._all[h].call(this,t,arguments[1],arguments[2]));break;default:f.push(this._all[h].apply(this,arguments))}if(e?(T=[],b.call(this,T,s,this.listenerTree,0)):T=this._events[t],typeof T==\"function\")switch(this.event=t,u){case 1:f.push(T.call(this));break;case 2:f.push(T.call(this,arguments[1]));break;case 3:f.push(T.call(this,arguments[1],arguments[2]));break;default:for(r=new Array(u-1),_=1;_<u;_++)r[_-1]=arguments[_];f.push(T.apply(this,r))}else if(T&&T.length){if(T=T.slice(),u>3)for(r=new Array(u-1),_=1;_<u;_++)r[_-1]=arguments[_];for(h=0,o=T.length;h<o;h++)switch(this.event=t,u){case 1:f.push(T[h].call(this));break;case 2:f.push(T[h].call(this,arguments[1]));break;case 3:f.push(T[h].call(this,arguments[1],arguments[2]));break;default:f.push(T[h].apply(this,r))}}else if(!this.ignoreErrors&&!this._all&&t===\"error\")return arguments[1]instanceof Error?Promise.reject(arguments[1]):Promise.reject(\"Uncaught, unspecified 'error' event.\");return Promise.all(f)},p.prototype.on=function(t,e,s){return this._on(t,e,!1,s)},p.prototype.prependListener=function(t,e,s){return this._on(t,e,!0,s)},p.prototype.onAny=function(t){return this._onAny(t,!1)},p.prototype.prependAny=function(t){return this._onAny(t,!0)},p.prototype.addListener=p.prototype.on,p.prototype._onAny=function(t,e){if(typeof t!=\"function\")throw new Error(\"onAny only accepts instances of Function\");return this._all||(this._all=[]),e?this._all.unshift(t):this._all.push(t),this},p.prototype._on=function(t,e,s,n){if(typeof t==\"function\")return this._onAny(t,e),this;if(typeof e!=\"function\")throw new Error(\"on only accepts instances of Function\");this._events||S.call(this);var r=this,o;return n!==c&&(o=te.call(this,t,e,n),e=o[0],r=o[1]),this._newListener&&this.emit(\"newListener\",t,e),this.wildcard?($t.call(this,t,e,s),r):(this._events[t]?(typeof this._events[t]==\"function\"&&(this._events[t]=[this._events[t]]),s?this._events[t].unshift(e):this._events[t].push(e),!this._events[t].warned&&this._maxListeners>0&&this._events[t].length>this._maxListeners&&(this._events[t].warned=!0,w.call(this,this._events[t].length,t))):this._events[t]=e,r)},p.prototype.off=function(t,e){if(typeof e!=\"function\")throw new Error(\"removeListener only takes instances of Function\");var s,n=[];if(this.wildcard){var r=typeof t==\"string\"?t.split(this.delimiter):t.slice();if(n=b.call(this,null,r,this.listenerTree,0),!n)return this}else{if(!this._events[t])return this;s=this._events[t],n.push({_listeners:s})}for(var o=0;o<n.length;o++){var h=n[o];if(s=h._listeners,l(s)){for(var _=-1,f=0,u=s.length;f<u;f++)if(s[f]===e||s[f].listener&&s[f].listener===e||s[f]._origin&&s[f]._origin===e){_=f;break}if(_<0)continue;return this.wildcard?h._listeners.splice(_,1):this._events[t].splice(_,1),s.length===0&&(this.wildcard?delete h._listeners:delete this._events[t]),this._removeListener&&this.emit(\"removeListener\",t,e),this}else(s===e||s.listener&&s.listener===e||s._origin&&s._origin===e)&&(this.wildcard?delete h._listeners:delete this._events[t],this._removeListener&&this.emit(\"removeListener\",t,e))}return this.listenerTree&&st(this.listenerTree),this},p.prototype.offAny=function(t){var e=0,s=0,n;if(t&&this._all&&this._all.length>0){for(n=this._all,e=0,s=n.length;e<s;e++)if(t===n[e])return n.splice(e,1),this._removeListener&&this.emit(\"removeListenerAny\",t),this}else{if(n=this._all,this._removeListener)for(e=0,s=n.length;e<s;e++)this.emit(\"removeListenerAny\",n[e]);this._all=[]}return this},p.prototype.removeListener=p.prototype.off,p.prototype.removeAllListeners=function(t){if(t===c)return!this._events||S.call(this),this;if(this.wildcard){var e=b.call(this,null,t,this.listenerTree,0),s,n;if(!e)return this;for(n=0;n<e.length;n++)s=e[n],s._listeners=null;this.listenerTree&&st(this.listenerTree)}else this._events&&(this._events[t]=null);return this},p.prototype.listeners=function(t){var e=this._events,s,n,r,o,h;if(t===c){if(this.wildcard)throw Error(\"event name required for wildcard emitter\");if(!e)return[];for(s=v(e),o=s.length,r=[];o-- >0;)n=e[s[o]],typeof n==\"function\"?r.push(n):r.push.apply(r,n);return r}else{if(this.wildcard){if(h=this.listenerTree,!h)return[];var _=[],f=typeof t==\"string\"?t.split(this.delimiter):t.slice();return b.call(this,_,f,h,0),_}return e?(n=e[t],n?typeof n==\"function\"?[n]:n:[]):[]}},p.prototype.eventNames=function(t){var e=this._events;return this.wildcard?At.call(this,this.listenerTree,[],null,t):e?v(e):[]},p.prototype.listenerCount=function(t){return this.listeners(t).length},p.prototype.hasListeners=function(t){if(this.wildcard){var e=[],s=typeof t==\"string\"?t.split(this.delimiter):t.slice();return b.call(this,e,s,this.listenerTree,0),e.length>0}var n=this._events,r=this._all;return!!(r&&r.length||n&&(t===c?v(n).length:n[t]))},p.prototype.listenersAny=function(){return this._all?this._all:[]},p.prototype.waitFor=function(t,e){var s=this,n=typeof e;return n===\"number\"?e={timeout:e}:n===\"function\"&&(e={filter:e}),e=J(e,{timeout:0,filter:c,handleError:!1,Promise,overload:!1},{filter:et,Promise:Tt}),pt(e.Promise,function(r,o,h){function _(){var f=e.filter;if(!(f&&!f.apply(s,arguments)))if(s.off(t,_),e.handleError){var u=arguments[0];u?o(u):r(D.apply(null,arguments).slice(1))}else r(D.apply(null,arguments))}h(function(){s.off(t,_)}),s._on(t,_,!1)},{timeout:e.timeout,overload:e.overload})};function ee(t,e,s){s=J(s,{Promise,timeout:0,overload:!1},{Promise:Tt});var n=s.Promise;return pt(n,function(r,o,h){var _;if(typeof t.addEventListener==\"function\"){_=function(){r(D.apply(null,arguments))},h(function(){t.removeEventListener(e,_)}),t.addEventListener(e,_,{once:!0});return}var f=function(){u&&t.removeListener(\"error\",u),r(D.apply(null,arguments))},u;e!==\"error\"&&(u=function(T){t.removeListener(e,f),o(T)},t.once(\"error\",u)),h(function(){u&&t.removeListener(\"error\",u),t.removeListener(e,f)}),t.once(e,f)},{timeout:s.timeout,overload:s.overload})}var nt=p.prototype;if(Object.defineProperties(p,{defaultMaxListeners:{get:function(){return nt._maxListeners},set:function(t){if(typeof t!=\"number\"||t<0||Number.isNaN(t))throw TypeError(\"n must be a non-negative number\");nt._maxListeners=t},enumerable:!0},once:{value:ee,writable:!0,configurable:!0}}),Object.defineProperties(nt,{_maxListeners:{value:E,writable:!0,configurable:!0},_observers:{value:null,writable:!0,configurable:!0}}),typeof define==\"function\"&&define.amd)define(function(){return p});else if(typeof St==\"object\")vt.exports=p;else{var se=new Function(\"\",\"return this\")();se.EventEmitter2=p}})()});var Nt=dt((ir,Rt)=>{Rt.exports=It()});var Zt=ae(Nt(),1);var fe=\"as\",ue=\"=\",_e=\"break\",Ee=\"else\",Te=\"enum\",xe=\"export\",pe=\"if\",me=\"import\",Ae=\"->\",Oe=\"is\",de=\"loop\",Se=\"mut\",ve=\"native\",Ie=\"object\",Re=\"fn\",Ne=\"return\",be=\"self\",Le=\"template\",Pe=Object.freeze({ALIAS:fe,ASSIGN:ue,BREAK:_e,ELSE:Ee,ENUMERATION:Te,EXPORT:xe,IF:pe,IMPORT:me,INTO:Ae,IS:Oe,LOOP:de,MUTABLE:Se,NATIVE:ve,OBJECT:Ie,PROCEDURE:Re,RETURN:Ne,SELF:be,TEMPLATE:Le}),bt=Pe;var Ce=\"assign\",ge=\"arity_match\",we=\"arity_status\",Be=\"array_assignment\",Ye=\"branch-match\",Me=\"branch-default\",De=\"condition\",Ue=\"loop\",ye=\"data\",ke=\"generics\",je=\"enumeration\",Fe=\"expression\",Ge=\"instance\",He=\"Link\",Ke=\"local\",Ze=\"object\",Xe=\"procedure\",ze=\"return\",Ve=\"compare\",We=\"select\",Qe=\"member\",Je=\"store\",qe=\"break\",$e=\"literal\",ts=\"array_access\",es=\"valueLink\",ss=\"linkValue\",ns=\"self\",rs=\"procedure-call\",is=\"Maybe\",os=\"native\",cs=\"move\",ls=\"String\",hs=\"Array\",as=\"import\",fs=\"library\",us=\"constructor\",_s=\"destructor\",Es=\"free\",Ts=\"block-end\",xs=\"default-block\",ps=\"continue\",ms=\"branch\",As=\"statement\",Os=\"draw\",ds=\"now\",Ss=\"size\",vs=\"concatenation\",Is=\"foreach\",Rs=\"while\",Ns=\"when\",bs=\"while-condition\",Ls=\"foreach-condition\",Ps=\"foreach-end\",Cs=\"for\",gs=\"up_to\",ws=\"down_to\",Bs=\"almost_up_to\",Ys=\"almost_down_to\",Ms=\"I32\",Ds=\"U32\",Us=\"FP32\",ys=\"I16\",ks=\"U16\",js=\"U8\",Fs=\"I8\",Gs=\"FP64\",Hs=\"U64\",Ks=\"I64\",Zs=\"Char\",Xs=\"block-start\",zs=\"function-call\",Vs=\"Bool\",Ws=Object.freeze({TYPES_ASSIGN:Ce,TYPES_ARRAY:hs,TYPES_ARITY_MATCH:ge,TYPES_ARITY_STATUS:we,TYPES_ARRAY_ASSIGNMENT:Be,TYPES_BRANCH_MATCH:Ye,TYPES_BRANCH_DEFAULT:Me,TYPES_CONDITION:De,TYPES_LOOP:Ue,TYPES_FOREACH_END:Ps,TYPES_WHILE_CONDITION:bs,TYPES_FOREACH_CONDITION:Ls,TYPES_DATA:ye,TYPES_COMPARE:Ve,TYPES_GENERICS:ke,TYPES_ENUMERATION:je,TYPES_EXPRESSION:Fe,TYPES_INSTANCE:Ge,TYPES_LINK:He,TYPES_IMPORT:as,TYPES_LOCAL:Ke,TYPES_OBJECT:Ze,TYPES_PROCEDURE:Xe,TYPES_RETURN:ze,TYPES_SELECT:We,TYPES_MEMBER:Qe,TYPES_STORE:Je,TYPES_BREAK:qe,TYPES_LITERAL:$e,TYPES_ARRAY_ACCESS:ts,TYPES_LINK_TO:es,TYPES_VALUE_AT:ss,TYPES_SELF:ns,TYPES_LIBRARY:fs,TYPES_DROP:rs,TYPES_MAYBE:is,TYPES_NATIVE:os,TYPES_MOVE:cs,TYPES_STRING:ls,TYPES_CONSTRUCTOR:us,TYPES_FREE:Es,TYPES_DEFAULT_BLOCK:xs,TYPES_BLOCK_END:Ts,TYPES_CONTINUE:ps,TYPES_BRANCH:ms,TYPES_STATEMENT:As,TYPES_DESTRUCTOR:_s,TYPES_DRAW:Os,TYPES_NOW:ds,TYPES_SIZE:Ss,TYPES_CONCAT:vs,TYPES_FOREACH:Is,TYPES_WHILE:Rs,TYPES_WHEN:Ns,TYPES_FOR:Cs,TYPES_UP_TO:gs,TYPES_DOWN_TO:ws,TYPES_ALMOST_UP_TO:Bs,TYPES_ALMOST_DOWN_TO:Ys,TYPES_I32:Ms,TYPES_FP32:Us,TYPES_FP64:Gs,TYPES_U32:Ds,TYPES_I64:Ks,TYPES_U64:Hs,TYPES_I16:ys,TYPES_U16:ks,TYPES_I8:Fs,TYPES_U8:js,TYPES_CHAR:Zs,TYPES_BOOL:Vs,TYPES_BLOCK_BEGIN:Xs,TYPES_FUNCTION_CALL:zs}),Lt=Ws;var Qs=Object.freeze({COLON:58,COMMA:44,DIGIT_ZERO:48,DIGIT_NINE:57,DOT:46,HASHTAG:35,HORIZONTAL_TAB:9,HYPHEN_MINUS:45,LEFT_CURLY_BRACKET:123,LEFT_PARENTHESIS:40,LEFT_SQUARE_BRACKET:91,LINE_BREAK:10,NULL:0,PLUS_SIGN:43,RIGHT_CURLY_BRACKET:125,RIGHT_PARENTHESIS:41,RIGHT_SQUARE_BRACKET:93,SEMICOLON:59,SPACE:32,E_SIGN:101}),Pt=Qs;var Js=\"assignment\",qs=\"Flogram\",$s=Object.freeze({K_ASSIGNMENT:Js,K_FLOGRAM:qs}),Ct=$s;var tn=Object.freeze([[43],[45],[42],[47],[37],[110,111,116],[60],[62],[94],[111,114],[33],[61,61],[60,61],[62,61],[33,61],[120,111,114],[97,110,100]]),en=tn,gt=en;var sn=Object.freeze({INT_ARRAY_START:9999991,FLOAT_ARRAY_START:9999981,STRING_START:8888891,CHAR_START:8888881,NAT_ON_HORIZON:7777791,BIG_NAT_ON_HORIZON:7777591,FLOAT_ON_HORIZON:7777771,BIG_FLOAT_ON_HORIZON:7777731,END_OF_LINE:66666661}),wt=sn;var nn=Object.freeze({ENUM_MEMORY_SIZE:12,ENUM_STACK_SIZE:3,ARRAY_MEMORY_SIZE:12,ARRAY_STACK_SIZE:3,ARRAY_DEFAULT_CAPACITY:4,STRING_MEMORY_SIZE:8,STRING_STACK_SIZE:2,OBJECT_MEMORY_SIZE:8,OBJECT_STACK_SIZE:2,NATIVE_MEMORY_SIZE:4,NATIVE_STACK_SIZE:1,NATIVE_SIZE:4,STEP:4,DOUBLE_STEP:8,TRIPPLE_STEP:12}),Bt=nn;var rn=Object.freeze([]),on=Object.freeze({}),cn=\"\",ln=\"\t\",hn=`\n`,an=\"UTF-8\";var fn=Object.freeze({EMPTY_ARRAY:rn,EMPTY_OBJECT:on,EMPTY_STRING:cn,HORIZONTAL_TAB:ln,LINE_BREAK:hn,UNICODE_TEXT:an,Codes:Pt,Keys:bt,Types:Lt,Keywords:Ct,Operators:gt,DrawStates:wt,Sizes:Bt}),y=fn;var dr=Object.freeze([\"FP64\",\"U64\",\"I64\",\"FP32\",\"U32\",\"I32\",\"U16\",\"I16\",\"U8\",\"I8\",\"Bool\",\"Char\",\"Array\",\"String\",\"Link\",\"Maybe\"]),k=[\"U8\",\"U16\",\"U32\"],X=[...k,\"I8\",\"I16\",\"I32\"],un=[\"I64\",\"U64\"],lt=[...X,...un],_n=[\"FP32\",\"FP64\"],z=[...lt,..._n];var{EMPTY_STRING:En,UNICODE_TEXT:ut}=y;var Tn=48,xn=57,pn=46,Yt=45,Mt=43,mn=65,An=90,On=\"e\".charCodeAt(0),dn=\"E\".charCodeAt(0),Sn=-1,vn=1,Dt=new TextDecoder(ut),In=new TextEncoder,Rn=y.Operators,Nn=(c,i,l=0,E=c.length|0,a=0,x=i.length|0)=>{for(a=a|0,l=l|0,x=x|0,E=E|0;;){let m=l>=E,A=a>=x;if(m||A)break;let v=c[l],S=i[a];if(l=l+1|0,a=a+1|0,v<S)return Sn;if(v>S)return vn}return 0},bn=(c,i,l=0,E=c.length|0,a=0,x=i.length|0)=>{for(a=a|0,l=l|0,x=x|0,E=E|0;;){let m=a>=x,A=l>=E;if(m||A)break;i[a]=c[l],a=a+1|0,l=l+1|0}},kt=(c,i,l=0,E=c.length|0,a=0,x=i.length|0)=>{l=l|0,a=a|0,E=E|0,x=x|0;let m=E-l|0,A=x-a|0;if(m!==A)return!1;for(;;){let N=l>=E,v=a>=x;if(N||v)break;let I=c[l],w=i[a];if(l=l+1|0,a=a+1|0,I!==w)return!1}return!0},Ln=c=>{c=c>>>0;let i=0,l=0;for(;l=(l<<1|1)>>>0,!(l>c);)i=i+1|0;return i},jt=Object.freeze([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]),ft=(c,i,l,E)=>{for(c=c>>>0,E=E??i.length|0,l=l|0,E=E|0;c>0&&E>l;)E=E-1|0,i[E]=jt[c&15],c=c>>>4},Pn=(c,i,l,E)=>{let a=l|0,x=l+E|0;if(E===0)return!1;let m=!1,A=!1,N=!1,v=S=>S===Mt||S===Yt;for(;a<x;){let S=i[a];a=a+1|0;let I=Tn<=S&&S<=xn,w=Mt===S||S===Yt,D=pn===S,Q=Fn===S,H=S===On||S===dn;if(I){N=!0;continue}else if(w){if((a===l+1||m&&!A)&&!N)continue}else if((Q||D)&&!m&&!A||H&&!m)H&&(m=!0,a<x&&v(i[a])&&(a=a+1|0,A=!0));else return!1}return N&&(!m||m&&A)},Cn={I8:[...X],U8:[...k],I16:[...X],U16:[...k],I32:[...X],U32:[...k],I64:[...lt],U64:[...k],FP32:z,FP64:z},gn=(c,i)=>!z.includes(c)||!z.includes(i)?!1:Cn[c].includes(i),wn=c=>{let i=c>=mn,l=c<=An;return i&&l},$=128,tt=127,Ft=-1,j=64,_t=c=>{c=c|0;let i=[];for(;;){let l=c&tt;c=c>>7;let E=c===0,a=(l&j)===0,x=E&&a,m=c===-1,A=(l&j)!==0;if(x||m&&A){i.push(l);break}l=l|$,i.push(l)}return i},Bn=c=>{let i=[],l=!0;for(;l;){let E=c&tt;c>>=7,c===0&&!(E&j)||c===-1&&E&j?l=!1:E|=$,i.push(E)}return i},Gt=(c,i)=>{i=i|0;let l=0,E=0;for(;;){let a=c[i]|0;i=i+1|0;let x=(a&tt)<<E;if(E=E+7|0,l=l|x,(a&$)===0){let A=(a&j)!==0,N=E<32;if(A&&N){let S=Ft<<E;l=l|S}break}}return l},Yn=(c,i)=>{i=i|0;let l=0,E=0;for(;;){let a=c[i]|0;i=i+1|0;let x=(a&tt)<<E;if(E=E+7|0,l=l|x,!(a&$)){if(a&j){let m=Ft<<E;l=l|m}break}}return l},Mn=c=>{try{return Dt.decode(c)}catch{return Dt.decode(new Uint8Array([c]))}},Dn=c=>In.encode(c),Un=(c=En)=>{let i=c.length|0,l=_t(i),E=Buffer.from(c,ut);return Object.freeze([...l,...E])},yn=(c,i)=>{i=i|0;let l=Gt(c,i),E=_t(l).length;return i=i+E|0,c.subarray(i,i+l|0).toString(ut)},kn=58,jn=46,Fn=95,V=32,ht=48,Gn=67,M=new Uint8Array(Gn),Ut=M.subarray(0,8),q=M.subarray(10,49),yt=M.subarray(51,68),at=16,Hn=2;M[8]=kn;M[9]=V;M[49]=V;M[50]=V;var Kn=(c,i)=>{i=i??console.log;let l=32,E=126,a=c.length|0,x=0;for(;a>0;){Ut.fill(ht),ft(x,Ut),q.fill(V),yt.fill(V);let m=a>=at?at:a;a=a-at|0;let A=0,N=0;for(let S=1;S<=m;S=S+1|0){let I=c[x]&255;q[A+0|0]=ht,q[A+1|0]=ht,ft(I,q,A,A+2|0);let w=jn;l<=I&&I<=E&&(w=I),yt[N]=w,x=x+1|0,A=A+2|0,N=N+1|0,S%Hn===0&&(A=A+1|0)}let v=String.fromCodePoint(...M);i(v)}},Zn=function*(c,i){let l=c.length|0,E=i.length|0,a=0;for(;a<l&&a<E;){let x=c[a],m=i[a];yield[x,m],a=a+1|0}},Xn=function*(c,i,l){let E=c.length|0,a=i.length|0,x=l.length|0,m=0;for(;m<E&&m<a&&m<x;){let A=c[m],N=i[m],v=l[m];yield[A,N,v],m=m+1|0}},zn=c=>{for(let i of Rn)if(kt(c,i))return!0;return!1},Vn=Object.freeze({ARRAY_COMPARE:Nn,ARRAY_COPY:bn,ARRAY_EQUAL:kt,BIT_DEPTH:Ln,HEX_DIGITS:jt,HEX_ENCODE:ft,IS_NUMBER:Pn,IS_UPPERCASE:wn,IS_VALID_AUTO_CAST:gn,LEB128_DECODE:Gt,LEB128_DECODE_SIGNED:Yn,LEB128_ENCODE:_t,LEB128_ENCODE_SIGNED:Bn,UTF8_DECODE:Mn,UTF8_ENCODE:Dn,WASM_STRING_ENCODE:Un,WASM_STRING_DECODE:yn,XXD_DUMP_HEX:Kn,ZIP2:Zn,ZIP3:Xn,IS_OPERATOR:zn}),Ht=Vn;var{Codes:L}=y,{EMPTY_STRING:Cr}=y,{ARRAY_COPY:Wn}=Ht,Qn=Object.freeze({tabSize:4}),Xt=new Set([40,41,91,93,123,125,46,44,58,59,64,61,47]);Object.freeze(Xt);var zt=new Set([46,95]);Object.freeze(zt);var Vt=new Set([34,39]),Wt=new Set([61,33,62,60]);Object.freeze(Wt);var Qt=new Set([43,45,42,47,37]);Object.freeze(Qt);var Kt=61,Jn=58,qn=64,$n=47,tr=45,er=62,sr=33;Object.freeze(Vt);var Jt=new Set([9,13,32]);Object.freeze(Jt);var W=1,F=2,Et=3,G=4,nr=(c,i,l)=>{if(i=i|0,l=l|0,(l-i|0)===0)return!1;let a=c[i];for((a===L.PLUS_SIGN||a===L.HYPHEN_MINUS)&&(i=i+1|0);i<l;){let x=c[i];i=i+1|0;let m=L.DIGIT_ZERO<=x&&x<=L.DIGIT_NINE,A=L.DOT===x||L.COMMA===x;if(!(m||A&&i<l&&L.DIGIT_ZERO<=c[i]&&c[i]<=L.DIGIT_NINE))return!1}return!0},U=class{constructor(i=Qn){this.options=i,this.numberMark=!1,this.position=0,this.array=new Uint8Array(U.LIMIT_ARRAY),this.target=0,this.length=0,this.indexA=0,this.indexB=0,this.events=new Map,this.emitter=new Zt.default,this.emitter.on(\"token\",(l,E,a,x)=>{(this.events.get(\"token\")||[]).forEach(A=>{A(l,E,a,x)})}),this.emitter.on(\"error\",()=>{}),this.comment=!1,this.situation=W,this.quote=L.NULL,Object.seal(this)}on(i,l){if(U.SET_EVENTS.has(i)){let E=this.events.get(i)||[];E.push(l),this.events.set(i,E)}}feed(i){let l=i.length|0,E=0,a=0,x=l;for(;x>0;){let m=U.LIMIT_ARRAY-this.length|0,A=Math.min(m,x)|0;x=x-A|0,a=a+A|0,Wn(i,this.array,E,a,this.target),this.length=this.length+A|0,this.flush(),E=E+A|0}}done(){this.array[this.indexB]=L.SPACE,this.length=this.length+1,this.flush()}flush(){for(;this.indexB<this.length;)switch(this.situation){case W:{this.flushTopLevel();break}case F:{this.flushQuotation();break}case Et:{this.flushComment();break}}let i=this.length-this.indexA|0;i>U.LIMIT_TOKEN||(i>0&&(this.array.copyWithin(0,this.indexA,this.indexB),this.indexA=0,this.indexB=i,this.target=i),this.length=i)}flushComment(){for(;this.indexB<this.length;){if((this.array[this.indexB]|0)===L.LINE_BREAK){this.drain(\"comment\"),this.indexB=this.indexB+1|0,this.drain(\"token\"),this.comment=!1,this.situation=W;break}this.indexB=this.indexB+1|0}this.comment===!0&&(this.length-this.indexA|0)>0&&this.drain(\"comment\")}flushQuotation(){for(;this.indexB<this.length;){let i=this.array[this.indexB]|0;if(i===this.quote){if(this.situation!==G){this.drain(\"token\"),this.quote=L.NULL,this.indexA=this.indexB,this.indexB++,this.drain(\"token\"),this.indexA=this.indexB,this.situation=W;return}this.indexB++;continue}if(this.situation===F&&i===L.LEFT_CURLY_BRACKET){this.drain(\"token\"),this.indexB++,this.indexA=this.indexB-1,this.drain(\"token\"),this.indexA=this.indexB,this.situation=G;continue}if(this.situation===G&&i===L.RIGHT_CURLY_BRACKET){this.drain(\"token\"),this.indexB++,this.indexA=this.indexB-1,this.drain(\"token\"),this.indexA=this.indexB,this.situation=F;continue}if(this.situation===G){this.flushTopLevel();continue}this.indexB++}}flushTopLevel(){let{options:i}=this,{tabSize:l}=i;for(;this.indexB<this.length;){let E=()=>{let I=0;this.numberMark&&(this.indexB=this.indexB-1|0),I=this.indexB-this.indexA|0,I>0&&this.drain(\"token\"),this.numberMark&&(this.indexB=this.indexB+1|0),I=this.indexB-this.indexA|0,I>0&&this.drain(\"token\"),this.numberMark=!1},a=this.array[this.indexB]|0;if(a===L.RIGHT_CURLY_BRACKET&&this.situation===G){E(),this.indexB=this.indexB+1|0,this.drain(\"token\"),this.situation=F;return}if(a===L.HASHTAG){E(),this.indexB=this.indexB+1|0,this.drain(\"token\"),this.comment=!0,this.situation=Et;return}if(a===L.LINE_BREAK){E(),this.indexB=this.indexB+1|0,this.drain(\"token\");continue}if(Vt.has(a)){E(),this.indexB=this.indexB+1|0,this.drain(\"token\"),this.quote=a,this.situation=F;return}if(Wt.has(a)){if(this.array[this.indexB+1]===Kt){E(),this.indexB=this.indexB+2|0,this.drain(\"token\");continue}if(a!=sr){E(),this.indexB=this.indexB+1|0,this.drain(\"token\");continue}}if(a===qn&&this.array[this.indexB+1]===$n){E(),this.indexB=this.indexB+2|0,this.drain(\"token\");continue}if(a===Jn&&this.array[this.indexB+1]===Kt){E(),this.indexB=this.indexB+2|0,this.drain(\"token\");continue}if(Jt.has(a)){E(),a===L.HORIZONTAL_TAB?this.position=this.position+l|0:this.position=this.position+1|0,this.indexA=this.indexA+1|0,this.indexB=this.indexB+1|0;continue}if(this.numberMark=!1,Xt.has(a)){let I=!nr(this.array,this.indexA,this.indexB),w=!zt.has(a);if(I||w){E(),this.indexB=this.indexB+1|0,this.drain(\"token\");continue}this.numberMark=!0}if(Qt.has(a))if(a===tr){let I=this.array[this.indexB+1]|0;if(I===er){E(),this.indexB=this.indexB+2|0,this.drain(\"token\");continue}else if(!(L.DIGIT_ZERO<=I&&I<=L.DIGIT_NINE)){E(),this.indexB=this.indexB+1|0,this.drain(\"token\");continue}}else{E(),this.indexB=this.indexB+1|0,this.drain(\"token\");continue}this.indexB=this.indexB+1|0}}drain(i){let{array:l,position:E}=this,a=this.indexB-this.indexA|0,x=this.indexA;this.emitter.emit(i,E,l,x,a),this.position=this.position+a|0,this.indexA=this.indexB|0}close(){}},B=U;Z(B,\"LIMIT_TOKEN\",2e3),Z(B,\"LIMIT_ARRAY\",U.LIMIT_TOKEN*2|0),Z(B,\"SET_EVENTS\",new Set([\"comment\",\"error\",\"token\"])),Z(B,\"SET_SITUATIONS\",new Set([W,F,Et,G]));Object.values(B).forEach(Object.freeze);Object.freeze(B);Object.freeze(Object.getPrototypeOf(B));var gr=B;\n/*! Bundled license information:\n\neventemitter2/lib/eventemitter2.js:\n  (*!\n   * EventEmitter2\n   * https://github.com/hij1nx/EventEmitter2\n   *\n   * Copyright (c) 2013 hij1nx\n   * Licensed under the MIT license.\n   *)\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@munezero/floparser/Tokenizer/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@munezero/floparser/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@munezero/floparser/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Compiler: () => (/* reexport safe */ _Compilers_SimplerWASM_index_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   Dates: () => (/* reexport safe */ _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDate),\n/* harmony export */   Draw: () => (/* reexport safe */ _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDrawer),\n/* harmony export */   MemoryManager: () => (/* reexport safe */ _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createMemoryManager),\n/* harmony export */   Parser: () => (/* reexport safe */ _SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   SIMPLE_IMPORTS: () => (/* reexport safe */ _Tests_Shared_index_mjs__WEBPACK_IMPORTED_MODULE_4__.SIMPLE_IMPORTS),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _Tokenizer_index_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   runner: () => (/* binding */ runner)\n/* harmony export */ });\n/* harmony import */ var _Tokenizer_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tokenizer/index.mjs */ \"(ssr)/./node_modules/@munezero/floparser/Tokenizer/index.mjs\");\n/* harmony import */ var _SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SimpleParser/index.mjs */ \"(ssr)/./node_modules/@munezero/floparser/SimpleParser/index.mjs\");\n/* harmony import */ var _Compilers_SimplerWASM_index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Compilers/SimplerWASM/index.mjs */ \"(ssr)/./node_modules/@munezero/floparser/Compilers/SimplerWASM/index.mjs\");\n/* harmony import */ var _Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Compilers/MemoryManager/index.mjs */ \"(ssr)/./node_modules/@munezero/floparser/Compilers/MemoryManager/index.mjs\");\n/* harmony import */ var _Tests_Shared_index_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tests/Shared/index.mjs */ \"(ssr)/./node_modules/@munezero/floparser/Tests/Shared/index.mjs\");\n\n\n\n\n\n\n//npm publish --access=public\n\nconst runner = async ({value, outputElement}) => {\n    let output = '';\n\n    let failures = [];\n\n    let representation = null;\n\n    const ENCODER = new TextEncoder();\n\n    const tokenizer = new _Tokenizer_index_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\n    const parser = _SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n        path: 'Module',\n        imports: _Tests_Shared_index_mjs__WEBPACK_IMPORTED_MODULE_4__.SIMPLE_IMPORTS\n    });\n\n    parser.on(_SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].EVENT_FAIL, (failure) => {\n        failures = [...failures, failure];\n        representation = null;\n    });\n\n    parser.on(_SimpleParser_index_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].EVENT_DONE, (data) => {\n        representation = data;\n    });\n\n    tokenizer.on('token', (position, array, index, length) => {\n        parser.feed(position, array, index, length);\n    });\n\n    tokenizer.feed(ENCODER.encode(value));\n\n    tokenizer.done();\n\n    parser.done();\n\n    const execute = async (glue, module) => {\n        let key;\n        for (const [iKey, value] of Object.entries(glue.procedures)) {\n            const { name, path } = value;\n            if (name === 'main' && path === 'Module') {\n                key = iKey;\n                break;\n            }\n        }\n        if (key) {\n            try {\n                const memory = new WebAssembly.Memory({\n                    initial: 128\n                });\n\n                const state = (0,_Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createMemoryManager)(memory);\n                const drawer = (0,_Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDrawer)(memory, outputElement);\n                const dates = (0,_Compilers_MemoryManager_index_mjs__WEBPACK_IMPORTED_MODULE_3__.createDate)();\n\n                const descriptionImports = Object.freeze({\n                    imports: {}\n                });\n\n                const memoryImport = 'memory';\n\n                Object.keys(glue.imports).forEach((importKey) => {\n                    if (state[importKey]) {\n                        descriptionImports.imports[importKey] = state[importKey];\n                    }\n                    if (drawer[importKey]) {\n                        descriptionImports.imports[importKey] = drawer[importKey];\n                    }\n                    if (dates[importKey]) {\n                        descriptionImports.imports[importKey] = dates[importKey];\n                    }\n                    if (importKey === memoryImport) {\n                        descriptionImports.imports[importKey] = memory;\n                    }\n                });\n\n                const moduleCompiled = await WebAssembly.compile(module);\n                const moduleInstance = await WebAssembly.instantiate(moduleCompiled, descriptionImports);\n\n                const procedure = moduleInstance.exports[key];\n                if (procedure) {\n                    if (!outputElement) {\n                        failures.push({\n                            message: 'Error: Output element not found. Click \"Run\" again for re-evaluation',\n                            type: 100,\n                            position: 0,\n                            length: 0\n                        })\n                    }\n\n                    if (outputElement) {\n                        outputElement.innerHTML = '';\n                    }\n                    let value = procedure();\n\n                    if (outputElement){\n                        output = outputElement.innerHTML;\n                    }\n\n                    return value;\n                }\n            } catch (e) {\n                failures.push({\n                    message: e.message,\n                    type: 100,\n                    position: 0,\n                    length: 0\n                })\n                return null;\n            }\n        }\n        else{\n            failures.push({\n                message: 'Error: Missing main function. Every Flogram program must include an entry point defined as the main function.',\n                type: 101,\n                position: 0,\n                length: 0\n            })\n\n            return null;\n        }\n    };\n\n    if (representation) {\n        const compilerOptions = Object.freeze({\n            memory: true\n        });\n\n        const [glue, module] = _Compilers_SimplerWASM_index_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].compile(representation, compilerOptions);\n        const value = await execute(glue, module);\n\n        return { failures, value }\n    }\n    else{\n        //couldn't parse, return parsing errors\n        return { failures, value: null}\n    }\n};\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG11bmV6ZXJvL2Zsb3BhcnNlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQTZDO0FBQ0E7QUFDVztBQUM0RTtBQUMzRTs7QUFFekQ7O0FBRUEsdUJBQXVCLHFCQUFxQjtBQUM1Qzs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSwwQkFBMEIsNERBQVM7O0FBRW5DLG1CQUFtQiwrREFBTTtBQUN6QjtBQUNBLGlCQUFpQixtRUFBYztBQUMvQixLQUFLOztBQUVMLGNBQWMsK0RBQU07QUFDcEI7QUFDQTtBQUNBLEtBQUs7O0FBRUwsY0FBYywrREFBTTtBQUNwQjtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLEtBQUs7O0FBRUw7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGFBQWE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCOztBQUVqQiw4QkFBOEIsdUZBQWE7QUFDM0MsK0JBQStCLGdGQUFJO0FBQ25DLDhCQUE4Qiw4RUFBSzs7QUFFbkM7QUFDQTtBQUNBLGlCQUFpQjs7QUFFakI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7O0FBRWpCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7O0FBRWI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQsK0JBQStCLHdFQUFRO0FBQ3ZDOztBQUVBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTs7QUFFd0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcSkFTT05cXERlc2t0b3BcXE5ldyBmb2xkZXJcXG5vZGVfbW9kdWxlc1xcQG11bmV6ZXJvXFxmbG9wYXJzZXJcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUb2tlbml6ZXIgZnJvbSAnLi9Ub2tlbml6ZXIvaW5kZXgubWpzJ1xuaW1wb3J0IFBhcnNlciBmcm9tICcuL1NpbXBsZVBhcnNlci9pbmRleC5tanMnXG5pbXBvcnQgQ29tcGlsZXIgZnJvbSAnLi9Db21waWxlcnMvU2ltcGxlcldBU00vaW5kZXgubWpzJ1xuaW1wb3J0IHsgY3JlYXRlTWVtb3J5TWFuYWdlciBhcyBNZW1vcnlNYW5hZ2VyLCBjcmVhdGVEcmF3ZXIgYXMgRHJhdywgY3JlYXRlRGF0ZSBhcyBEYXRlc30gZnJvbSAnLi9Db21waWxlcnMvTWVtb3J5TWFuYWdlci9pbmRleC5tanMnXG5pbXBvcnQgeyBTSU1QTEVfSU1QT1JUUyB9IGZyb20gJy4vVGVzdHMvU2hhcmVkL2luZGV4Lm1qcydcblxuLy9ucG0gcHVibGlzaCAtLWFjY2Vzcz1wdWJsaWNcblxuY29uc3QgcnVubmVyID0gYXN5bmMgKHt2YWx1ZSwgb3V0cHV0RWxlbWVudH0pID0+IHtcbiAgICBsZXQgb3V0cHV0ID0gJyc7XG5cbiAgICBsZXQgZmFpbHVyZXMgPSBbXTtcblxuICAgIGxldCByZXByZXNlbnRhdGlvbiA9IG51bGw7XG5cbiAgICBjb25zdCBFTkNPREVSID0gbmV3IFRleHRFbmNvZGVyKCk7XG5cbiAgICBjb25zdCB0b2tlbml6ZXIgPSBuZXcgVG9rZW5pemVyKCk7XG5cbiAgICBjb25zdCBwYXJzZXIgPSBQYXJzZXIuY3JlYXRlKHtcbiAgICAgICAgcGF0aDogJ01vZHVsZScsXG4gICAgICAgIGltcG9ydHM6IFNJTVBMRV9JTVBPUlRTXG4gICAgfSk7XG5cbiAgICBwYXJzZXIub24oUGFyc2VyLkVWRU5UX0ZBSUwsIChmYWlsdXJlKSA9PiB7XG4gICAgICAgIGZhaWx1cmVzID0gWy4uLmZhaWx1cmVzLCBmYWlsdXJlXTtcbiAgICAgICAgcmVwcmVzZW50YXRpb24gPSBudWxsO1xuICAgIH0pO1xuXG4gICAgcGFyc2VyLm9uKFBhcnNlci5FVkVOVF9ET05FLCAoZGF0YSkgPT4ge1xuICAgICAgICByZXByZXNlbnRhdGlvbiA9IGRhdGE7XG4gICAgfSk7XG5cbiAgICB0b2tlbml6ZXIub24oJ3Rva2VuJywgKHBvc2l0aW9uLCBhcnJheSwgaW5kZXgsIGxlbmd0aCkgPT4ge1xuICAgICAgICBwYXJzZXIuZmVlZChwb3NpdGlvbiwgYXJyYXksIGluZGV4LCBsZW5ndGgpO1xuICAgIH0pO1xuXG4gICAgdG9rZW5pemVyLmZlZWQoRU5DT0RFUi5lbmNvZGUodmFsdWUpKTtcblxuICAgIHRva2VuaXplci5kb25lKCk7XG5cbiAgICBwYXJzZXIuZG9uZSgpO1xuXG4gICAgY29uc3QgZXhlY3V0ZSA9IGFzeW5jIChnbHVlLCBtb2R1bGUpID0+IHtcbiAgICAgICAgbGV0IGtleTtcbiAgICAgICAgZm9yIChjb25zdCBbaUtleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGdsdWUucHJvY2VkdXJlcykpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgbmFtZSwgcGF0aCB9ID0gdmFsdWU7XG4gICAgICAgICAgICBpZiAobmFtZSA9PT0gJ21haW4nICYmIHBhdGggPT09ICdNb2R1bGUnKSB7XG4gICAgICAgICAgICAgICAga2V5ID0gaUtleTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoa2V5KSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG1lbW9yeSA9IG5ldyBXZWJBc3NlbWJseS5NZW1vcnkoe1xuICAgICAgICAgICAgICAgICAgICBpbml0aWFsOiAxMjhcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRlID0gTWVtb3J5TWFuYWdlcihtZW1vcnkpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGRyYXdlciA9IERyYXcobWVtb3J5LCBvdXRwdXRFbGVtZW50KTtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRlcyA9IERhdGVzKCk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBkZXNjcmlwdGlvbkltcG9ydHMgPSBPYmplY3QuZnJlZXplKHtcbiAgICAgICAgICAgICAgICAgICAgaW1wb3J0czoge31cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IG1lbW9yeUltcG9ydCA9ICdtZW1vcnknO1xuXG4gICAgICAgICAgICAgICAgT2JqZWN0LmtleXMoZ2x1ZS5pbXBvcnRzKS5mb3JFYWNoKChpbXBvcnRLZXkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXRlW2ltcG9ydEtleV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uSW1wb3J0cy5pbXBvcnRzW2ltcG9ydEtleV0gPSBzdGF0ZVtpbXBvcnRLZXldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChkcmF3ZXJbaW1wb3J0S2V5XSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb25JbXBvcnRzLmltcG9ydHNbaW1wb3J0S2V5XSA9IGRyYXdlcltpbXBvcnRLZXldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRlc1tpbXBvcnRLZXldKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbkltcG9ydHMuaW1wb3J0c1tpbXBvcnRLZXldID0gZGF0ZXNbaW1wb3J0S2V5XTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoaW1wb3J0S2V5ID09PSBtZW1vcnlJbXBvcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uSW1wb3J0cy5pbXBvcnRzW2ltcG9ydEtleV0gPSBtZW1vcnk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IG1vZHVsZUNvbXBpbGVkID0gYXdhaXQgV2ViQXNzZW1ibHkuY29tcGlsZShtb2R1bGUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1vZHVsZUluc3RhbmNlID0gYXdhaXQgV2ViQXNzZW1ibHkuaW5zdGFudGlhdGUobW9kdWxlQ29tcGlsZWQsIGRlc2NyaXB0aW9uSW1wb3J0cyk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBwcm9jZWR1cmUgPSBtb2R1bGVJbnN0YW5jZS5leHBvcnRzW2tleV07XG4gICAgICAgICAgICAgICAgaWYgKHByb2NlZHVyZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIW91dHB1dEVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZhaWx1cmVzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdFcnJvcjogT3V0cHV0IGVsZW1lbnQgbm90IGZvdW5kLiBDbGljayBcIlJ1blwiIGFnYWluIGZvciByZS1ldmFsdWF0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAxMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiAwXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKG91dHB1dEVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gcHJvY2VkdXJlKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKG91dHB1dEVsZW1lbnQpe1xuICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0ID0gb3V0cHV0RWxlbWVudC5pbm5lckhUTUw7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGZhaWx1cmVzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlLm1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IDEwMCxcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IDAsXG4gICAgICAgICAgICAgICAgICAgIGxlbmd0aDogMFxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAgIGZhaWx1cmVzLnB1c2goe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdFcnJvcjogTWlzc2luZyBtYWluIGZ1bmN0aW9uLiBFdmVyeSBGbG9ncmFtIHByb2dyYW0gbXVzdCBpbmNsdWRlIGFuIGVudHJ5IHBvaW50IGRlZmluZWQgYXMgdGhlIG1haW4gZnVuY3Rpb24uJyxcbiAgICAgICAgICAgICAgICB0eXBlOiAxMDEsXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IDAsXG4gICAgICAgICAgICAgICAgbGVuZ3RoOiAwXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBpZiAocmVwcmVzZW50YXRpb24pIHtcbiAgICAgICAgY29uc3QgY29tcGlsZXJPcHRpb25zID0gT2JqZWN0LmZyZWV6ZSh7XG4gICAgICAgICAgICBtZW1vcnk6IHRydWVcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgW2dsdWUsIG1vZHVsZV0gPSBDb21waWxlci5jb21waWxlKHJlcHJlc2VudGF0aW9uLCBjb21waWxlck9wdGlvbnMpO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGF3YWl0IGV4ZWN1dGUoZ2x1ZSwgbW9kdWxlKTtcblxuICAgICAgICByZXR1cm4geyBmYWlsdXJlcywgdmFsdWUgfVxuICAgIH1cbiAgICBlbHNle1xuICAgICAgICAvL2NvdWxkbid0IHBhcnNlLCByZXR1cm4gcGFyc2luZyBlcnJvcnNcbiAgICAgICAgcmV0dXJuIHsgZmFpbHVyZXMsIHZhbHVlOiBudWxsfVxuICAgIH1cbn07XG5cbmV4cG9ydCB7cnVubmVyLCBQYXJzZXIsIFRva2VuaXplciwgQ29tcGlsZXIsIE1lbW9yeU1hbmFnZXIsIERyYXcsIERhdGVzLCBTSU1QTEVfSU1QT1JUU31cblxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@munezero/floparser/index.js\n");

/***/ })

};
;